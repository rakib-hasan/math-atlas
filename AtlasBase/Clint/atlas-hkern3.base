@ifdef ! incd
   @define incd @/home/rwhaley/Base/ATLAS@
@endifdef
@extract -b @(topd)/gen.inc what=crsetup
@extract -b @(topd)/gen.inc what=cw @(cw99)
@ROUT atlas_kern3.h
#ifndef ATLAS_KERN3_H
#define ATLAS_KERN3_H

#include "atlas_misc.h"
@skip #include Mstr(Mjoin(Mjoin(atlas_,PRE),NCmm.h))
#include "atlas_lvl3.h"
#include "atlas_kernel3.h"
#include "atlas_reflevel3.h"
#include "atlas_amm.h"
#include Mstr(Mjoin(ATLAS_PRE,opgen_view.h))
@skip #include Mstr(Mjoin(Mjoin(atlas_,PRE),opsq_perf.h))
@skip #include Mstr(Mjoin(Mjoin(atlas_,PRE),amm_sum.h))
/*
 * Gemm entry points
 */
#ifndef ATL_gemm
   #define ATL_gemm Mjoin(PATL,gemm)
#endif
#define ATL_almm Mjoin(PATL,ammm_aliased_rkK)
@beginskip
#define CgemmNN Mjoin(PATL,gemmNN)
#define CgemmNT Mjoin(PATL,gemmNT)
#define CgemmTN Mjoin(PATL,gemmTN)
#define CgemmNC Mjoin(PATL,gemmNC)
#define CgemmCN Mjoin(PATL,gemmCN)

#define CAgemmNN Mjoin(PATL,aliased_gemmNN)
#define CAgemmTN Mjoin(PATL,aliased_gemmTN)
@endskip

#ifdef Left_
   #define Side_ AtlasLeft
   #define SideNM L
#elif defined(Right_)
   #define Side_ AtlasRight
   #define SideNM R
#endif

#ifdef Upper_
   #define Uplo_ AtlasUpper
   #define UploNM U
#elif defined(Lower_)
   #define Uplo_ AtlasLower
   #define UploNM L
#endif

#ifdef UnitDiag_
   #define Unit_ AtlasUnit
   #define UnitNM U
#elif defined(NonUnitDiag_)
   #define Unit_ AtlasNonUnit
   #define UnitNM N
#endif

#ifdef Transpose_
   #define Trans_ AtlasTrans
   #define TransNM T
#elif defined(Notranspose_)
   #define Trans_ AtlasNoTrans
   #define TransNM N
#elif defined(ConjTrans_)
   #define Trans_ AtlasConjTrans
   #define TransNM C
#endif

#if ATL_VWopgen_MAX_KB < 48
   #define ATL_XOVER ATL_VWopgen_MAX_KB
#else
   #define ATL_XOVER 48
#endif
@whiledef rt SYMM HEMM SYRK HERK SYR2K HER2K TRMM TRSM
#ifndef @(rt)_Xover
   #define @(rt)_Xover ATL_XOVER
#endif
@endwhile

#endif
@ROUT atlas_kernel3.h
#ifndef ATLAS_KERNEL3_H
#define ATLAS_KERNEL3_H

/*
 * Real level 3 kernels
 */
@whiledef pre d s
   @whiledef rt symmLL symmRL symmLU symmRU
void ATL_@(pre)@(rt)
   (const int M, const int N, const void *alpha, const void *A, const int lda,
    const void *B, const int ldb, const void *beta, void *C, const int ldc);
   @endwhile
   @whiledef si R L
      @whiledef up U L
         @whiledef ta N T
            @whiledef di U N
               @whiledef rt trmm trsm
void ATL_@(pre)@(rt)@(si)@(up)@(ta)@(di)
   (const int M, const int N, const void *valpha, const void *A, const int lda,
    void *C, const int ldc);
               @endwhile
            @endwhile
         @endwhile
      @endwhile
   @endwhile
   @whiledef rt syrkUN syrkLN syrkUT syrkLT
int ATL_@(pre)@(rt)
   (const int N, const int K, const void *valpha, const void *A, const int lda,
    const void *vbeta, void *C, const int ldc);
   @endwhile
   @whiledef rt syr2kUN syr2kLN syr2kUT syr2kLT
int ATL_@(pre)@(rt)
   (const int N, const int K, const void *valpha, const void *A, const int lda,
    const void *B, const int ldb, const void *vbeta, void *C, const int ldc);
   @endwhile
@endwhile

/*
 * Complex level 3 kernels
 */
@whiledef pre z c
   @multidef rt symmLL symmRL symmLU symmRU
   @whiledef rt hemmLL hemmRL hemmLU hemmRU
void ATL_@(pre)@(rt)
   (const int M, const int N, const void *alpha, const void *A, const int lda,
    const void *B, const int ldb, const void *beta, void *C, const int ldc);
   @endwhile
   @whiledef si R L
      @whiledef up U L
         @whiledef ta C N T
            @whiledef di U N
               @whiledef rt trmm trsm
void ATL_@(pre)@(rt)@(si)@(up)@(ta)@(di)
   (const int M, const int N, const void *valpha, const void *A, const int lda,
    void *C, const int ldc);
               @endwhile
            @endwhile
         @endwhile
      @endwhile
   @endwhile
   @multidef rt syrkUN syrkLN syrkUT syrkLT
   @whiledef rt herkUN herkLN herkUC herkLC
int ATL_@(pre)@(rt)
   (const int N, const int K, const void *valpha, const void *A, const int lda,
    const void *vbeta, void *C, const int ldc);
   @endwhile
   @multidef rt syr2kUN syr2kLN syr2kUT syr2kLT
   @whiledef rt her2kUN her2kLN her2kUC her2kLC
int ATL_@(pre)@(rt)
   (const int N, const int K, const void *valpha, const void *A, const int lda,
    const void *B, const int ldb, const void *vbeta, void *C, const int ldc);
   @endwhile
@endwhile

/*
 * Real level 3 kernel auxiliaries
 */
@multidef sca double@^ float@^
@multidef typ double float
@whiledef pre d s
   @whiledef al X 1 0
      @multidef rt trcopyL2U_U trcopyL2U_N trcopyL2L_U trcopyL2L_N
      @multidef rt trcopyU2U_U trcopyU2U_N trcopyU2L_U trcopyU2L_N
      @whiledef rt sycopyL sycopyU
void ATL_@(pre)@(rt)_a@(al)
   (const int N, const @(sca)alpha, const @(typ) *A, const int lda, @(typ) *C);
      @endwhile
   @endwhile
   @whiledef rt trinvertLN trinvertUN trinvertLU trinvertUU
void ATL_@(pre)@(rt)(const int N, @(typ) *A, const int lda);
   @endwhile
   @whiledef be 0 1 X
      @whiledef rt trputL trputU syr2k_putL syr2k_putU
void ATL_@(pre)@(rt)_b@(be)
   (const int N, const @(typ) *v, const @(sca)beta, @(typ) *A, const int lda);
      @endwhile
   @endwhile
   @whiledef si R L
      @whiledef up U L
         @whiledef ta N T
            @whiledef di U N
void ATL_@(pre)trsmK@(si)@(up)@(ta)@(di)
   (const int M, const int N, const @(sca)alpha, const @(typ) *A, 
    const int lda, @(typ) *C, const int ldc);
            @endwhile
         @endwhile
      @endwhile
   @endwhile
   @undef sca
   @undef typ
@endwhile

/*
 * Complex level 3 kernel auxiliaries
 */
@multidef sca double@^* float@^*
@multidef typ double float
@whiledef pre z c
void ATL_@(pre)CtrsmKL
   (enum ATLAS_UPLO Uplo, enum ATLAS_TRANS Trans, enum ATLAS_DIAG Diag,
    const int M, const int N, const @(typ) *alpha, const @(typ) *A,
    const int lda, @(typ) *B, const int ldb);
   @multidef rt trcopyL2Uc_U trcopyL2U_U trcopyL2Uc_N trcopyL2U_N
   @multidef rt trcopyL2Lc_U trcopyL2L_U trcopyL2Lc_N trcopyL2L_N
   @multidef rt trcopyU2Uc_U trcopyU2U_U trcopyU2Uc_N trcopyU2U_N
   @multidef rt trcopyU2Lc_U trcopyU2L_U trcopyU2Lc_N trcopyU2L_N
   @whiledef rt sycopy hecopy
void ATL_@(pre)@(rt)
   (const int N, const @(typ) *A, const int lda, @(typ) *C);
   @endwhile
   @multidef rt trmv_scalUNN_aX trmv_scalUNU_an1
   @whiledef rt trmv_scalLNN_aX trmv_scalLNU_an1 
void ATL_@(pre)@(rt)
   (const int N, const @(sca)alpha, const @(typ) *A, const int lda, @(typ) *X);
   @endwhile
   @whiledef rt trinvertLN trinvertUN trinvertLU trinvertUU
void ATL_@(pre)@(rt)(const int N, @(typ) *A, const int lda);
   @endwhile
   @whiledef be n1 Xi0 X 1 0
      @whiledef rt syr2k_putL syr2k_putU trputL trputU
void ATL_@(pre)@(rt)_b@(be)
   (const int N, const @(typ) *v, const @(sca)beta, @(typ) *A, const int lda);
      @endwhile
   @endwhile
   @whiledef be Xi0 1 0
      @whiledef rt heputL heputU her2k_putL her2k_putU
void ATL_@(pre)@(rt)_b@(be)
   (const int N, const @(typ) *v, const @(sca)beta, @(typ) *A, const int lda);
      @endwhile
   @endwhile
   @whiledef si R L
      @whiledef up U L
         @whiledef ta C N T
            @whiledef di U N
void ATL_@(pre)trsm0@(si)@(up)@(ta)@(di)
   (const int M, const int N, const @(sca)alpha, const @(typ) *A, 
    const int lda, @(typ) *C, const int ldc);
            @endwhile
         @endwhile
      @endwhile
   @endwhile
   @undef sca
   @undef typ
@endwhile

#endif
