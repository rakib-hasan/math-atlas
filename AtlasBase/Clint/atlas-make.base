@skip @define tonypt @1@
@ifdef ! incd
   @define incd @/home/rwhaley/Base/ATLAS@
@endifdef
@ROUT ATLrun.sh
#!/bin/sh
atldir=$1
shift
$atldir/$*
#mach=MyMach
#rdir=/tmp
#atldir=$1
#shift
#exe=$1
#shift
#scp $atldir/$exe $mach:$(rdir)/$exe
#ssh $mach "cd $rdir ; ./$exe $*"
@ROUT archdirs
@multidef archdir
   bin
   timing
   lib
   src/testing 
   src/auxil 
   src/blas/reference/level1 
   src/blas/reference/level2 
   src/blas/reference/level3 
   src/blas/f77reference
   src/blas/gemv 
   src/blas/ger 
   src/blas/ammm 
@skip   src/blas/gemm 
@skip   src/blas/kbmm 
@skip   src/blas/gemm/GOTO
   src/blas/level1 
   src/blas/level2 
   src/blas/level2/kernel
@skip   src/blas/pklevel3
@skip   src/blas/pklevel3/gpmm
@skip   src/blas/pklevel3/sprk
   src/blas/level3 
   src/blas/level3/rblas 
   src/blas/level3/kernel 
   src/lapack/amm
   src/lapack 
   src/threads/blas/level3
   src/threads/blas/level2
   src/threads/lapack/amm
   src/threads/lapack
   src/threads/cbc
   src/threads/cbc2d
   src/threads
   EXtest
   results/raw
   results/tvecs
   results/charts
   results
   tune/blas/gemm   
   tune/blas/gemv   
   tune/blas/ger    
   tune/blas/level1
   tune/blas/level3 
   tune/lapack
   tune/sysinfo 
   tune/threads
   interfaces/blas/C/src 
   interfaces/blas/C/testing 
   interfaces/blas/F77/src 
   interfaces/blas/F77/testing 
   interfaces/lapack/C/src 
   interfaces/lapack/F77/src 
   interfaces/lapack/C2F/src 
@endmultidef
@skip   interfaces/lapack/C/testing 
@skip   interfaces/lapack/F77/testing 
@ROUT Makefile
SHELL = /bin/sh
CC = gcc
NM = -o
OJ = -c

config: xconfig
	./xconfig
	rm -f ./xconfig

DoNothing:
searchconf: 
	$(KC) -DForceSearch -o xconfig config.c
	./xconfig
	rm -f ./xconfig

xconfig : config.c
	$(KC) -o xconfig config.c

xatlas_tee : bin/atlas_tee.c
	$(KC) -o xatlas_tee bin/atlas_tee.c

error_report:
	$(MAKE) -f Make.top error_report arch=$(arch)

install :
	$(MAKE) -f Make.top install arch=$(arch)

dup0 :
	$(MAKE) -f Make.top dup0 arch=$(arch) arch0=$(arch0)
dup :
	sed -e 's/ARCH = $(arch0)/ARCH = $(arch)/' Make.$(arch0) > Make.$(arch)
	$(MAKE) -f Make.top dup arch=$(arch) arch0=$(arch0)
startup  :
	$(MAKE) -f Make.top startup arch=$(arch)
refresh  :
	$(MAKE) -f Make.top refresh arch=$(arch)
clean    :
	$(MAKE) -f Make.top clean   arch=$(arch)
kill     :
	$(MAKE) -f Make.top kill    arch=$(arch)
killall  :
	$(MAKE) -f Make.top killall arch=$(arch)
sanity_test:
	$(MAKE) -f Make.top sanity_test arch=$(arch)
ptsanity_test:
	$(MAKE) -f Make.top ptsanity_test arch=$(arch)

@ROUT Make.top
include Make.inc

error_report:
	- uname -a 2>&1 >> bin/INSTALL_LOG/ERROR.LOG
	- $(KC) -v 2>&1  >> bin/INSTALL_LOG/ERROR.LOG
	- $(KC) -V 2>&1  >> bin/INSTALL_LOG/ERROR.LOG
	- $(KC) --version 2>&1  >> bin/INSTALL_LOG/ERROR.LOG
	$(TAR) cf error_$(ARCH).tar Make.inc bin/INSTALL_LOG/*
	$(BZIP) error_$(ARCH).tar
@skip	mv error_$(ARCH).tar.gz error_$(ARCH).tgz

leafstart:
@skip	cd $(leaf) ; mkdir $(arch)
	cd $(leaf) ; ln -s $(BLDdir)/Make.inc Make.inc

build:
	cd bin/ ; $(MAKE) xatlas_build
	cd bin/ ; ./xatlas_build $(INSTFLAGS)
time: 
	./xatlbench -dc $(BLDdir)/bin/INSTALL_LOG -dp $(ADuse)
@define pt @pt@
@define pt @@
@whiledef pt
C_@(pt)sanity_test:
	@(@) echo "BUILDING C TESTERS ONLY (GET F77 FOR MORE COMPLETE TESTING):"
	cd bin ; $(MAKE) @(pt)sanity_test
	@(@) echo "SCOPING FOR FAILURES IN @up@(pt)BIN TESTS:"
	- fgrep -e fault -e FAULT -e error -e ERROR -e fail -e FAIL \
	        bin/@(pt)sanity.out
	@(@) echo "DONE"
@(pt)sanity_test :
	@(@) echo "BUILDING TESTERS:"
	cd bin ; $(MAKE) @(pt)sanity_test
	cd interfaces/blas/C/testing ; $(MAKE) @(pt)sanity_test
	cd interfaces/blas/F77/testing ; $(MAKE) @(pt)sanity_test
	@(@) echo "   "
	@(@) echo "DONE BUILDING TESTERS, RUNNING:"
	@(@) echo "SCOPING FOR FAILURES IN @up@(pt)BIN TESTS:"
	- fgrep -e fault -e FAULT -e error -e ERROR -e fail -e FAIL \
	        bin/@(pt)sanity.out
	@(@) echo "DONE"
	@(@) echo "SCOPING FOR FAILURES IN @up@(pt)CBLAS TESTS:"
	- fgrep -e fault -e FAULT -e error -e ERROR -e fail -e FAIL \
	        interfaces/blas/C/testing/@(pt)sanity.out | \
                fgrep -v PASSED
	@(@) echo "DONE"
	@(@) echo "SCOPING FOR FAILURES IN @up@(pt)F77BLAS TESTS:"
	- fgrep -e fault -e FAULT -e error -e ERROR -e fail -e FAIL \
	        interfaces/blas/F77/testing/@(pt)sanity.out | \
                fgrep -v PASSED
	@(@) echo "DONE"
@endwhile
$(BINdir)/AtlasTest : $(SRCdir)/CONFIG/ARCHS/atlas_test1.1.3.tar.bz2
	cd $(BINdir) ; $(BUNZIP) -c \
           $(SRCdir)/CONFIG/ARCHS/atlas_test1.1.3.tar.bz2 | tar xf -

force_build:
lapack_test : lapack_test_al_ab
$(BINdir)/LAPACK_TEST : $(SRCdir)/CONFIG/ARCHS/lapack_test.tar.bz2
	cd $(BINdir) ; $(BUNZIP) -c \
           $(SRCdir)/CONFIG/ARCHS/lapack_test.tar.bz2 | tar xf -
@multidef lalib $(FLAPACKlib) $(SLAPACKlib) $(LAPACKlib) $(PTLAPACKlib) 
@whiledef la fl sl al pt
   @multidef bllib 
      $(FBLASlib)@^$(ATLASlib)
      $(BLASlib)@^$(ATLASlib)
      $(F77BLASlib)@^$(CBLASlib)@^$(ATLASlib)
      $(PTF77BLASlib)@^$(PTCBLASlib)@^$(ATLASlib)
   @endmultidef
   @whiledef bl fb sb ab pt
scope_lapack_test_@(la)_@(bl) :
	cd $(BINdir)/LAPACK_TEST/LAOUT_@up@(la)_@up@(bl) ; \
           fgrep -e fault -e FAULT -e error -e ERROR -e fail -e FAIL *.out \
           | fgrep -v "error exits"
lapack_test_@(la)_@(bl): $(BINdir)/LAPACK_TEST
	cd $(BINdir)/LAPACK_TEST ; make cleanup
	- rm -rf $(BINdir)/LAPACK_TEST/LAOUT_@up@(la)_@up@(bl) \
                 $(BINdir)/LAPACK_TEST/SUMMARY_@(la)_@(bl).txt
	mkdir $(BINdir)/LAPACK_TEST/LAOUT_@up@(la)_@up@(bl)
	cd $(BINdir)/LAPACK_TEST ; make ATL_all LAPACKLIB="@(lalib)" \
           BLASLIB="@(bllib) $(LIBS)" \
           | tee LAOUT_@up@(la)_@up@(bl)/$(ARCH).out 2>&1
	mv $(BINdir)/LAPACK_TEST/*.out $(BINdir)/LAPACK_TEST/LAOUT_@up@(la)_@up@(bl)/.
	$(MAKE) -f Make.top scope_lapack_test_@(la)_@(bl) | tee \
                $(BINdir)/LAPACK_TEST/SUMMARY_@(la)_@(bl).txt 2>&1
      @undef bllib
   @endwhile
   @undef lalib
@endwhile
$(BINdir)/AtlasTest/$(ARCH) : force_build
	if [ -d "$(BINdir)/AtlasTest/$(ARCH)" ]; then \
           rm -rf $(BINdir)/AtlasTest/$(ARCH)/* ; \
        else \
           mkdir $(BINdir)/AtlasTest/$(ARCH) ; \
        fi
	cd $(BINdir)/AtlasTest/$(ARCH) ; ../configure --atldir=$(BLDdir)
scope_full_results: force_build
	cd $(BINdir)/AtlasTest/$(ARCH) ;  ../scope.sh
	- fgrep -e fault -e FAULT -e error -e ERROR -e fail -e FAIL \
                 $(BINdir)/AtlasTest/$(ARCH)/$(ARCH).out | fgrep -v PASSED

full_test : $(BINdir)/AtlasTest
	$(MAKE) -f Make.top $(BINdir)/AtlasTest/$(ARCH)
	cd $(BINdir)/AtlasTest/$(ARCH) ; make | tee $(ARCH).out 2>&1
	$(MAKE) -f Make.top scope_full_results
           
full_test_nh :$(BINdir)/AtlasTest
	$(MAKE) -f Make.top $(BINdir)/AtlasTest/$(ARCH)
	cd $(BINdir)/AtlasTest/$(ARCH) ; nohup make | tee $(ARCH).out 2>&1
	$(MAKE) -f Make.top scope_full_results

$(ARCH)_defs : $(SRCdir)/CONFIG/$(ARCH).tar.bz2
	cd $(BLDdir) ; \
           $(BUNZIP) -c $(SRCdir)/CONFIG/$(ARCH).tar.bz2 | $(TAR) xvf -
ISetL1 : 
	rm -f $(SYSdir)/res/L1CacheSize
	echo $(L1Size) > $(SYSdir)/res/L1CacheSize

results:
	mkdir results
	mkdir results/charts
	mkdir results/tvecs
	mkdir results/raw
EXtest:
	mkdir EXtest
startup : lib include results EXtest
@extract -b @(incd)/atlas-make.base rout=archdirs
@whiledef archdir
	$(MAKE) -f Make.top leafstart leaf=@(archdir)
@endwhile
	cd timing ; mkdir res
	cd src/threads ; touch atomic.inc
	cd src/blas/ammm ; mkdir KERNEL
	cd src/blas/ammm ; mkdir UKERNEL
@skip	cd src/blas/gemm ; mkdir KERNEL
@skip	cd src/blas/kbmm ; mkdir KBMMS
	cd tune/blas/gemm ; mkdir KERNEL
	cd tune/blas/gemm ; mkdir res
	cd tune/blas/gemv ; mkdir res
	cd tune/blas/ger ; mkdir res
	cd tune/blas/level1 ; mkdir res
	cd tune/blas/level1 ; mkdir GEN
	cd tune/blas/level3 ; mkdir res
	cd tune/sysinfo ; mkdir res
	cd tune/lapack  ; mkdir res
	cd tune/threads ; mkdir res
	cd bin ; mkdir INSTALL_LOG
	cd tune/blas/gemv ; ln -s $(SRCdir)/tune/blas/gemv/MVTCASES MVTCASES
	cd tune/blas/gemv ; ln -s $(SRCdir)/tune/blas/gemv/MVNCASES MVNCASES
	cd tune/blas/ger ; ln -s $(SRCdir)/tune/blas/ger/R1CASES R1CASES
	cd tune/blas/ger ; ln -s $(SRCdir)/tune/blas/ger/R2CASES R2CASES
	cd tune/blas/gemm ; ln -s $(SRCdir)/tune/blas/gemm/AMMCASES AMMCASES
@whiledef rt gemm gemv
	cd tune/blas/@(rt) ; ln -s $(SRCdir)/tune/blas/@(rt)/CASES CASES
@endwhile
@whiledef rt ASUM AXPBY AXPY COPY CPSC DOT IAMAX NRM2 ROT SCAL SET SWAP
	cd tune/blas/level1 ; ln -s $(SRCdir)/tune/blas/level1/@(rt) @(rt)
@endwhile
	$(MAKE) -f Make.top refresh arch=$(arch)

refresh :
	cp $(SRCdir)/makes/Make.res_chart results/charts/Makefile
	cp $(SRCdir)/makes/Make.res_tvec results/tvecs/Makefile
	cp $(SRCdir)/makes/Make.res_raw results/raw/Makefile
	cp $(SRCdir)/makes/Make.res_new results/Makefile
	cp $(SRCdir)/makes/Make.plinc results/.
	cp $(SRCdir)/makes/Make.EXtst EXtest/Makefile
	cp $(SRCdir)/makes/Make.bin bin/Makefile
	cp $(SRCdir)/makes/Make.tim timing/Makefile
	cat $(SRCdir)/makes/Make.lib >> lib/Makefile
	cp $(SRCdir)/makes/Make.aux src/auxil/Makefile
	cp $(SRCdir)/makes/Make.l1ref src/blas/reference/level1/Makefile
	cp $(SRCdir)/makes/Make.l2ref src/blas/reference/level2/Makefile
	cp $(SRCdir)/makes/Make.l3ref src/blas/reference/level3/Makefile
	cp $(SRCdir)/makes/Make.f77refblas src/blas/f77reference/Makefile
	cp $(SRCdir)/makes/Make.tstsrc src/testing/Makefile
	cp $(SRCdir)/makes/Make.mvsrc src/blas/gemv/Makefile
	cp $(SRCdir)/makes/Make.r1src src/blas/ger/Makefile
@skip	cp $(SRCdir)/makes/Make.mmsrc src/blas/gemm/Makefile
	cp $(SRCdir)/makes/Make.ammsrc src/blas/ammm/Makefile
@skip	cp $(SRCdir)/makes/Make.kbmm  src/blas/kbmm/Makefile
@skip	cp $(SRCdir)/makes/Make.goto  src/blas/gemm/GOTO/Makefile
	cp $(SRCdir)/makes/Make.l1src src/blas/level1/Makefile
	cp $(SRCdir)/makes/Make.l2 src/blas/level2/Makefile
	cp $(SRCdir)/makes/Make.l2aux src/blas/level2/kernel/Makefile
	cp $(SRCdir)/makes/Make.lpamm src/lapack/amm/Makefile
	cp $(SRCdir)/makes/Make.lpsrc src/lapack/Makefile
	cp $(SRCdir)/makes/Make.l3tune tune/blas/level3/Makefile
	cp $(SRCdir)/makes/Make.mmtune tune/blas/gemm/Makefile
	cp $(SRCdir)/makes/Make.mvtune tune/blas/gemv/Makefile
	cp $(SRCdir)/makes/Make.r1tune tune/blas/ger/Makefile
	cp $(SRCdir)/makes/Make.l1tune tune/blas/level1/Makefile
	cp $(SRCdir)/makes/Make.sysinfo tune/sysinfo/Makefile
	cp $(SRCdir)/makes/Make.ttune tune/threads/Makefile
	cp $(SRCdir)/makes/Make.latune  tune/lapack/Makefile
	cp $(SRCdir)/makes/Make.cblas interfaces/blas/C/src/Makefile
	cp $(SRCdir)/makes/Make.f77blas interfaces/blas/F77/src/Makefile
	cp $(SRCdir)/makes/Make.cblastst interfaces/blas/C/testing/Makefile
	cp $(SRCdir)/makes/Make.f77blastst interfaces/blas/F77/testing/Makefile
	cp $(SRCdir)/makes/Make.Clp interfaces/lapack/C/src/Makefile
	cp $(SRCdir)/makes/Make.Flp interfaces/lapack/F77/src/Makefile
	cp $(SRCdir)/makes/Make.C2Flp interfaces/lapack/C2F/src/Makefile
	cp $(SRCdir)/makes/Make.thr src/threads/Makefile
	cp $(SRCdir)/makes/Make.lathr src/threads/lapack/Makefile
@skip	cp $(SRCdir)/makes/Make.l3omp src/threads/blas/level3/omp/Makefile
	cp $(SRCdir)/makes/Make.l3thr src/threads/blas/level3/Makefile
	cp $(SRCdir)/makes/Make.l2thr src/threads/blas/level2/Makefile
	cp $(SRCdir)/makes/Make.tlpamm src/threads/lapack/amm/Makefile
	cp $(SRCdir)/makes/Make.cbc src/threads/cbc/Makefile
	cp $(SRCdir)/makes/Make.cbc2d src/threads/cbc2d/Makefile
@skip	cp $(SRCdir)/makes/Make.pkl3 src/blas/pklevel3/Makefile
@skip	cp $(SRCdir)/makes/Make.gpmm src/blas/pklevel3/gpmm/Makefile
@skip	cp $(SRCdir)/makes/Make.sprk src/blas/pklevel3/sprk/Makefile
	cp $(SRCdir)/makes/Make.l3 src/blas/level3/Makefile
	cp $(SRCdir)/makes/Make.l3aux src/blas/level3/rblas/Makefile
	cp $(SRCdir)/makes/Make.l3kern src/blas/level3/kernel/Makefile
#	cp $(SRCdir)/makes/Make.Clptst interfaces/lapack/C/testing/Makefile
#	cp $(SRCdir)/makes/Make.Flptst interfaces/lapack/F77/testing/Makefile
@skip	cp $(SRCdir)/makes/atlas_pthreads.h include/.
	cp $(SRCdir)/makes/atlas_trsmNB.h include/.
@skip	cp $(SRCdir)/CONFIG/ATLrun.$(arch) bin/ATLrun.sh
	cp $(SRCdir)/CONFIG/ARCHS/Makefile ARCHS/.

clean :
@extract -b @(incd)/atlas-make.base rout=archdirs
@whiledef archdir
	cd $(archdir) ; $(MAKE) clean
@endwhile

kill :
	rm -rf src bin tune interfaces

killall :
	$(MAKE) -f Make.top kill
	rm -rf include lib

killgrd :
@extract -b @(incd)/atlas-make.base rout=archdirs
@whiledef archdir
	cd @(archdir) ; rm -f *.grd
@endwhile

lib :
	mkdir lib

include/atlas_tperf.h :
	echo "#ifndef ATLAS_TPERF_H" > $@
	echo "   #define ATLAS_TPERF_H" >> $@
	echo "   #define ATL_tstart_sec 1e-5" >> $@
	echo "   #define ATL_tstartgap_sec 1e-6" >> $@
	echo "#endif" >> $@
include:
	mkdir include
@whiledef pre z c d s
   @whiledef l2 syr syr2
	touch include/atlas_@(pre)@(l2)NX.h
   @endwhile
	touch include/atlas_@(pre)amm_sum.h
	touch include/atlas_@(pre)geamm_perf.h
	touch include/atlas_@(pre)sqamm_perf.h
@endwhile
	touch include/atlas_tsumm.h
	touch include/atlas_taffinity.h
	$(MAKE) -f Make.top include/atlas_tperf.h
	touch include/atlas_tperf.h
	touch include/atlas_ssyrNX.h
	touch include/atlas_ssyrNX.h
	touch include/atlas_ssyrNX.h
	touch include/atlas_tcacheedge.h
	touch include/atlas_cacheedge.h
	touch include/atlas_zdNKB.h
	touch include/atlas_csNKB.h
@beginskip
	touch include/atlas_stXover_$(NPROC)p.h
	touch include/atlas_dtXover_$(NPROC)p.h
	touch include/atlas_ctXover_$(NPROC)p.h
	touch include/atlas_ztXover_$(NPROC)p.h
@endskip
@define pt @@
@whiledef pt t
   @whiledef rt geqrf geqlf gerqf gelqf
	touch include/atlas_s@(pt)GetNB_@(rt).h
	touch include/atlas_d@(pt)GetNB_@(rt).h
	touch include/atlas_c@(pt)GetNB_@(rt).h
	touch include/atlas_z@(pt)GetNB_@(rt).h
   @endwhile
@endwhile
@beginskip
	touch include/atlas_drkXover.h
	touch include/atlas_srkXover.h
	touch include/atlas_zsysinfo.h
	touch include/atlas_csysinfo.h
	touch include/atlas_dsysinfo.h
	touch include/atlas_ssysinfo.h
@endskip
	touch include/zXover.h
	touch include/cXover.h
	touch include/dXover.h
	touch include/sXover.h

install_inc:
	cp $(INCSdir)/cblas.h $(INSTdir)/.
	cp $(INCSdir)/clapack.h $(INSTdir)/.
	chmod 0644 $(INSTdir)/cblas.h $(INSTdir)/clapack.h
	cp $(INCAdir)/* $(INSTdir)/atlas/.
	- chmod 0644 $(INSTdir)/atlas/*
install_lib:
	cp $(LIBdir)/libatlas.a $(INSTdir)/.
	cp $(LIBdir)/libcblas.a $(INSTdir)/.
	cp $(LIBdir)/liblapack.a $(INSTdir)/.
	chmod 0644 $(INSTdir)/libatlas.a  $(INSTdir)/liblapack.a \
                   $(INSTdir)/libcblas.a 
	- cp $(LIBdir)/libf77blas.a $(INSTdir)/.
	- chmod 0644 $(INSTdir)/libf77blas.a
	- cp $(LIBdir)/libptcblas.a $(INSTdir)/.
	- chmod 0644 $(INSTdir)/libptcblas.a 
	- cp $(LIBdir)/libptf77blas.a $(INSTdir)/.
	- chmod 0644 $(INSTdir)/libptf77blas.a
	- cp $(LIBdir)/libptlapack.a $(INSTdir)/.
	- chmod 0644 $(INSTdir)/libptlapack.a
@whiledef so so dll dylib
	- cp $(LIBdir)/libsatlas.@(so) $(INSTdir)/.
	- cp $(LIBdir)/libtatlas.@(so) $(INSTdir)/.
@endwhile

@ROUT Make.pkl3
include Make.inc
mySRCdir = $(SRCdir)/src/blas/pklevel3

all : lib
lib : dlib slib zlib clib
clean : sclean dclean cclean zclean
@whiledef pre c z d s
   @whiledef rout lib clean
@(pre)@(rout) :
	cd gpmm ; $(MAKE) @(pre)@(rout)
	cd sprk ; $(MAKE) @(pre)@(rout)
   @endwhile
@endwhile
@ROUT Make.sprk
include Make.inc
mySRCdir = $(SRCdir)/src/blas/pklevel3/sprk
@ROUT Make.gpmm
include Make.inc
mySRCdir = $(SRCdir)/src/blas/pklevel3/gpmm
@ROUT Make.gpmm Make.sprk

all : lib
lib : dlib slib zlib clib
clean : sclean dclean cclean zclean

incdep : $(INCSdir)/atlas_pkblas.h $(INCSdir)/atlas_misc.h
@multidef typ DCPLX SCPLX DREAL SREAL
@define p2 @c@
@define p2 @c@
@define p2 @@
@define p2 @@
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
@ROUT Make.sprk

@declare "@(pre)obj = " y y
   ATL_@(pre)sprk.o ATL_@(pre)sprk_rK.o
   ATL_@(pre)prk_kmm.o ATL_@(pre)pputblk_aX.o
   @ptyp c z
      ATL_@(pre)hprk.o ATL_@(pre)hprk_rK.o ATL_@(pre)phk_kmm.o
   @ptyp !
@enddeclare
@ROUT Make.gpmm

@declare "@(pre)obj = " y y
   ATL_@(pre)gpmm.o ATL_@(pre)prankK.o ATL_@(pre)pmmJIK.o
   ATL_@(pre)pcol2blk_a1.o ATL_@(pre)prow2blkT_a1.o 
   ATL_@(pre)pcol2blk_aX.o ATL_@(pre)prow2blkT_aX.o 
   ATL_@(pre)pputblk.o 
   @ptyp z c
      ATL_@(pre)pcol2blk_aXi0.o ATL_@(pre)prow2blkT_aXi0.o
      ATL_@(pre)pcol2blk_aXi0C.o ATL_@(pre)prow2blkT_aXi0C.o
      ATL_@(pre)pcol2blk_a1C.o ATL_@(pre)prow2blkT_a1C.o 
      ATL_@(pre)pcol2blk_aXC.o ATL_@(pre)prow2blkT_aXC.o 
   @ptyp !
@enddeclare

@ROUT Make.gpmm Make.sprk
@(pre)lib : 
	$(PMAKE) @(pre)lib.grd
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
@ROUT Make.gpmm
   @whiledef rout gpmm prankK
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(incdep)
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(rout).o -D@(typ) \
              $(mySRCdir)/ATL_@(rout).c
   @endwhile
   @whiledef rout pmmJIK pputblk
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(p2)@(rout).c $(incdep)
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(rout).o -D@(typ) \
              $(mySRCdir)/ATL_@(p2)@(rout).c
   @endwhile
@ptyp z c
   @define al @Xi0@
@ptyp !
@whiledef al 1 X
   @whiledef rout col2blk row2blkT
ATL_@(pre)p@(rout)_a@(al).o : $(mySRCdir)/ATL_@(p2)p@(rout).c $(incdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DALPHA@up@(al) $(mySRCdir)/ATL_@(p2)p@(rout).c
   @endwhile
@endwhile
@ptyp z c
   @whiledef al 1 X Xi0
      @whiledef rout col2blk row2blkT
ATL_@(pre)p@(rout)_a@(al)C.o : $(mySRCdir)/ATL_@(p2)p@(rout).c $(incdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -DConj_ -D@(typ) -DALPHA@up@(al) $(mySRCdir)/ATL_@(p2)p@(rout).c
      @endwhile
   @endwhile
@ptyp !
@ROUT Make.sprk
   @whiledef rout sprk sprk_rK hprk hprk_rK phk_kmm
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(incdep)
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(rout).o -D@(typ) \
              $(mySRCdir)/ATL_@(rout).c
   @endwhile
   @whiledef rout prk_kmm pputblk_aX
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(p2)@(rout).c $(incdep)
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(rout).o -D@(typ) \
              $(mySRCdir)/ATL_@(p2)@(rout).c
   @endwhile
@ROUT Make.gpmm Make.sprk
   @killkeys ptyp
   @undef typ
   @undef p2
@endwhile
@ROUT Make.lpamm
include Make.inc
mySRCdir = $(SRCdir)/src/lapack/amm

AMMID=0
all : lib ptlib
lib : dlib slib zlib clib ilib
clean : sclean dclean cclean zclean iclean

tlib : ptlib
ptlib : dtlib stlib ztlib ctlib itlib
incdep = $(INCSdir)/atlas_lapack.h $(INCAdir)/atlas_du$(AMMID)amm_blk.h \
         $(INCAdir)/atlas_du$(AMMID)amm_swp.h \
         $(INCAdir)/atlas_du$(AMMID)amm_kern.h 
@whiledef pre i z c d s
@(pre)lib : 
	$(PMAKE) @(pre)lib.grd
@(pre)tlib : 
@endwhile
@multidef typ TINT32 DCPLX SCPLX DREAL SREAL
@whiledef pre i z c d s
   @addkeys ptyp=@(pre)
   @ptyp d s
      @multidef rtf getrf_amm laswp_amm
   @ptyp i
      @multidef rti blkIpiv_amm unblkIpiv_amm
   @ptyp !
   @declare "@(pre)obj = " y y
      @whiledef rtf
         @define rtf1 @@(rtf)@
         ATL_@(pre)@(rtf).o
      @endwhile
      @whiledef rti
         @define rti1 @@(rti)@
         ATL_@(rti).o
      @endwhile
   @enddeclare

@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(LAPACKlib) $(@(pre)obj)
	$(RANLIB) $(LAPACKlib)
	touch @(pre)lib.grd

@whiledef rtf1
ATL_@(pre)@(rtf1).o : $(mySRCdir)/ATL_@(rtf1).c $(incdep)
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(rtf1).o -D@(typ)=1 \
              $(mySRCdir)/ATL_@(rtf1).c
@endwhile
@whiledef rti1
ATL_@(rti1).o : $(mySRCdir)/ATL_@(rti1).c $(incdep)
	$(KC) $(KCFLAGS) -c -o ATL_@(rti1).o \
           $(mySRCdir)/ATL_@(rti1).c
@endwhile

   @undef typ
@endwhile
@ROUT Make.tlpamm
include Make.inc
mySRCdir = $(SRCdir)/src/threads/lapack/amm

all : lib
lib : dlib slib zlib clib ilib
clean : sclean dclean cclean zclean iclean

tlib : lib
ptlib : lib

sumd :
	mkdir sumd

@beginproc tdef nm
   @multidef @(nm)
      bcLaswp_amm getrf_bcAmm_info
      getrf_bcAmm bcL2G_blkcpy bcAblk2cmat bcRm2am bcG2L_cpy bcL2G_cpy bcAm2rm
   @endmultidef
@endproc

deps = $(INCSdir)/atlas_lapack.h $(INCSdir)/atlas_pca.h 
@declare "iobj = " y y
   @whiledef irt bcIpivDecode bcIpivEncode bcIpivInit
      ATL_@(irt).o
      @define irt1 @@(irt)@
   @endwhile
@enddeclare

@multidef upr d s d s
@whiledef pre z c d s
@(pre)deps = $(INCAdir)/atlas_@(pre)u0amm_cmat2ablk.h sumd/@(upr)uAMMFRC.sum 
   @callproc tdef rt
   @declare "@(pre)obj = " y y
      @whiledef rt
         ATL_@(pre)@(rt).o
      @endwhile
   @enddeclare

   @undef upr
@endwhile
@whiledef upr X d s d s
@whiledef pre i z c d s
@(pre)lib : 
	cd $(BLDdir)/src/threads/cbc2d ; $(PMAKE) lib
   @mif pre ! "i
	$(MAKE) sumd
	$(MAKE) sumd/@(pre)uAMMFRC.sum
   @endmif
	$(PMAKE) @(pre)lib.grd
@(pre)lib.grd : $(@(pre)deps) $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(PTLAPACKlib) $(@(pre)obj)
	$(RANLIB) $(PTLAPACKlib)
	touch @(pre)lib.grd
@(pre)clean :
	rm $(@(pre)obj)
   @undef upr
@endwhile

@whiledef irt1
ATL_@(irt1).o : $(deps) $(mySRCdir)/ATL_@(irt1).c
	$(KC) $(KCFLAGS) -I./ -o $@ -c $(mySRCdir)/ATL_@(irt1).c
@endwhile

$(INCAdir)/atlas_du0amm_cmat2ablk.h : sumd/duAMMFRC.sum
$(INCAdir)/atlas_su0amm_cmat2ablk.h : sumd/suAMMFRC.sum
$(INCAdir)/atlas_cu0amm_cmat2ablk.h : sumd/cuAMMFRC.sum
$(INCAdir)/atlas_zu0amm_cmat2ablk.h : sumd/zuAMMFRC.sum
@beginskip
   @whiledef rt uAMMFRC UMMKCLEANBYNB UMMKCLEAN
sumd/s@(rt).sum :
	$(MAKE) sumd
	cd $(MMTdir) ; make suamm_getrf
sumd/d@(rt).sum :
	$(MAKE) sumd
	cd $(MMTdir) ; make duamm_getrf
   @endwhile
@endskip
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
sumd/@(pre)uAMMFRC.sum : 
	$(MAKE) sumd
	cd $(MMTdir) ; make @(pre)uamm_getrf
   @callproc tdef rt
   @whiledef rt
ATL_@(pre)@(rt).o : $(mySRCdir)/ATL_@(rt).c $(deps) $(@(pre)dep)
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(rt).o -D@(typ) \
              $(mySRCdir)/ATL_@(rt).c
   @endwhile
   @undef typ

@endwhile
@ROUT Make.lpsrc
include Make.inc
mySRCdir = $(SRCdir)/src/lapack

all : lib ptlib
lib : dlib slib zlib clib
clean : sclean dclean cclean zclean

tlib : ptlib
ptlib : dtlib stlib ztlib ctlib
@whiledef pre z c d s
@(pre)lib : 
	$(PMAKE) @(pre)lib.grd
@(pre)tlib : 
	$(PMAKE) @(pre)tlib.grd
	cd $(BLDdir)/src/threads/lapack ; $(PMAKE) @(pre)tlib
@endwhile
@define ptdef @@
@define ptdef @-DATL_USEPTHREADS@
@define pt @@
@define lib @@
@define lib @PT@
@whiledef pt t
@beginskip
@(pt)envobj = ATL_i@(pt)laenv.o
@(pt)laenv: @(pt)envlib.grd
@(pt)envlib.grd : $(@(pt)envobj)
	$(ARCHIVER) $(ARFLAGS) $(LAPACKlib) $(@(pt)envobj)
	$(RANLIB) $(LAPACKlib)
	touch @(pt)envlib.grd
@endskip
	
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
@declare "@(pre)@(pt)obj = " y y
@beginskip
   @mif pt = "t
       ATL_@(pre)tgetf2.o 
       ATL_@(pre)gerq2.o ATL_@(pre)geqr2.o ATL_@(pre)gelq2.o ATL_@(pre)geql2.o
   @endmif
@endskip
   ATL_i@(pt)laenv.o ATL_@(pre)@(pt)getrfC.o ATL_@(pre)laGetB.o
   ATL_@(pre)@(pt)getrf.o ATL_@(pre)getrfR.o ATL_@(pre)getf2.o ATL_@(pre)laswp.o
   ATL_@(pre)potrf.o ATL_@(pre)potrfU.o ATL_@(pre)potrfL.o
   ATL_@(pre)geqr2.o ATL_@(pre)@(pt)geqrf.o ATL_@(pre)@(pt)geqrr.o
   ATL_@(pre)gerq2.o ATL_@(pre)@(pt)gerqf.o ATL_@(pre)@(pt)gerqr.o
   ATL_@(pre)geql2.o ATL_@(pre)@(pt)geqlf.o ATL_@(pre)@(pt)geqlr.o
   ATL_@(pre)gelq2.o ATL_@(pre)@(pt)gelqf.o  ATL_@(pre)@(pt)gelqr.o
   ATL_@(pre)ormqr.o  ATL_@(pre)ormrq.o  ATL_@(pre)ormql.o  ATL_@(pre)ormlq.o  
   ATL_@(pre)larfb.o ATL_@(pre)larf.o ATL_@(pre)larfg.o ATL_@(pre)larft.o
   ATL_@(pre)lapy2.o ATL_@(pre)lascl.o
   ATL_@(pre)@(pt)gels.o ATL_@(pre)trtrs.o
@ptyp d s 
   ATL_@(pre)lamch.o
@ptyp z c
   ATL_@(pre)potrfRU.o ATL_@(pre)potrfRL.o
   ATL_@(pre)ladiv.o ATL_@(pre)lapy3.o ATL_@(pre)lacgv.o
@ptyp !
   ATL_@(pre)lauum.o ATL_@(pre)lauumCU.o ATL_@(pre)lauumCL.o 
                     ATL_@(pre)lauumRU.o ATL_@(pre)lauumRL.o
   ATL_@(pre)potrs.o ATL_@(pre)getrs.o 
   ATL_@(pre)trtri.o ATL_@(pre)trtriCU.o ATL_@(pre)trtriCL.o 
                     ATL_@(pre)trtriRU.o ATL_@(pre)trtriRL.o
   ATL_@(pre)getri.o ATL_@(pre)getriR.o ATL_@(pre)getriC.o
@enddeclare

incdep = $(INCSdir)/atlas_lapack.h
@(pre)@(pt)lib.grd : $(@(pre)@(pt)obj)
	$(ARCHIVER) $(ARFLAGS) $(@(lib)LAPACKlib) $(@(pre)@(pt)obj)
	$(RANLIB) $(@(lib)LAPACKlib)
	touch @(pre)@(pt)lib.grd

   
   @multidef rout 
      trtri trtriCU trtriCL trtriRU trtriRL lauum getri getriR getriC
      laswp getrf getrs getrfC getrfR getf2 potrf potrs potrfU potrfL
      getrf_amm laGetB
      geqr2 geqrf
      gerq2 gerqf
      geql2 geqlf
      gelq2 gelqf
      ormqr ormrq ormql ormlq 
      larfb larf larfg larft larfgp lapy2 lascl gels trtrs
      @ptyp z c
         potrfRL potrfRU
         ladiv lapy3 lacgv
      @ptyp d s 
         lamch
      @ptyp !
   @endmultidef
   @whiledef rout
ATL_@(pre)@(pt)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(incdep)
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(pt)@(rout).o -D@(typ) \
              @(ptdef) $(mySRCdir)/ATL_@(rout).c
   @endwhile
   @whiledef rout gelqr geqlr gerqr geqrr
ATL_@(pre)@(pt)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(incdep) \
                           $(INCSdir)/atlas_qrrmeth.h
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(pt)@(rout).o -D@(typ) \
              @(ptdef) $(mySRCdir)/ATL_@(rout).c
   @endwhile
   @whiledef rout lauum
      @whiledef us U L
         @multidef os    R         C
         @whiledef order RowMajor_ ColMajor_
ATL_@(pre)@(pt)@(rout)@(os)@(us).o : $(mySRCdir)/ATL_@(rout)@(us).c $(incdep)
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(pt)@(rout)@(os)@(us).o -D@(typ) -D@(order) \
              @(ptdef) $(mySRCdir)/ATL_@(rout)@(us).c
            @undef os
         @endwhile
      @endwhile
   @endwhile

ATL_@(pre)@(pt)getrf4.o : $(mySRCdir)/ATL_getrf4.c $(incdep)
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o ATL_@(pre)@(pt)getrf4.o -D@(typ) \
              @(ptdef) $(mySRCdir)/ATL_getrf4.c
	$(ARCHIVER) $(ARFLAGS) $(@(lib)LAPACKlib) ATL_@(pre)@(pt)getrf4.o
	$(RANLIB) $(@(lib)LAPACKlib)
	

@(pre)@(pt)clean :
	rm -f $(@(pre)@(pt)obj)
   @undef typ
   @killkeys ptyp
@endwhile
   @undef ptdef
   @undef lib
@endwhile

@beginskip
envdep = $(INCAdir)/atlas_sGetNB_gelqf.h $(INCAdir)/atlas_sGetNB_geqlf.h \
         $(INCAdir)/atlas_sGetNB_geqrf.h $(INCAdir)/atlas_sGetNB_gerqf.h \
         $(INCAdir)/atlas_dGetNB_gelqf.h $(INCAdir)/atlas_dGetNB_geqlf.h \
         $(INCAdir)/atlas_dGetNB_geqrf.h $(INCAdir)/atlas_dGetNB_gerqf.h \
         $(INCAdir)/atlas_cGetNB_gelqf.h $(INCAdir)/atlas_cGetNB_geqlf.h \
         $(INCAdir)/atlas_cGetNB_geqrf.h $(INCAdir)/atlas_cGetNB_gerqf.h \
         $(INCAdir)/atlas_zGetNB_gelqf.h $(INCAdir)/atlas_zGetNB_geqlf.h \
         $(INCAdir)/atlas_zGetNB_geqrf.h $(INCAdir)/atlas_zGetNB_gerqf.h

ATL_ilaenv.o : $(mySRCdir)/ATL_ilaenv.c $(incdep) $(envdep)
	$(DKC) $(DKCFLAGS) $(CDEFS) -c -o ATL_ilaenv.o $(mySRCdir)/ATL_ilaenv.c
ATL_itlaenv.o : $(mySRCdir)/ATL_ilaenv.c $(incdep) $(envdep)
	$(DKC) $(DKCFLAGS) $(CDEFS) -DATL_USEPTHREADS -c -o ATL_itlaenv.o \
        $(mySRCdir)/ATL_ilaenv.c
@endskip
@define ptdef @@
@define ptdef @-DATL_USEPTHREADS@
@define pt @@
@whiledef pt t
   @declare "@(pt)envdep = " y n
      $(INCSdir)/atlas_lapack.h
      @whiledef pre z c d s
         @whiledef rt gelqf geqlf geqrf gerqf
            $(INCAdir)/atlas_@(pre)@(pt)GetNB_@(rt).h
         @endwhile
      @endwhile
   @enddeclare
ATL_i@(pt)laenv.o : $(@(pt)envdep) $(mySRCdir)/ATL_ilaenv.c
	$(DKC) $(DKCFLAGS) $(CDEFS) -c -o ATL_i@(pt)laenv.o @(ptdef) \
               $(mySRCdir)/ATL_ilaenv.c
   @undef ptdef
@endwhile


@ROUT Make.ttune
include Make.inc
mySRCdir = $(SRCdir)/tune/threads
myBLDdir = $(BLDdir)/tune/threads
CONFdir = $(SRCdir)/CONFIG
myTHRdir = $(SRCdir)/src/threads
THRdir = $(BLDdir)/src/threads
args=
CC=$(DKC)
CCFLAGS=$(CDEFS) $(DKCFLAGS)
mut_cnt=$(THRdir)/ATL_atmctr_new_mut_mut.o $(THRdir)/ATL_atmctr_dec_mut_mut.o \
        $(THRdir)/ATL_atmctr_free_mut_mut.o
mut_cnt0 = ATL_atmctr_new_mut_mut.o ATL_atmctr_free_mut_mut.o \
           ATL_atmctr_dec_mut_mut.o
@beginskip
acnt_arch = ATL_SetAtomicCount_arch.o ATL_ResetAtomicCount_arch.o \
            ATL_DecAtomicCount_arch.o ATL_FreeAtomicCount_arch.o
acnt_mut = $(THRdir)/ATL_SetAtomicCount_mut_mut.o \
           $(THRdir)/ATL_ResetAtomicCount_mut_mut.o \
           $(THRdir)/ATL_DecAtomicCount_mut_mut.o \
           $(THRdir)/ATL_FreeAtomicCount_mut_mut.o
@endskip

IThreadTune :
@skip	- $(MAKE) ITune_aff
@skip	$(MAKE) IRun_nthr
@skip	$(MAKE) iTune_atomic
@skip	$(MAKE) iTune_startup
	$(MAKE) MakeThreadSum
force_build :

sumf = $(INCAdir)/atlas_tsumm.h
MakeThreadSum :
	- rm -f $(sumf)
	echo "#ifndef ATLAS_SUMM_H" > $(sumf)
	echo "   #define ATLAS_SUMM_H" >> $(sumf)
	if [ -f res/aff.h ]; then \
           cat res/aff.h >> $(sumf) ; \
        else \
           echo "#define ATL_TAFFINITY 0" >> $(sumf) ; \
        fi
	if grep -q ATL_DecAtomicCount_mut $(THRdir)/atomic.inc ; then \
           echo "#define ATL_ATOMIC_COUNT_MUT 1" >> $(sumf) ; \
        else \
           echo "#define ATL_ATOMIC_COUNT_MUT 0" >> $(sumf) ; \
        fi
	echo "#endif" >> $(sumf)
perff = $(INCAdir)/atlas_tperf.h
res/thrbeg.h : 
	$(MAKE) iTune_startup
MakeThreadPerf: res/thrbeg.h
	- rm -f $(perff)
	echo "/* created make MakeThreadPerf in thread/tune */" > $(perff)
	echo "#ifndef ATLAS_TPERF_H" >> $(perff)
	echo "   #define ATLAS_TPERF_H" >> $(perff)
	cat res/thrbeg.h >> $(perff) 
	echo "#endif" >> $(perff)

IRun_aff : xprobe_aff force_build
	- rm res/probe.out
	./xprobe_aff -v 1 -o $(INCAdir)/atlas_taffinity.h $(TIDLIST)
IRun_nthr : IRun_aff xprobe_nthr
	rm -f $(INCAdir)/atlas_pthreads.h
	./xprobe_nthr -o $(INCAdir)/atlas_pthreads.h
ITune_aff : IRun_nthr xtune_aff
	$(ATLRUN) $(myBLDdir) xtune_aff -o $(INCAdir)/atlas_taffinity.h
iTune_startup : xtune_startup
	$(ATLRUN) $(myBLDdir) xtune_startup
tlib : 
	cd $(BLDdir)/src/threads ; $(MAKE)

xprobe_aff : probe_aff.o atlconf_misc.o
	$(XCC) $(XCCFLAGS) -o xprobe_aff probe_aff.o atlconf_misc.o $(LIBS)
@whiledef PRE D S
   @define defs @-DKSYNC=1 -DMANAGE_NODES=1@
   @define defs @-DMANAGE_NODES=1@
   @define defs @@
   @whiledef suf 2 1 0
x@low@(PRE)ammtim@(suf) : @low@(PRE)ammtim@(suf).o $(ATLASlib)
	$(@(PRE)KC) $(@(PRE)KCFLAGS) -o $@ @low@(PRE)ammtim@(suf).o $(ATLASlib) $(LIBS)
@low@(PRE)ammtim@(suf).o : $(mySRCdir)/ammtim.c
	$(@(PRE)KC) $(@(PRE)KCFLAGS) $(CDEFS) -o $@ -D@(PRE)REAL=1 \
           @(defs) -c $(mySRCdir)/ammtim.c
      @undef defs
   @endwhile
@endwhile

@whiledef arch mips sparc ppc ia32 amd64 win64 arm64
xprobe_atomic_@(arch) : test_count.o
	rm -f $(BLDdir)/src/threads/atomic.inc
	echo "aobj =" > $(BLDdir)/src/threads/atomic.inc
	$(MAKE) tlib
	cd $(BLDdir)/src/threads ; $(MAKE) ATL_SetAtomicCount_arch.o \
           ATL_ResetAtomicCount_@(arch).o ATL_DecAtomicCount_@(arch).o \
           ATL_FreeAtomicCount_arch.o
	$(CC) $(CCFLAGS) -o xtst_arch test_count.o \
              $(BLDdir)/src/threads/ATL_SetAtomicCount_arch.o \
              $(BLDdir)/src/threads/ATL_ResetAtomicCount_@(arch).o \
              $(BLDdir)/src/threads/ATL_DecAtomicCount_@(arch).o \
              $(BLDdir)/src/threads/ATL_FreeAtomicCount_arch.o \
              $(ATLASlib) $(LIBS)
	$(ATLRUN) $(myBLDdir) xtst_arch
@endwhile
xprobe_atomic_mut : test_count.o
	rm -f $(BLDdir)/src/threads/atomic.inc
	echo "aobj =" > $(BLDdir)/src/threads/atomic.inc
	$(MAKE) tlib
	cd $(BLDdir)/src/threads ; $(MAKE) ATL_SetAtomicCount_mut.o \
           ATL_ResetAtomicCount_mut.o ATL_DecAtomicCount_mut.o 
	$(CC) $(CCFLAGS) -o xtst_arch test_count.o \
              $(BLDdir)/src/threads/ATL_SetAtomicCount_mut.o \
              $(BLDdir)/src/threads/ATL_ResetAtomicCount_mut.o \
              $(BLDdir)/src/threads/ATL_DecAtomicCount_mut.o \
              $(ATLASlib) $(LIBS)
	$(ATLRUN) $(myBLDdir) xtst_arch

iTune_atomic :
	if $(MAKE) mutcnt ; then \
           if $(MAKE) iFind_atomic_arch ; then \
              $(MAKE) xtune_count ; $(ATLRUN) $(myBLDdir) xtune_count -r 1000000 -o yes; \
           fi ; \
        else \
           $(MAKE) iFind_atomic_arch ; \
        fi
iFind_atomic_arch :
	if $(MAKE) xprobe_atomic_amd64 ; then \
           cp $(myTHRdir)/ATL_*AtomicCount_arch.c . ; \
           cp $(myTHRdir)/ATL_ResetAtomicCount_amd64.S \
              ATL_ResetAtomicCount_arch.S ; \
           cp $(myTHRdir)/ATL_DecAtomicCount_amd64.S \
              ATL_DecAtomicCount_arch.S ; \
           cp $(myTHRdir)/ATL_AndAtomicMask_amd64.S \
              ATL_AndAtomicMask_arch.S ; \
           cp $(myTHRdir)/ATL_OrAtomicMask_amd64.S \
              ATL_OrAtomicMask_arch.S ; \
           rm $(BLDdir)/src/threads/atomic.inc ; \
           echo "aobj = ATL_SetAtomicCount_arch.o ATL_ResetAtomicCount_amd64.o ATL_DecAtomicCount_amd64.o ATL_OrAtomicMask_amd64.o ATL_AndAtomicMask_amd64.o ATL_FreeAtomicCount_arch.o" > $(BLDdir)/src/threads/atomic.inc ; \
@whiledef arch mips sparc ia32 win64 arm64
   @addkeys arch=@(arch)
	elif $(MAKE) xprobe_atomic_@(arch) ; then \
           cp $(myTHRdir)/ATL_*AtomicCount_arch.c . ; \
           cp $(myTHRdir)/ATL_ResetAtomicCount_@(arch).S \
              ATL_ResetAtomicCount_arch.S ; \
           cp $(myTHRdir)/ATL_DecAtomicCount_@(arch).S \
              ATL_DecAtomicCount_arch.S ; \
  @arch ia32 arm64
           cp $(myTHRdir)/ATL_AndAtomicMask_@(arch).S \
              ATL_AndAtomicMask_arch.S ; \
           cp $(myTHRdir)/ATL_OrAtomicMask_@(arch).S \
              ATL_OrAtomicMask_arch.S ; \
           rm $(BLDdir)/src/threads/atomic.inc ; \
           echo "aobj = ATL_SetAtomicCount_arch.o ATL_ResetAtomicCount_@(arch).o ATL_DecAtomicCount_@(arch).o ATL_AndAtomicMask_@(arch).o ATL_OrAtomicMask_@(arch).o ATL_FreeAtomicCount_arch.o" > $(BLDdir)/src/threads/atomic.inc ; \
  @arch ! ia32 arm64
           rm $(BLDdir)/src/threads/atomic.inc ; \
           echo "aobj = ATL_SetAtomicCount_arch.o ATL_ResetAtomicCount_@(arch).o ATL_DecAtomicCount_@(arch).o ATL_FreeAtomicCount_arch.o" > $(BLDdir)/src/threads/atomic.inc ; \
  @arch !
  @killkeys arch
@endwhile
        else \
           $(MAKE) iForceUseMutex ; \
        fi
	- rm -f $(BLDdir)/src/threads/lib.grd
	$(MAKE) tlib
iForceUseMutex:
	cd $(BLDdir)/src/threads ; make killaobj
	rm $(BLDdir)/src/threads/atomic.inc 
	echo "aobj = ATL_SetAtomicCount_mut.o ATL_ResetAtomicCount_mut.o ATL_DecAtomicCount_mut.o ATL_FreeAtomicCount_mut.o" > $(BLDdir)/src/threads/atomic.inc 
@skip	- rm -f $(BLDdir)/src/threads/lib.grd
@skip	$(MAKE) tlib
@whiledef rt probe_nthr
x@(rt) : @(rt).o
	$(XCC) $(XCCFLAGS) -o x@(rt) @(rt).o $(LIBS)
@(rt).o : $(mySRCdir)/@(rt).c
	$(XCC) $(XCCFLAGS) -o @(rt).o -c $(mySRCdir)/@(rt).c
@endwhile
mutcnt :
	cd $(THRdir) ; $(MAKE) $(mut_cnt0)
xtune_barrier : tune_barrier.o
	$(CC) $(CCFLAGS) -o $@ tune_barrier.o $(ATLASlib) $(LIBS)
xtune_tbv : tlib tune_tbv.o
	$(CC) $(CCFLAGS) -o $@ tune_tbv.o $(ATLASlib) $(LIBS)
xtune_tbvB : tlib $(mySRCdir)/tune_tbv.c
	$(CC) $(CCFLAGS) -o $@ -DSET_ATOM=1 $(mySRCdir)/tune_tbv.c \
           $(mySRCdir)/ATL_SetBitAtomic_amd64.S $(ATLASlib) $(LIBS)
@whiledef rt tune_startup
x@(rt) : @(rt).o tlib
	$(CC) $(CCFLAGS) -o $@ @(rt).o $(ATLASlib) $(LIBS)
@(rt).o : $(mySRCdir)/@(rt).c
	$(CC) $(CCFLAGS) -c $(mySRCdir)/@(rt).c
@endwhile
@whiledef rt count cntdly
xtune_@(rt) : tune_@(rt).o tlib mutcnt
	$(CC) $(CCFLAGS) -o $@ tune_@(rt).o $(mut_cnt) $(ATLASlib) $(LIBS)
@endwhile
xtest_lock_mut : $(mySRCdir)/test_lock.c $(INCSdir)/atlas_tprim.h \
        $(myTHRdir)/ATL_lock_mut.c $(myTHRdir)/ATL_unlock_mut.c
	$(CC) $(CCFLAGS) -DATL_lock_t="unsigned char"  -o $@ \
        $(mySRCdir)/test_lock.c $(myTHRdir)/ATL_lock_mut.c \
        $(myTHRdir)/ATL_unlock_mut.c $(ATLASlib) $(LIBS)
@whiledef ar amd64 arm64 ia32
xtest_lock_@(ar) : $(mySRCdir)/test_lock.c $(INCSdir)/atlas_tprim.h \
        $(myTHRdir)/ATL_lock_@(ar).S $(myTHRdir)/ATL_unlock_@(ar).S
	$(CC) $(CCFLAGS) -DATL_lock_t="unsigned char"  -o $@ \
        $(mySRCdir)/test_lock.c $(myTHRdir)/ATL_lock_@(ar).S \
        $(myTHRdir)/ATL_unlock_@(ar).S $(ATLASlib) $(LIBS)
@endwhile
@whiledef rt test_count test_count_glb
x@(rt) : @(rt).o tlib  # mutcnt arccnt
	$(CC) $(CCFLAGS) -o x@(rt) @(rt).o $(ATLASlib) $(LIBS)
@endwhile

@multidef pre i    s     d     c     z
@whiledef typ SINT SREAL DREAL SCPLX DCPLX
@(pre)cbclib : 
	cd $(BLDdir)/src/threads/cbc ; make @(pre)lib
xtest_@(pre)comb1 : @(pre)cbclib $(mySRCdir)/test_comb1.c
	$(CC) $(CCFLAGS) -o $@ $(mySRCdir)/test_comb1.c -D@(typ)=1 \
           $(TESTlib) $(ATLASlib) $(LIBS)
   @undef pre
@endwhile
@beginskip
@whiledef spn spawn spawn_fp
xtune_@(spn) : tune_@(spn).o tlib ATL_goparallel_lin.o ATL_goparallel_log2.o \
               ATL_goparallel_dyn.o
	$(CC) $(CCFLAGS) -o xtune_@(spn) tune_@(spn).o ATL_goparallel_lin.o \
              ATL_goparallel_log2.o ATL_goparallel_dyn.o $(ATLASlib) $(LIBS)
@endwhile
xtune_aff : tune_aff.o tlib  ATL_goparallel_noaff.o ATL_log2tlaunch_noaff.o \
             ATL_goparallel_aff.o ATL_log2tlaunch.o \
             ATL_thread_start_noaff.o ATL_thread_start.o
	$(CC) $(CCFLAGS) -o xtune_aff tune_aff.o ATL_goparallel_noaff.o \
              ATL_goparallel_aff.o ATL_log2tlaunch_noaff.o ATL_log2tlaunch.o \
              ATL_thread_start_noaff.o ATL_thread_start.o $(ATLASlib) $(LIBS)

ATL_goparallel_aff.o : $(myTHRdir)/ATL_goparallel.c
	$(CC) $(CCFLAGS) -o $@ -DATL_TUNING -c $(myTHRdir)/ATL_goparallel.c
@multidef df LINEAR DYNAMIC LOG2
@whiledef sf lin dyn log2
ATL_goparallel_@(sf).o : $(myTHRdir)/ATL_goparallel.c
	$(CC) $(CCFLAGS) -o $@ -DATL_TUNING -DATL_LAUNCH_@(df) \
              -c $(myTHRdir)/ATL_goparallel.c
   @undef df
@endwhile
@endskip
@whiledef rt thread_start lin0tlaunch dyntlaunch log2tlaunch goparallel
ATL_@(rt).o : $(myTHRdir)/ATL_@(rt).c
	$(CC) $(CCFLAGS) -o $@ -c $(myTHRdir)/ATL_@(rt).c
@endwhile
@whiledef rt thread_start lin0tlaunch dyntlaunch log2tlaunch goparallel
ATL_@(rt)_noaff.o : $(myTHRdir)/ATL_@(rt).c
	$(CC) $(CCFLAGS) -o $@ -c -DATL_TUNING -DATL_NOAFFINITY=1 \
               $(myTHRdir)/ATL_@(rt).c
@endwhile
@whiledef rt thread_start lin0tlaunch dyntlaunch log2tlaunch goparallel
ATL_@(rt)_noaf.o : $(myTHRdir)/ATL_@(rt).c
	$(CC) $(CCFLAGS) -o $@ -c -DATL_NOAFFINITY=1 \
               $(myTHRdir)/ATL_@(rt).c
@endwhile

@whiledef rt Dec Reset
ATL_@(rt)AtomicCount_arch.o : ATL_@(rt)AtomicCount_arch.S
	$(CC) $(CCFLAGS) -o $@ -c ATL_@(rt)AtomicCount_arch.S
@endwhile
@whiledef rt Set Get Free
ATL_@(rt)AtomicCount_arch.o : ATL_@(rt)AtomicCount_arch.c
	$(CC) $(CCFLAGS) -o $@ -c ATL_@(rt)AtomicCount_arch.c
@endwhile

@multidef rt tune_barrier tune_tbv tune_cntdly
@whiledef rt tune_spawn_fp tune_spawn tune_count test_count tune_aff test_lock
@(rt).o : $(mySRCdir)/@(rt).c
	$(CC) $(CCFLAGS) -o @(rt).o -c $(mySRCdir)/@(rt).c
@endwhile
test_count_glb.o : $(mySRCdir)/test_count.c
	$(CC) $(CCFLAGS) -DATL_GLOBAL -o test_count_glb.o \
              -c $(mySRCdir)/test_count.c
@whiledef rt probe_aff atlconf_misc
@(rt).o : $(CONFdir)/src/@(rt).c
	$(XCC) $(XCCFLAGS) -I$(CONFdir)/include -c -o $@ \
               $(CONFdir)/src/@(rt).c
@endwhile
@whiledef aff BINDP PBIND PLPA RUNON SCHED SETAFFNP SETPROCNP CPUSET WIN WIN64
IRun_@(aff) :
	- rm res/probeB.out
	$(CC) $(CCFLAGS) -o xprobe_@(aff) \
               $(CONFdir)/src/backend/probe_aff_@(aff).c $(LIBS)
	$(ATLRUN) $(myBLDdir) xprobe_@(aff) $(args) > res/probeB.out
	- cat res/probeB.out
@endwhile
@ROUT Make.sysinfo
include Make.inc
mySRCdir = $(SRCdir)/tune/sysinfo

maxlat=6
mflop=200
flags=
nreg=0

sTestFlags : force_build
	$(MAKE) srbob `cat res/sBEST` pre='s' type=float

dTestFlags : force_build
	$(MAKE) drbob `cat res/dBEST` pre='d' type=double

res/L1CacheSize:
	$(MAKE) RunL1 MaxL1=$(MaxL1)
RunL1 : xL1
	$(ATLRUN) $(SYSdir) xL1 $(MaxL1)

$(INCAdir)/atlas_type.h:
	$(MAKE) RunTyp
	$(ATLFWAIT) -f $(INCAdir)/atlas_type.h
@whiledef pre z c d s
@(pre)RunSysSum : $(INCAdir)/atlas_@(pre)sysinfo.h

$(INCAdir)/atlas_@(pre)sysinfo.h : xsyssum $(ATLFWAIT)
	$(SYSdir)/xsyssum @(pre) $(INCAdir)/atlas_@(pre)sysinfo.h
@skip	$(ATLRUN) $(SYSdir) xsyssum @(pre) $(INCAdir)/atlas_@(pre)sysinfo.h
	$(ATLFWAIT) -f $(INCAdir)/atlas_@(pre)sysinfo.h

res/@(pre)MULADD : 
	$(MAKE) RunMulAdd pre=@(pre) nreg=$(nreg)

@endwhile
	
@whiledef pre d s
$(MMTdir)/res/@(pre)MULADD : res/@(pre)MULADD
	rm -f $(MMTdir)/res/@(pre)MULADD
	ln -s $(SYSdir)/res/@(pre)MULADD $(MMTdir)/res/@(pre)MULADD
res/@(pre)nreg : $(MMTdir)/res/@(pre)MULADD
	cd $(MMTdir) ; $(MAKE) res/@(pre)nreg nreg=$(nreg)
	cd res ; ln -s $(MMTdir)/res/@(pre)nreg @(pre)nreg
        
@endwhile
@skip findNT : xfindNT
@skip 	$(ATLRUN) $(SYSdir) xfindNT -o $(INCAdir)/atlas_pthreads.h

RunTLB : xtlb
	$(ATLRUN) $(SYSdir) xtlb

RunMADef : xmasrch
	./xmasrch -p $(pre) -o res/$(pre)MULADD

RunMulAdd: xmasrch
	./xmasrch -p $(pre) -n $(nreg) -o res/$(pre)MULADD

RunLamch : xemit_lamch
	$(ATLRUN) $(SYSdir) xemit_lamch $(INCAdir)
RunTyp: xemit_typ
	$(ATLRUN) $(SYSdir) xemit_typ > $(INCAdir)/atlas_type.h

xemit_buildinfo : emit_buildinfo.o
	$(XCC) $(XCCFLAGS) -o $@ emit_buildinfo.o
xsyssum : GetSysSum.o
	$(XCC) $(XCCFLAGS) -o $@ GetSysSum.o
@skip xmasearch : time.o masearch.o
@skip 	$(XCC) $(XCCFLAGS) -o $@ masearch.o

xL1 : time.o L1CacheSize.o
	$(KC) $(KCFLAGS) -o $@ L1CacheSize.o time.o
@skip xfindNT : ATL_walltime.o findNT.o
@skip	$(KC) $(KCFLAGS) -o $@ findNT.o ATL_walltime.o $(LIBS)

xtlb : time.o tlb.o
	$(CLINKER) $(CLINKFLAGS) -o $@ tlb.o time.o

xL2 : time.o L2CacheSize.o
	$(CLINKER) $(CLINKFLAGS) -o $@ L2CacheSize.o time.o
xcachesweep : time.o cacheSweep.o
	$(CLINKER) $(CLINKFLAGS) -o $@ cacheSweep.o time.o

xemit_lamch : emit_lamch.o
	$(KC) $(KCFLAGS) -o $@ emit_lamch.o $(LIBS)
xemit_typ : emit_typ.o
	$(KC) $(KCFLAGS) -o $@ emit_typ.o

@beginskip
xmuladd : force_build time.o muladd.c 
	$(KC) $(MAFLAGS) -c muladd.c
	$(CLINKER) $(CLINKFLAGS) -o xmuladd muladd.o time.o
	$(ATLRUN) $(SYSdir) xmuladd
xsmuladd : force_build time.o muladd.c 
	$(SKC) $(SKCFLAGS) $(SMAFLAGS) -c muladd.c
	$(SKC) $(SKCFLAGS) -o xsmuladd muladd.o time.o
	$(ATLRUN) $(SYSdir) xsmuladd
xdmuladd : force_build time.o muladd.c 
	$(DKC) $(DKCFLAGS) $(DMAFLAGS) -c muladd.c
	$(DKC) $(DKCFLAGS) -o xdmuladd muladd.o time.o
	$(ATLRUN) $(SYSdir) xdmuladd
@endskip
@multidef typ SREAL DREAL QREAL
@whiledef pre s d q
x@(pre)ma : force_build time.o @(pre)muladd.c @(pre)matime.o
	$(@up@(pre)KC) $(@up@(pre)KCFLAGS) $(SMAFLAGS) -c @(pre)muladd.c
	$(@up@(pre)KC) $(@up@(pre)KCFLAGS) -o x@(pre)ma matime.o @(pre)muladd.o time.o
	$(ATLRUN) $(SYSdir) x@(pre)ma -f $(outf) $(flags)
@(pre)matime.o : $(mySRCdir)/matime.c
	$(KC) -c $(KCFLAGS) -D@(typ) $(mySRCdir)/matime.c
   @undef typ
@endwhile
xmasrch : $(mySRCdir)/masrch.c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/masrch.c

@whiledef rout walltime cputime
ATL_@(rout).c : 
	cp $(mySRCdir)/ATL_@(rout).c .
ATL_@(rout).o : ATL_@(rout).c
	$(KC) -c $(KCFLAGS) ATL_@(rout).c

@endwhile
ATL_Xwalltime.o : ATL_walltime.o
	$(XCC) $(XCCFLAGS) -c -o ATL_Xwalltime.o ATL_walltime.c

emit_buildinfo.o : $(mySRCdir)/emit_buildinfo.c
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/emit_buildinfo.c
GetSysSum.o : $(INCAdir)/atlas_type.h $(mySRCdir)/GetSysSum.c
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/GetSysSum.c
time.o : $(mySRCdir)/time.c
	$(KC) -c $(KCFLAGS) -I./ $(mySRCdir)/time.c
@beginskip
time.c :
	ln -s $(mySRCdir)/time.c time.c

time.o : time.c
	$(KC) -c $(KCFLAGS) time.c

@endskip
@whiledef rout tlb findNT L1CacheSize emit_typ emit_lamch cacheSweep
@(rout).o : $(mySRCdir)/@(rout).c
	$(KC) -c $(KCFLAGS) $(mySRCdir)/@(rout).c
@endwhile

@skip masearch.o : $(mySRCdir)/masearch.c
@skip	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/masearch.c


force_build :

clean :
	rm -f xL1 xtlb xmasrch xemit_typ xsys_sum xfindNT *.o x?ma ?muladd.o

@multidef flg
   F77 F77FLAGS ICC ICCFLAGS SMC SMCFLAGS DMC DMCFLAGS
   SKC SKCFLAGS DKC DKCFLAGS
   ARCHDEFS F2CDEFS INSTFLAGS ARCH
@endmultidef
@whiledef flg 
print_@(flg) :
	@(@)echo $(@(flg))
@endwhile
@skip print_CCFLAGS :
@skip 	@(@)echo $(CCFLAG0)
@ROUT Make.l1tune Make.l1tune0 Make.mmtune Make.l3tune
include Make.inc
@ROUT Make.l1tune `mySRCdir = $(SRCdir)/tune/blas/level1`
@ROUT Make.l3tune `mySRCdir = $(SRCdir)/tune/blas/level3`
@ROUT Make.mmtune `mySRCdir = $(SRCdir)/tune/blas/gemm`

@ROUT Make.mmtune `default : xmmsearch`
$(SYSdir)/time.o:
	cd $(SYSdir) ; $(MAKE) time.o

$(INCAdir)/atlas_type.h : 
	cd $(SYSdir) ; $(MAKE) RunTyp

@beginskip
$(INCAdir)/atlas_rkXover.h : 
	cd $(BINdir) ; $(MAKE) RunRK
RunRK : force_build
	rm -f $(INCAdir)/atlas_rkXover.h
	$(MAKE) $(INCAdir)/atlas_rkXover.h
@endskip
$(SYSdir)/res/L1CacheSize :
	rm -f res/L1CacheSize
	cd $(SYSdir) ; $(MAKE) res/L1CacheSize
	
RunL1 : force_build
	$(MAKE) $(SYSdir)/res/L1CacheSize 
	ln -s $(SYSdir)/res/L1CacheSize res/L1CacheSize

RunTLB : 
	cd $(SYSdir) ; $(MAKE) RunTLB

$(SYSdir)/res/$(pre)MULADD : 
	rm -f res/$(pre)MULADD
	cd $(SYSdir) ; $(MAKE) res/$(pre)MULADD pre=$(pre) nreg=$(nreg)
RunMulAdd: $(SYSdir)/res/$(pre)MULADD
	ln -s $(SYSdir)/res/$(pre)MULADD res/$(pre)MULADD

RunTyp: force_build
	cd $(SYSdir) ; $(MAKE) RunTyp

@beginskip
$(INCAdir)/atlas_sfc.h :
	touch $(INCAdir)/atlas_sfc.h
$(INCAdir)/atlas_dfc.h :
	touch $(INCAdir)/atlas_dfc.h
$(INCAdir)/atlas_qfc.h :
	touch $(INCAdir)/atlas_qfc.h
$(INCAdir)/atlas_cfc.h : $(INCAdir)/atlas_sfc.h
	rm -f $(INCAdir)/atlas_cfc.h
	ln -s $(INCAdir)/atlas_sfc.h $(INCAdir)/atlas_cfc.h
$(INCAdir)/atlas_zfc.h : $(INCAdir)/atlas_dfc.h
	rm -f $(INCAdir)/atlas_zfc.h
	ln -s $(INCAdir)/atlas_dfc.h $(INCAdir)/atlas_zfc.h
@endskip


@ROUT Make.l1tune
sUCC = $(SKC)
sUCCFLAGS = $(SKCFLAGS)
cUCC = $(SKC)
cUCCFLAGS = $(SKCFLAGS)
dUCC = $(DKC)
dUCCFLAGS = $(DKCFLAGS)
zUCC = $(DKC)
zUCCFLAGS = $(DKCFLAGS)
incX = 1
N = 777
IDNUM=599932
opt=
fout=

tstlib.grd :
	cd $(TSTdir) ; $(MAKE) lib
	touch tstlib.grd

force_build :
# 
# Go to src/auxil directory, and compile just those routines, to avoid circular
# dependency in full auxil install (which dep on L1BLAS/this directory!)
#
auxlib :
	cd $(AUXdir) ; make lib.grd0
$(BINdir)/xsubstr:
	cd $(BINdir) ; $(MAKE) xsubstr
@whiledef rt dot
   @whiledef pre z c
@(pre)@(rt)c.dsc : $(mySRCdir)/@up@(rt)/@(pre)casesc.dsc $(BINdir)/xsubstr
	rm -f @(pre)@(rt)c.dsc
	$(BINdir)/xsubstr -i $(mySRCdir)/@up@(rt)/@(pre)casesc.dsc -o $@ \
           -s '^gcc' '$(GOODGCC)' -s ' gcc' ' $(GOODGCC)'
   @endwhile
   @whiledef pre z c d s
@(pre)@(rt).dsc : $(mySRCdir)/@up@(rt)/@(pre)cases.dsc $(BINdir)/xsubstr
	rm -f @(pre)@(rt).dsc
	$(BINdir)/xsubstr -i $(mySRCdir)/@up@(rt)/@(pre)cases.dsc -o $@ \
           -s '^gcc' '$(GOODGCC)' -s ' gcc' ' $(GOODGCC)'
   @endwhile
@(rt)srch.o : $(mySRCdir)/@(rt)srch.c s@(rt).dsc d@(rt).dsc c@(rt).dsc z@(rt).dsc \
              c@(rt)c.dsc z@(rt)c.dsc
	$(XCC) $(XCCFLAGS) -o @(rt)srch.o -c $(mySRCdir)/@(rt)srch.c
x@(rt)srch : @(rt)srch.o
	$(XCC) $(XCCFLAGS) -o x@(rt)srch @(rt)srch.o
@endwhile
@whiledef rt iamax axpy copy swap scal nrm2 asum cpsc set axpby rot
   @whiledef pre z c d s
@(pre)@(rt).dsc : $(mySRCdir)/@up@(rt)/@(pre)cases.dsc $(BINdir)/xsubstr
	rm -f @(pre)@(rt).dsc
	$(BINdir)/xsubstr -i $(mySRCdir)/@up@(rt)/@(pre)cases.dsc -o $@ \
           -s '^gcc' '$(GOODGCC)' -s ' gcc' ' $(GOODGCC)'
   @endwhile
@(rt)srch.o : $(mySRCdir)/@(rt)srch.c s@(rt).dsc d@(rt).dsc c@(rt).dsc z@(rt).dsc
	$(XCC) $(XCCFLAGS) -o @(rt)srch.o -c $(mySRCdir)/@(rt)srch.c
x@(rt)srch : @(rt)srch.o
	$(XCC) $(XCCFLAGS) -o x@(rt)srch @(rt)srch.o
@endwhile
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @whiledef rt iamax axpy copy swap scal dot nrm2 asum cpsc set axpby rot
@(pre)install_@(rt) : x@(rt)srch
	rm -f GEN/*
	./x@(rt)srch -p @(pre)
	cp -f GEN/* $(L1Bdir)/.
ATL_@(pre)@(rt)_stub.o : $(mySRCdir)/@up@(rt)/@(rt)_stub.c
	$(KC) $(KCFLAGS) -D@(typ) -c -o $@ $(mySRCdir)/@up@(rt)/@(rt)_stub.c
@(pre)@(rt)time.o : $(mySRCdir)/@(rt)time.c
	$(KC) $(KCFLAGS) -o @(pre)@(rt)time.o -c -D@(typ) $(mySRCdir)/@(rt)time.c
@(pre)@(rt)test.o : $(mySRCdir)/@(rt)test.c tstlib.grd
	$(KC) $(KCFLAGS) -o @(pre)@(rt)test.o -c -D@(typ) $(mySRCdir)/@(rt)test.c
@(pre)@(rt)test : @(pre)@(rt)test.o ATL_@(pre)@(rt)_stub.o
	rm -f @(pre)@(rt).c @(pre)@(rt).o x@(pre)@(rt)tst
	cp $(mySRCdir)/@up@(rt)/$(urout) @(pre)@(rt).c
@skip	cat $(mySRCdir)/@up@(rt)/@(rt)_stub.c >> @(pre)@(rt).c
	$(@(pre)UCC) $(CDEFS) $(@(pre)UCCFLAGS) -D@(typ) -c @(pre)@(rt).c
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt)tst @(pre)@(rt)test.o \
          ATL_@(pre)@(rt)_stub.o @(pre)@(rt).o $(TESTlib) $(LIBS)
	$(ATLRUN) $(L1Tdir) x@(pre)@(rt)tst -n $(N) $(opt)
@(pre)@(rt)time : @(pre)@(rt)case
@(pre)@(rt)case : @(pre)@(rt)time.o ATL_@(pre)@(rt)_stub.o \
                  $(SYSdir)/time.o auxlib
	rm -f @(pre)@(rt).c @(pre)@(rt).o x@(pre)@(rt)
	cp $(mySRCdir)/@up@(rt)/$(urout) @(pre)@(rt).c
@skip	cat $(mySRCdir)/@up@(rt)/@(rt)_stub.c >> @(pre)@(rt).c
	$(@(pre)UCC) $(CDEFS) $(@(pre)UCCFLAGS) -D@(typ) -c @(pre)@(rt).c
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt) @(pre)@(rt)time.o \
	           ATL_@(pre)@(rt)_stub.o @(pre)@(rt).o \
              $(SYSdir)/time.o $(ATLASlib) $(LIBS)
	$(ATLRUN) $(L1Tdir) x@(pre)@(rt) -n $(N) $(fout) $(opt)
@skip                  -f res/@(pre)@up@(rt)$(IDNUM)_$(incX).tim
   @endwhile

   @undef typ
@endwhile
@define rt @dot@
@multidef typ DCPLX SCPLX
@whiledef pre z c
@(pre)install_@(rt)c : x@(rt)srch
	rm -f GEN/*
	./x@(rt)srch -p @up@(pre)
	cp -f GEN/* $(L1Bdir)/.
@(pre)dotctest.o : $(mySRCdir)/@(rt)test.c tstlib.grd
	$(KC) $(KCFLAGS) -o @(pre)@(rt)ctest.o -c -D@(typ) -DConj_ $(mySRCdir)/@(rt)test.c
@(pre)@(rt)ctest : @(pre)@(rt)ctest.o ATL_@(pre)@(rt)_stub.o
	rm -f @(pre)@(rt)c.c @(pre)@(rt)c.o
	cp $(mySRCdir)/@up@(rt)/$(urout) @(pre)@(rt)c.c
@skip	cat $(mySRCdir)/@up@(rt)/@(rt)_stub.c >> @(pre)@(rt)c.c
	$(@(pre)UCC) $(CDEFS) $(@(pre)UCCFLAGS) -D@(typ) -DConj_ -c @(pre)@(rt)c.c
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt)ctst @(pre)@(rt)ctest.o \
          ATL_@(pre)@(rt)_stub.o @(pre)@(rt)c.o $(TESTlib) $(LIBS)
	$(ATLRUN) $(L1Tdir) x@(pre)@(rt)ctst -n $(N) $(opt)
@(pre)@(rt)ccase : @(pre)@(rt)time.o $(SYSdir)/time.o \
                   ATL_@(pre)@(rt)_stub.o auxlib
	rm -f @(pre)@(rt).c @(pre)@(rt).o
	cp $(mySRCdir)/@up@(rt)/$(urout) @(pre)@(rt).c
@skip	cat $(mySRCdir)/@up@(rt)/@(rt)_stub.c >> @(pre)@(rt).c
	$(@(pre)UCC) $(CDEFS) $(@(pre)UCCFLAGS) -D@(typ) -DConj_ -c @(pre)@(rt).c
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt) @(pre)@(rt)time.o \
	           ATL_@(pre)@(rt)_stub.o @(pre)@(rt).o \
              $(SYSdir)/time.o $(ATLASlib) $(LIBS)
	$(ATLRUN) $(L1Tdir) x@(pre)@(rt) -n $(N) $(fout) $(opt)
   @undef typ
@endwhile
@undef rt
@ROUT Make.l3tune
side=Left_
uplo=Upper_
trans=NoTranspose_
diag=NonUnitDiag_

force_build :

res/atlas_trsmNB.h : xgen_trsmnb \
                     res/sTRSM_NB res/dTRSM_NB res/cTRSM_NB res/zTRSM_NB
	./xgen_trsmnb
	rm -f $(INCAdir)/atlas_trsmNB.h
	cp res/atlas_trsmNB.h $(INCAdir)/.
xgen_trsmnb : $(mySRCdir)/gen_trsmnb.c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/gen_trsmnb.c

@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
res/@(pre)TRSM_NB :
	$(MAKE) x@(pre)invtrsm
	$(ATLRUN) $(L3Tdir) x@(pre)invtrsm
x@(pre)invtrsm : @(pre)invtrsm.o ATL_@(pre)trsm.o 
	$(MAKE) @(pre)bindep
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)invtrsm.o ATL_@(pre)trsm.o \
                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
@(pre)bindep :
	cd $(BINdir) ; $(MAKE) @(pre)lapack @(pre)tstlib @(pre)l3lib @(pre)l2lib \
                            @(pre)l1lib @(pre)cblas
@(pre)invtrsm.o : $(mySRCdir)/invtrsm.c $(INCSdir)/atlas_misc.h (INCAdir)/atlas_@(pre)amm_sum.h \
                  $(INCSdir)/atlas_lvl3.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -DATLCINT -DTimeC -D@(typ) $(mySRCdir)/invtrsm.c
ATL_@(pre)trsm.o : $(mySRCdir)/ATL_trsm.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_trsm.c

   @undef typ
@endwhile

@multidef typ QREAL DREAL SREAL
@whiledef pre q d s
@(pre)trsmXover = $(INCAdir)/atlas_@(pre)trsmXover.h

$(@(pre)trsmXover) : res/atlas_@(pre)trsmXover.h

res/atlas_@(pre)trsmXover.h :
	$(MAKE) @(pre)tsmfc
	cp $(@(pre)trsmXover) res/.

@(pre)tsmfc :
	rm -f $(@(pre)trsmXover)
	cd $(L3Bdir) ; $(MAKE) @(pre)lib
	$(MAKE) x@(pre)tsmfc2 pre=@(pre) typ=@(typ) side=$(side) uplo=Upper_ \
                tran=NoTranspose_ diag=$(diag)
	$(MAKE) x@(pre)tsmfc2 pre=@(pre) typ=@(typ) side=$(side) uplo=Upper_ \
                tran=Transpose_ diag=$(diag)
	$(MAKE) x@(pre)tsmfc2 pre=@(pre) typ=@(typ) side=$(side) uplo=Lower_ \
                tran=NoTranspose_ diag=$(diag)
	$(MAKE) x@(pre)tsmfc2 pre=@(pre) typ=@(typ) side=$(side) uplo=Lower_ \
                tran=Transpose_ diag=$(diag)
	cd $(L3Bdir) ; $(MAKE) @(pre)lib
   @undef typ
@endwhile

$(pre)tsmfc.o : force_build
	$(KC) -o $(pre)tsmfc.o -c $(KCFLAGS) -D$(typ) $(mySRCdir)/tsmfc.c \
                 -D$(side) -D$(uplo) -D$(tran) -D$(diag)

x$(pre)tsmfc2 : force_build
	rm -f x$(pre)tsmfc
	$(MAKE) x$(pre)tsmfc pre=$(pre) typ=$(typ) side=$(side) uplo=$(uplo) \
                             tran=$(tran) diag=$(diag)
	$(ATLRUN) $(L3Tdir) x$(pre)tsmfc -f $(INCAdir)/atlas_$(pre)trsmXover.h

x$(pre)tsmfc : force_build $(INCAdir)/atlas_type.h $(SYSdir)/time.o \
               $(pre)tsmfc.o $(INCAdir)/atlas_$(pre)sysinfo.h
	$(KC) -o big_trsm.o -c $(KCFLAGS) -D$(typ) \
                 -D$(side) -D$(uplo) -D$(tran) -D$(diag) -DBIG_TRSM \
                 $(SRCdir)/src/blas/level3/kernel/ATL_trsmL.c
	$(KC) -o small_trsm.o -c $(KCFLAGS) -D$(typ) \
                 -D$(side) -D$(uplo) -D$(tran) -D$(diag) -DSMALL_TRSM \
                  $(SRCdir)/src/blas/level3/kernel/ATL_trsmL.c
	$(CLINKER) $(CLINKFLAGS) -o $@ $(pre)tsmfc.o $(SYSdir)/time.o \
                                      big_trsm.o small_trsm.o $(ATLASlib) \
                                      $(ATLASlib) $(LIBS)

clean : 
	rm -f *.o x?tsmfc

@ROUT Make.r1tune
include Make.inc
mySRCdir = $(SRCdir)/tune/blas/ger
r1SRCdir = $(SRCdir)/src/blas/ger
R1Kdir = $(mySRCdir)/R1CASES/
R2Kdir = $(mySRCdir)/R2CASES/

sR1CC = $(SKC)
sR1CFLAGS = $(SKCFLAGS)
cR1CC = $(SKC)
cR1CFLAGS = $(SKCFLAGS)
dR1CC = $(DKC)
dR1CFLAGS = $(DKCFLAGS)
zR1CC = $(DKC)
zR1CFLAGS = $(DKCFLAGS)
sR2CC = $(sR1CC)
sR2CFLAGS = $(sR1CFLAGS)
dR2CC = $(dR1CC)
dR2CFLAGS = $(dR1CFLAGS)
cR2CC = $(cR1CC)
cR2CFLAGS = $(cR1CFLAGS)
zR2CC = $(zR1CC)
zR2CFLAGS = $(zR1CFLAGS)
cas=0
mu=16
nu=2
l1mul=75
iflag=0
Mt=297
Nt=177
ldat=$(Mt)
M=1000
N=1000
lda=$(M)
incy=1
flushKB = 4192
align = -Fx 16 -Fy 16 -Fa 16
tflags =
ssegenargs=
#
# Macros for generator
#
mu=1
nu=1
genflags=
order=clmajor

@multidef dp 
   $(INCSdir)/atlas_r1parse.h@^$(INCSdir)/atlas_r1testtime.h 
   $(INCSdir)/atlas_r1parse.h 
   $(INCSdir)/atlas_r1parse.h@^$(INCSdir)/atlas_r2testtime.h 
   $(INCSdir)/atlas_r1parse.h 
   $(INCSdir)/atlas_r1parse.h
@endmultidef
@whiledef rt r1ksearch r1hgen r2ksearch r2hgen r1sum2csv
x@(rt) : @(rt).o
	$(XCC) $(XCCFLAGS) -o $@ @(rt).o
@(rt).o : $(INCAdir)/atlas_type.h $(mySRCdir)/@(rt).c \
              @(dp)
	$(XCC) -c $(XCCFLAGS) -o $@ $(mySRCdir)/@(rt).c
   @undef dp
@endwhile
$(INCAdir)/atlas_type.h :
	cd $(SYSdir) ; $(MAKE) RunTyp
l1lib : sl1lib dl1lib cl1lib zl1lib 
tstlib : ststlib dtstlib ctstlib ztstlib

force_build :

res/L1CacheSize : $(SYSdir)/res/L1CacheSize
	cd $(SYSdir) ; $(MAKE) res/L1CacheSize
	ln -s $(SYSdir)/res/L1CacheSize res/L1CacheSize
res/goodgcc.txt :
	echo "'$(GOODGCC)'" > res/goodgcc.txt

ATL_ger.c : $(r1SRCdir)/ATL_ger.c
	rm -f ATL_ger.c
	echo "#define ATL_TUNING" > ATL_ger.c
	cat $(r1SRCdir)/ATL_ger.c >> ATL_ger.c
ATL_ger2.c : $(r1SRCdir)/ATL_ger2.c
	rm -f ATL_ger2.c
	echo "#define ATL_TUNING" > ATL_ger2.c
	cat $(r1SRCdir)/ATL_ger2.c >> ATL_ger2.c

@multidef typ DCPLX SCPLX DREAL SREAL
@multidef upr d s d s
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
   @define degkern @ATL_@(pre)ger2k_Mlt16.o ATL_@(pre)ger2k_Nlt8.o@
   @define degkern @ATL_@(pre)gerk_Mlt16.o ATL_@(pre)gerk_axpy.o@
      @ptyp z c
@(pre)r1tstobj = ATL_@(pre)ger1k.o  \
            ATL_@(pre)gerk_Mlt16.o ATL_@(pre)gerk_axpy.o \
            ATL_@(pre)gerck_Mlt16.o ATL_@(pre)gerck_axpy.o 
@(pre)r2tstobj = ATL_@(pre)ger2k.o  \
            ATL_@(pre)ger2k_Mlt16.o ATL_@(pre)ger2k_Nlt8.o \
            ATL_@(pre)ger2ck_Mlt16.o ATL_@(pre)ger2ck_Nlt8.o 
@(pre)r1obj = ATL_@(pre)ger.o ATL_@(pre)ger1k.o \
         ATL_@(pre)gerk_Mlt16.o ATL_@(pre)gerk_axpy.o \
         ATL_@(pre)gerck_Mlt16.o ATL_@(pre)gerck_axpy.o 
@(pre)r2obj = ATL_@(pre)ger2.o ATL_@(pre)ger2k.o \
         ATL_@(pre)ger2k_Mlt16.o ATL_@(pre)ger2k_Nlt8.o \
         ATL_@(pre)ger2ck_Mlt16.o ATL_@(pre)ger2ck_Nlt8.o 
      @ptyp d s
@(pre)r1tstobj = ATL_@(pre)ger1k.o ATL_@(pre)gerk_Mlt16.o ATL_@(pre)gerk_axpy.o
@(pre)r2tstobj = ATL_@(pre)ger2k.o ATL_@(pre)ger2k_Mlt16.o ATL_@(pre)ger2k_Nlt8.o
@(pre)r1obj = ATL_@(pre)ger.o ATL_@(pre)ger1k.o ATL_@(pre)gerk_Mlt16.o ATL_@(pre)gerk_axpy.o
@(pre)r2obj = ATL_@(pre)ger2.o ATL_@(pre)ger2k.o ATL_@(pre)ger2k_Mlt16.o ATL_@(pre)ger2k_Nlt8.o
      @ptyp !

@(pre)nxtune :
	cd $(BLDdir)/src/blas/reference/level2 ; make @(pre)lib
	cd $(GR1dir) ; make @(pre)lib
@skip	cd $(L2Bdir) ; make @(pre)lib
	$(MAKE) x@(pre)s1nxtune
	$(ATLRUN) $(R1Tdir) x@(pre)s1nxtune -U u -n 2000 -r 1 -s 10 -C 0 \
                  -o $(INCAdir)/atlas_@(pre)syrNX.h
	$(MAKE) x@(pre)s2nxtune
	$(ATLRUN) $(R1Tdir) x@(pre)s2nxtune -U u -n 2000 -r 1 -s 10 -C 0 \
                  -o $(INCAdir)/atlas_@(pre)syr2NX.h
	cd $(L2Bdir) ; make @(pre)lib
#
# This target is for directly timing a call to the kernel, w/o cache flushing
#
@define degkern @ATL_@(pre)gerk_Mlt16.o ATL_@(pre)gerk_axpy.o@
@define degkern @ATL_@(pre)ger2k_Mlt16.o ATL_@(pre)ger2k_Nlt8.o@
   @multidef rk 1  2
   @whiledef rt r1 r2
      @addkeys rank=@rt
@(pre)@(rt)ktime : @(pre)@(rt)ktime.o @(degkern)
	rm -f ATL_@(pre)ge@(rt).c
	cp -f $(R@(rk)Kdir)/$(@(rt)rout) ATL_@(pre)ge@(rt).c
	$(@(pre)@up@(rt)CC) -c $(CDEFS) $(@(pre)@up@(rt)CFLAGS) -I$(R1Tdir) -o ATL_@(pre)ge@(rt).o \
           -D@(typ) -DATL_@(pre)ge@(rt)_a1_x1_yX=ATL_UGERK ATL_@(pre)ge@(rt).c
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt)ktime @(pre)@(rt)ktime.o \
                   ATL_@(pre)ge@(rt).o \
                   @(degkern) \
                   $(TESTlib) $(ATLASlib)
	$(ATLRUN) $(R1Tdir) x@(pre)@(rt)ktime -m $(M) -n $(N) -l $(lda) \
                  -C $(flushKB) $(align) $(tflags)
#
# These targets are for post-@(rt) tuning of ref/@(rt) crossover point (NX)
#
@iif rk = 1
   @PTYP s d `   @define rnx @syr@`
   @PTYP c z `   @define rnx @her@`
@endiif
@iif rk = 2
   @PTYP s d `   @define rnx @syr2@`
   @PTYP c z `   @define rnx @her2@`
@endiif
x@(pre)s@(rk)nxtune : @(pre)s@(rk)nxtune.o ATL_@(pre)@(rnx)_NX.o
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)s@(rk)nxtune @(pre)s@(rk)nxtune.o \
                   ATL_@(pre)@(rnx)_NX.o $(TESTlib) $(ATLASlib)
@(pre)s@(rk)nxtune.o : $(mySRCdir)/s@(rk)nxtune.c $(INCAdir)/atlas_@(pre)@(rt).h \
        $(INCAdir)/atlas_@(pre)@(rt)_L1.h $(INCAdir)/atlas_@(pre)@(rt)_L2.h 
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) $(mySRCdir)/s@(rk)nxtune.c
@undef rnx
#
# These targets use extract to generate a GE@up@(rt) kernel
#
@(pre)@(rt)ext_C : $(BINdir)/xextract EXTDIR
	$(BINdir)/xextract -b $(SRCdir)/tune/blas/gemv/atlas-l2g.base -langC \
                           order=$(order) rout=@(rt)_C nu=$(nu) type=@(typ) \
                           -def MU $(mu) $(genflags) -o EXTDIR/@(pre)@(rt)_C.c
@(pre)@(rt)ext_sse : $(BINdir)/xextract EXTDIR
	$(BINdir)/xextract -b $(SRCdir)/tune/blas/gemv/atlas-l2g.base \
                           order=$(order) rout=@(rt)_sse nu=$(nu) type=@(typ) \
                           -def MU $(mu) $(genflags) -o EXTDIR/@(pre)@(rt)_sse.c
#
#
# This target calls the GE@up@(rt) driver (which blocks), with cache flushing
#
@(pre)@(rt)time : @(pre)@(rt)time.o x@(rt)hgen
	rm -f $(@(pre)@(rt)obj) ATL_@(pre)ge@(rt).c atlas_@(pre)@(rt).h \
              @(rt)h.bak x@(pre)@(rt)time
	- mv $(INCAdir)/atlas_@(pre)@(rt).h r@(rt).bak
	./x@(rt)hgen -p @(pre) -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag)
	cp -f $(R@(rk)Kdir)/$(@(rt)rout) ATL_@(pre)ge@(rt)k.c
	$(MAKE) $(@(pre)@(rt)obj)
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt)time @(pre)@(rt)time.o \
                   $(@(pre)@(rt)obj) $(TESTlib) $(ATLASlib)
	$(ATLRUN) $(R1Tdir) x@(pre)@(rt)time -m $(M) -n $(N) -l $(lda) \
                  -C $(flushKB) $(align) $(tflags)
	- mv @(rt)h.bak $(INCAdir)/atlas_@(pre)@(rt).h

@(pre)@(rt)ktest : @(pre)@(rt)ktest.o x@(rt)hgen
	rm -f $(@(pre)@(rt)tstobj) ATL_@(pre)ge@(rt)k.c x@(pre)@(rt)ktest
	- mv $(INCAdir)/atlas_@(pre)@(rt).h @(rt)h.bak
	./x@(rt)hgen -p @(pre) -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag)
	cp -f $(R@(rk)Kdir)/$(@(rt)rout) ATL_@(pre)ge@(rt)k.c
	$(MAKE) $(@(pre)@(rt)tstobj)
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt)ktest @(pre)@(rt)ktest.o \
                   $(@(pre)@(rt)tstobj) $(TESTlib) $(ATLASlib)
	$(ATLRUN) $(R1Tdir) x@(pre)@(rt)ktest -m 1 $(Mt) -n 1 $(Nt) -y 1 $(incy) \
                  -l 1 $(ldat) $(align)
	- mv @(rt)h.bak $(INCAdir)/atlas_@(pre)@(rt).h

@(pre)@(rt)time.o : $(mySRCdir)/@(rt)ktime.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) $(mySRCdir)/@(rt)ktime.c
@(pre)@(rt)ktime.o : $(mySRCdir)/@(rt)ktime.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) -DTIME_KERNEL $(mySRCdir)/@(rt)ktime.c
@(pre)@(rt)ktest.o : $(mySRCdir)/@(rt)ktest.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) $(mySRCdir)/@(rt)ktest.c
@(pre)@(rt)test.o : $(mySRCdir)/@(rt)test.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) $(mySRCdir)/@(rt)test.c
@(pre)ge@(rt)tune.o : $(mySRCdir)/ge@(rt)tune.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) $(mySRCdir)/ge@(rt)tune.c
      @undef rk
      @undef degkern
      @killkeys rank
   @endwhile
ATL_@(pre)ger.o : ATL_ger.c atlas_@(pre)r1.h
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) -DTUNING -I$(R1Tdir) ATL_ger.c
ATL_@(pre)ger2.o : ATL_ger2.c atlas_@(pre)r2.h
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) -DTUNING -I$(R1Tdir) ATL_ger2.c
      @ptyp z c `@define be @Xi0@`
@whiledef suf Mlt16 axpy Nlt8
   @whiledef rt r r2
ATL_@(pre)ge@(rt)k_@(suf).o : $(r1SRCdir)/ATL_ge@(rt)k_@(suf).c
	$(@up@(upr)KC) -c $(@up@(upr)KCFLAGS) $(CDEFS) -I$(R1Tdir) -DTUNING=1 \
                       -o $@ -D@(typ) $(r1SRCdir)/ATL_ge@(rt)k_@(suf).c
@PTYP c z
ATL_@(pre)ge@(rt)ck_@(suf).o : $(r1SRCdir)/ATL_ge@(rt)k_@(suf).c
	$(@up@(upr)KC) -c $(@up@(upr)KCFLAGS) $(CDEFS) -DConj_ -I$(R1Tdir) \
                       -DTUNING -o $@ -D@(typ) $(r1SRCdir)/ATL_ge@(rt)k_@(suf).c
@PTYP !
   @endwhile
@endwhile
   @multidef dep @^ res/@(pre)R1K.sum@^@(pre)r1install
   @whiledef rt r1 r2
ATL_@(pre)ge@(rt)k.o : ATL_@(pre)ge@(rt)k.c
	$(@(pre)@up@(rt)CC) -c $(CDEFS) $(@(pre)@up@(rt)CFLAGS) -I$(R1Tdir) -o $@ -D@(typ) ATL_@(pre)ge@(rt)k.c
ATL_@(pre)ge@(rt)c.o : ATL_@(pre)ge@(rt).c
	$(@(pre)@up@(rt)CC) -c $(CDEFS) $(@(pre)@up@(rt)CFLAGS) -I$(R1Tdir) -o $@ -D@(typ) -DConj_ \
              -DATL_UGERK=ATL_GERK_Conj ATL_@(pre)ge@(rt).c
res/@(pre)@up@(rt)K.sum : x@(rt)ksearch force_build @(dep)
	./x@(rt)ksearch -p @(pre)
	$(MAKE) @(pre)@(rt)install
@(pre)@(rt)outd:
	mkdir @(pre)@(rt)outd
@(pre)@(rt)install : xccobj @(pre)@(rt)outd x@(rt)hgen force_build
	rm -f @(pre)@(rt)outd/*
	if [ -s "$(GR1dir)/Make_@(pre)@(rt)" ]; then \
           cd  $(GR1dir) ; $(MAKE) -f Make_@(pre)@(rt) killall ; \
           rm -f $(GR1dir)/Make_@(pre)@(rt) ; \
        fi
	./x@(rt)hgen -p @(pre) -F res/@(pre)@up@(rt)K.sum -d @(pre)@(rt)outd
	cp -f @(pre)@(rt)outd/Make_@(pre)@(rt) $(GR1dir)/.
	cp @(pre)@(rt)outd/*.c $(GR1dir)/.
	cp -f @(pre)@(rt)outd/*.h $(INCAdir)/.
	if [ -s "xccobj.exe" ] ; then \
	   cp -f xccobj.exe $(GR1dir)/. ; \
	elif [ -s "xccobj" ]; then \
           cp -f xccobj $(GR1dir)/. ; \
        fi
	touch $(INCSdir)/atlas_@(rt).h
	rm -f @(pre)@(rt)outd/* ; rmdir @(pre)@(rt)outd
      @undef dep
   @endwhile

@whiledef rt syr syr2 her her2
ATL_@(pre)@(rt)_NX.o : $(SRCdir)/src/blas/level2/ATL_@(rt).c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) -DATL_NXTUNE \
                $(SRCdir)/src/blas/level2/ATL_@(rt).c
@endwhile
@(pre)l1lib :
	cd $(BINdir) ; $(MAKE) @(pre)l1lib
@(pre)tstlib :
	cd $(BINdir) ; $(MAKE) @(pre)tstlib
@beginskip
@(pre)cases.dsc : $(BINdir)/xsubstr $(mySRCdir)/CASES/@(pre)cases.dsc
	$(BINdir)/xsubstr -i $(mySRCdir)/CASES/@(pre)cases.dsc -o $@ \
           -s '^gcc' '$(GOODGCC)' -s ' gcc' ' $(GOODGCC)'
@endskip
   @undef upr
   @undef typ
   @killkeys ptyp
@endwhile

$(BINdir)/xsubstr :
	cd $(BINdir) ; $(MAKE) xsubstr
$(BINdir)/xccobj :
	cd $(BINdir) ; $(MAKE) xccobj
xccobj : $(BINdir)/xccobj
	-@ cp -f $(BINdir)/xccobj .
	-@ cp -f $(BINdir)/xccobj.exe .
EXTDIR :
	mkdir EXTDIR
$(BINdir)/xextract :
	cd $(BINdir) ; make xextract
@ROUT Make.mvtune
include Make.inc
mySRCdir = $(SRCdir)/tune/blas/gemv
mvSRCdir = $(SRCdir)/src/blas/gemv
MVNKdir = $(mySRCdir)/MVNCASES/
MVTKdir = $(mySRCdir)/MVTCASES/

cas=0
lat=0
nY=1
ngap=1
agap=1
gapmul=1
xregs=1
aregs=1
yregs=$(nY)
Mt=997
Nt=177
ldat=1111
M=1000
N=1000
lda=M
mvrout=bogus
ta=N
nta=T
iflag=0
l1mul=80
outf=
align = -Fx 16 -Fy 16 -Fa 16
sMVCC = $(SKC)
sMVFLAGS = $(SKCFLAGS)
cMVCC = $(SKC)
cMVFLAGS = $(SKCFLAGS)
dMVCC = $(DKC)
dMVFLAGS = $(DKCFLAGS)
zMVCC = $(DKC)
zMVFLAGS = $(DKCFLAGS)
EXTFLAGS =
sSVCC = $(SKC)
sSVFLAGS = $(SKCFLAGS)
cSVCC = $(SKC)
cSVFLAGS = $(SKCFLAGS)
dSVCC = $(DKC)
dSVFLAGS = $(DKCFLAGS)
zSVCC = $(DKC)
zSVFLAGS = $(DKCFLAGS)
SEXTFLAGS = 
opt=
BETA=1
beta=1
flushKB=-1
salphas = 3 0.0 1.0 0.5
sbetas = 3 0.0 1.0 0.2
calphas = 4 0.0 0.0 1.0 0.0 2.3 0.0 0.5 0.25
cbetas = 4 0.0 0.0 1.0 0.0 0.8 0.0 0.2 0.6
incs = -y 4 -1 1 2 -3 -x 4 -1 1 -5 4
dalphas = $(salphas)
dbetas = $(sbetas)
zalphas = $(calphas)
zbetas = $(cbetas)
ntlb=
#
# Macros for generator
#
mu=1
nu=1
minM=$(mu)
minN=$(nu)
genflags=
order=clmajor

all:
$(BINdir)/xextract :
	cd $(BINdir) ; make xextract
@whiledef rt mvnksearch mvtksearch mvthgen mvnhgen
x@(rt) : @(rt).o
	$(XCC) $(XCCFLAGS) -o $@ @(rt).o
@(rt).o : $(mySRCdir)/@(rt).c $(INCSdir)/atlas_mvparse.h \
          $(INCSdir)/atlas_mvtesttime.h
	$(XCC) -c $(XCCFLAGS) -o $@ $(mySRCdir)/@(rt).c
@endwhile
$(INCAdir)/atlas_type.h :
	cd $(SYSdir) ; $(MAKE) RunTyp
res/goodgcc.txt :
	echo "'$(GOODGCC)'" > res/goodgcc.txt

auxlib :
	cd $(AUXdir) ; $(MAKE) lib
l1lib : sl1lib dl1lib cl1lib zl1lib 
tstlib : ststlib dtstlib ctstlib ztstlib

force_build :

res/L1CacheSize : $(SYSdir)/res/L1CacheSize
	cd $(SYSdir) ; $(MAKE) res/L1CacheSize
	ln -s $(SYSdir)/res/L1CacheSize res/L1CacheSize

ATL_gemv.c :
	cp $(mySRCdir)/ATL_gemv.c .
@multidef UPR D S D S
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
   @ptyp z c
@(pre)obj = ATL_@(pre)gemv.o \
       ATL_@(pre)gemvN_b0.o ATL_@(pre)gemvT_b0.o \
       ATL_@(pre)gemvN_b1.o ATL_@(pre)gemvT_b1.o \
       ATL_@(pre)gemvN_bXi0.o ATL_@(pre)gemvT_bXi0.o \
       ATL_@(pre)gemvN_bX.o ATL_@(pre)gemvT_bX.o

@(pre)tstNobj = ATL_@(pre)gemvN_b0.o ATL_@(pre)gemvNc_b0.o \
           ATL_@(pre)gemvN_b1.o ATL_@(pre)gemvNc_b1.o \
           ATL_@(pre)gemvN_bXi0.o ATL_@(pre)gemvNc_bXi0.o \
           ATL_@(pre)gemvN_bX.o ATL_@(pre)gemvNc_bX.o

@(pre)tstTobj = ATL_@(pre)gemvT_b0.o ATL_@(pre)gemvC_b0.o \
           ATL_@(pre)gemvT_b1.o ATL_@(pre)gemvC_b1.o \
           ATL_@(pre)gemvT_bXi0.o ATL_@(pre)gemvC_bXi0.o \
           ATL_@(pre)gemvT_bX.o ATL_@(pre)gemvC_bX.o
   @ptyp d s
@(pre)tstNobj = ATL_@(pre)gemvN_b0.o ATL_@(pre)gemvN_b1.o ATL_@(pre)gemvN_bX.o
@(pre)tstTobj = ATL_@(pre)gemvT_b0.o ATL_@(pre)gemvT_b1.o ATL_@(pre)gemvT_bX.o
@(pre)obj = ATL_@(pre)gemv.o $(@(pre)tstNobj) $(@(pre)tstTobj)
   @ptyp !
@(pre)tstobj = $(@(pre)tstNobj) $(@(pre)tstTobj)
@(pre)mvttstobj = ATL_@(pre)mvtk.o ATL_@(pre)mvtk_smallN.o ATL_@(pre)mvtk_Mlt16.o
@(pre)mvttobj = ATL_@(pre)mvtk_b0.o ATL_@(pre)mvtk_b1.o \
           ATL_@(pre)mvtk_smallN.o ATL_@(pre)mvtk_Mlt16.o
@(pre)mvntstobj = ATL_@(pre)mvnk.o ATL_@(pre)mvnk_smallN.o ATL_@(pre)mvnk_Mlt16.o
@(pre)mvntobj = ATL_@(pre)mvnk_b0.o ATL_@(pre)mvnk_b1.o \
           ATL_@(pre)mvnk_smallN.o ATL_@(pre)mvnk_Mlt16.o

@define ru @mv@
@multidef TA T N
@multidef TF -DATL_TRANS_ @^
@whiledef rt mvt mvn
   @define degkern @ATL_@(pre)@(rt)k_Mlt16.o ATL_@(pre)@(rt)k_smallN.o@
#
# This target searches for best kernels and installs them
#
res/@(pre)@up@(rt)K.sum : x@(rt)ksearch force_build
	./x@(rt)ksearch -p @(pre)
	$(MAKE) @(pre)@(rt)install
#
# This target uses extract to generate a @up@(rt) kernel
#
@(pre)@(rt)ext_C : $(BINdir)/xextract EXTDIR
	$(BINdir)/xextract -b $(mySRCdir)/atlas-l2g.base -langC \
                           order=$(order) rout=@(rt)_C nu=$(nu) type=@(typ) \
                           -def MU $(mu) $(genflags) -o EXTDIR/@(pre)@(rt)_C.c
@(pre)@(rt)ext_sse : $(BINdir)/xextract EXTDIR
	$(BINdir)/xextract -b $(mySRCdir)/atlas-l2g.base order=$(order) \
                           rout=@(rt)_sse nu=$(nu) type=@(typ) -def MU $(mu) \
                           $(genflags) -o EXTDIR/@(pre)@(rt)_sse.c
#
# This target calls the kernel directly, with the only cache flush coming 
# from the size of the operands themselves
#
@(pre)@(rt)ktime : @(pre)@(ru)ktime@(TA).o 
@skip @(degkern)
	rm -f ATL_@(pre)@(rt)k.c ATL_@(pre)gemv@(TA).o x@(pre)@(rt)ktime
	cp -f $(@up@(rt)Kdir)/$(@(rt)rout) ATL_@(pre)@(rt)k.c
	$(@(pre)@up@(ru)CC) -c $(CDEFS) $(@(pre)@up@(ru)FLAGS) -I$(MVTdir) -o ATL_@(pre)@(rt)k.o \
           -D@(typ) ATL_@(pre)@(rt)k.c
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt)ktime @(pre)@(ru)ktime@(TA).o \
                   ATL_@(pre)@(rt)k.o \
@skip                   @(degkern) \
                   $(TESTlib) $(ATLASlib)
	$(ATLRUN) $(MVTdir) x@(pre)@(rt)ktime -m $(M) -n $(N) -l $(lda) \
                  -C $(flushKB) $(align) $(tflags)
#
# This target calls the driver (which blocks), with cache flushing
#
@(pre)@(rt)time : @(pre)@(rt)time.o x@(rt)hgen
	- rm -f $(@(pre)@(rt)tobj) ATL_@(pre)@(rt)k.c atlas_@(pre)@(rt).h \
                @(rt)h.bak ATL_@(pre)ge@(ru)@(TA).o x@(pre)@(rt)time
	- mv $(INCAdir)/atlas_@(pre)@(rt).h @(rt)h.bak
	./x@(rt)hgen -p @(pre) -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag) $(ntlb)
	cp -f $(@up@(rt)Kdir)/$(@(rt)rout) ATL_@(pre)@(rt)k.c
	$(MAKE) $(@(pre)@(rt)tobj) ATL_@(pre)ge@(ru)@(TA).o
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt)time @(pre)@(rt)time.o \
                   ATL_@(pre)ge@(ru)@(TA).o $(@(pre)@(rt)tobj) \
                   $(TESTlib) $(ATLASlib)
	$(ATLRUN) $(MVTdir) x@(pre)@(rt)time -m $(M) -n $(N) -l $(lda) \
                  -C $(flushKB) $(align) $(tflags)
	- mv @(rt)h.bak $(INCAdir)/atlas_@(pre)@(rt).h
#
# This tester calls the driver routine that blocks
#
@(pre)@(rt)test : x@(rt)hgen @(pre)@(rt)test.o
	rm -f $(@(pre)@(rt)tobj) ATL_@(pre)@(rt)k.c  ATL_@(pre)gemv@(TA).o \
              x@(pre)@(rt)test
	- mv $(INCAdir)/atlas_@(pre)@(rt).h @(rt)h.bak
	./x@(rt)hgen -p @(pre) -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag) $(ntlb)
	cp -f $(@up@(rt)Kdir)/$(@(rt)rout) ATL_@(pre)@(rt)k.c
	$(MAKE) $(@(pre)@(rt)tobj) ATL_@(pre)ge@(ru)@(TA).o
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt)test @(pre)@(rt)test.o \
                   ATL_@(pre)ge@(ru)@(TA).o $(@(pre)@(rt)tobj) \
                   $(TESTlib) $(ATLASlib)
	$(ATLRUN) $(MVTdir) x@(pre)@(rt)test -m 1 $(Mt) -n 1 $(Nt) $(incs) \
                  -l 1 $(ldat) $(align) -a $(@(pre)alphas) -b $(@(pre)betas) 
	- mv @(rt)h.bak $(INCAdir)/atlas_@(pre)@(rt).h

@(pre)@(rt)ktest : x@(rt)hgen
	rm -f $(@(pre)@(rt)tstobj) ATL_@(pre)@(rt)k.c @(pre)@(rt)ktest.o \
              ATL_@(pre)gemv@(TA).o x@(pre)@(rt)ktest
	- mv $(INCAdir)/atlas_@(pre)@(rt).h @(rt)h.bak
	./x@(rt)hgen -p @(pre) -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag) $(ntlb)
	cp -f $(@up@(rt)Kdir)/$(@(rt)rout) ATL_@(pre)@(rt)k.c
	$(MAKE) @(pre)@(rt)ktest.o $(@(pre)@(rt)tstobj) beta=$(beta)
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(rt)ktest @(pre)@(rt)ktest.o \
                   $(@(pre)@(rt)tstobj) $(TESTlib) $(ATLASlib)
	$(ATLRUN) $(MVTdir) x@(pre)@(rt)ktest -m 1 $(Mt) -n 1 $(Nt) \
                  -l 1 $(ldat) $(align)
	- mv @(rt)h.bak $(INCAdir)/atlas_@(pre)@(rt).h

@(pre)@(rt)time.o : $(mySRCdir)/@(ru)ktime.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) @(TF) $(mySRCdir)/@(ru)ktime.c
@(pre)@(ru)time@(TA).o : $(mySRCdir)/@(ru)ktime.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) @(TF) $(mySRCdir)/@(ru)ktime.c

@(pre)@(ru)ktime@(TA).o : $(mySRCdir)/@(ru)ktime.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) @(TF) -DTIME_KERNEL $(mySRCdir)/@(ru)ktime.c
@(pre)@(rt)ktest.o : $(mySRCdir)/@(rt)ktest.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) -DBETA$(beta) @(TF) $(mySRCdir)/@(rt)ktest.c
@(pre)@(rt)test.o : $(mySRCdir)/@(rt)test.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) $(mySRCdir)/@(rt)test.c

ATL_@(pre)ge@(ru)@(TA).o : $(mvSRCdir)/ATL_ge@(ru)@(TA).c
	$(@up@(UPR)KC) -c $(@up@(UPR)KCFLAGS) $(CDEFS) -I$(MVTdir) \
                       -o $@ -D@(typ) $(mvSRCdir)/ATL_ge@(ru)@(TA).c
   @undef TA
   @undef TF
@endwhile

@whiledef rt mvn mvt
   @whiledef suf Mlt16 smallN
ATL_@(pre)@(rt)k_@(suf).o : $(mvSRCdir)/ATL_@(rt)k_@(suf).c
	$(@up@(UPR)KC) -c $(@up@(UPR)KCFLAGS) $(CDEFS) -I$(MVTdir) -DTUNING=1 \
                       -o $@ -D@(typ) $(mvSRCdir)/ATL_@(rt)k_@(suf).c
   @endwhile
ATL_@(pre)@(rt)k_b0.o : ATL_@(pre)@(rt)k.c
	$(@(pre)MVCC) $(@(pre)MVFLAGS) $(CDEFS) $(EXTFLAGS) -D@(typ) \
                 -DBETA0 -DATL_UGEMV=ATL_UGE@up@(rt)K_b0 -o ATL_@(pre)@(rt)k_b0.o \
                 -c ATL_@(pre)@(rt)k.c
ATL_@(pre)@(rt)k_b1.o : ATL_@(pre)@(rt)k.c
	$(@(pre)MVCC) $(@(pre)MVFLAGS) $(CDEFS) $(EXTFLAGS) -D@(typ) \
                 -DBETA1 -DATL_UGEMV=ATL_UGE@up@(rt)K -o ATL_@(pre)@(rt)k_b1.o \
                 -c ATL_@(pre)@(rt)k.c
ATL_@(pre)@(rt)k.o : ATL_@(pre)@(rt)k.c
	$(@(pre)MVCC) $(@(pre)MVFLAGS) $(CDEFS) $(EXTFLAGS) -D@(typ) \
                 -DBETA$(beta) -o ATL_@(pre)@(rt)k.o -c ATL_@(pre)@(rt)k.c

@endwhile
@beginskip
x@(pre)mvktime : @(pre)mvktime.o force_build
	cp $(mvrout) ATL_@(pre)gemvK.c
	$(@(pre)MVCC) $(@(pre)MVFLAGS) $(CDEFS) $(EXTFLAGS) -D@(typ) \
                 -DBETA1 -o ATL_@(pre)gemvK_b1.o -c ATL_@(pre)gemvK.c
	$(@(pre)MVCC) $(@(pre)MVFLAGS) $(CDEFS) $(EXTFLAGS) -D@(typ) \
                 -DBETA0 -o ATL_@(pre)gemvK_b0.o -c ATL_@(pre)gemvK.c
	$(@(pre)MVCC) $(@(pre)MVFLAGS) $(CDEFS) $(EXTFLAGS) -D@(typ) \
                 -DBETAX -o ATL_@(pre)gemvK_bX.o -c ATL_@(pre)gemvK.c
	$(CLINKER) $(CLINKFLAGS) -o $@ @(pre)mvktime.o ATL_@(pre)gemvK_b0.o \
            ATL_@(pre)gemvK_b1.o ATL_@(pre)gemvK_bX.o $(TESTlib) $(ATLASlib)

@(pre)mvktime.o : $(mySRCdir)/mvktime.c
	$(KC) -c $(KCFLAGS) -o $@ -D@(typ) $(mySRCdir)/mvktime.c
@endskip
ATL_@(pre)gemv.o : ATL_gemv.c atlas_@(pre)mvn.h atlas_@(pre)mvt.h
	$(@up@(pre)KC) -c -I$(MVTdir) $(@(pre)KCFLAGS) -o $@ -D@(typ) ATL_gemv.c
   @whiledef ta T N
      @ptyp z c `@define be @Xi0@`
      @whiledef be X 1 0
ATL_@(pre)gemv@(ta)_b@(be).o : ATL_@(pre)gemv@(ta).c
	$(@(pre)MVCC) -c -I$(MVTdir) $(@(pre)MVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
              -D@(typ) -DBETA@up@(be) -DALPHA1 ATL_@(pre)gemv@(ta).c
      @endwhile
   @endwhile
@PTYP Z C
   @multidef tf N  T
   @whiledef ta Nc C
      @whiledef be Xi0 X 1 0
ATL_@(pre)gemv@(ta)_b@(be).o : ATL_@(pre)gemv@(tf).c
	$(@(pre)MVCC) -c $(@(pre)MVFLAGS) $(CDEFS) $(EXTFLAGS) -I$(MVTdir) -o $@ \
              -D@(typ) -DBETA@up@(be) -DALPHA1 -DConj_ ATL_@(pre)gemv@(tf).c
      @endwhile
      @undef tf
   @endwhile
@PTYP !

@whiledef rt mvn mvt
@(pre)@(rt)outd :
	mkdir @(pre)@(rt)outd
@(pre)@(rt)install : xccobj @(pre)@(rt)outd x@(rt)hgen force_build
	rm -f @(pre)@(rt)outd/*
	if [ -s "$(GMVdir)/Make_@(pre)@(rt)" ]; then \
           cd  $(GMVdir) ; $(MAKE) -f Make_@(pre)@(rt) killall ; \
           rm -f $(GMVdir)/Make_@(pre)@(rt) ; \
        fi
	./x@(rt)hgen -p @(pre) -F res/@(pre)@up@(rt)K.sum -d @(pre)@(rt)outd
	cp -f @(pre)@(rt)outd/Make_@(pre)@(rt) $(GMVdir)/.
	cp @(pre)@(rt)outd/*.c $(GMVdir)/.
	cp -f @(pre)@(rt)outd/*.h $(INCAdir)/.
	if [ -s "xccobj.exe" ] ; then \
	   cp -f xccobj.exe $(GMVdir)/. ; \
	elif [ -s "xccobj" ]; then \
           cp -f xccobj $(GMVdir)/. ; \
        fi
	touch $(INCSdir)/atlas_mv.h
	rm -f @(pre)@(rt)outd/* ; rmdir @(pre)@(rt)outd
@endwhile
@(pre)l1lib :
	cd $(BINdir) ; $(MAKE) @(pre)l1lib
@(pre)tstlib :
	cd $(BINdir) ; $(MAKE) @(pre)tstlib
   @undef typ
   @undef UPR
   @killkeys ptyp
@endwhile
$(BINdir)/xccobj :
	cd $(BINdir) ; $(MAKE) xccobj
xccobj : $(BINdir)/xccobj
	-@ cp -f $(BINdir)/xccobj .
	-@ cp -f $(BINdir)/xccobj.exe .
$(BINdir)/xsubstr:
	cd $(BINdir) ; $(MAKE) xsubstr
EXTDIR :
	mkdir EXTDIR
@ROUT Make.mvtune_old
xmvsearch : mvsearch.o $(SYSdir)/time.o
	$(XCC) $(XCCFLAGS) -o $@ mvsearch.o
xgenmv : xtlb genmv.o
	$(XCC) $(XCCFLAGS) -o xgenmv genmv.o
@multidef typ QREAL DREAL SREAL
@multidef type "long@^double" double float
@whiledef pre q d s
@(pre)mvtimeN : force_build
	$(MAKE) -f Make.real joe pre='@(pre)' type=@(typ)  mu=$(mu) nu=$(nu) \
                   ta=N tadef=NOTRANSA_ muladd=$(muladd) lat=$(lat) \
                   xregs=$(xregs) ydup=$(ydup) maxm=$(maxm)
@(pre)mvtimeT : force_build
	$(MAKE) -f Make.real joe pre='@(pre)' type=@(type)  mu=$(mu) nu=$(nu) \
                   ta=T tadef=TRANSA_ muladd=$(muladd) lat=$(lat) \
                   xregs=$(xregs) ydup=$(ydup) maxm=$(maxm)

   @undef type
   @undef typ
@endwhile

@whiledef pre d s
@(pre)mvinstall: force_build
	$(MAKE) @(pre)mvinstallN `cat res/@(pre)mv_bestN`
	$(MAKE) @(pre)mvinstallT `cat res/@(pre)mv_bestT`
   @whiledef tr T N
@(pre)mvinstall@(tr) : force_build
	$(MAKE) -f Make.real  mvready@(tr) pre=@(pre) mu=$(mu) nu=$(nu) \
                 muladd=$(muladd) ydup=$(ydup) xregs=$(xregs) lat=$(lat)

   @endwhile
@endwhile
emitmv.o : $(mySRCdir)/emitmv.c
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/emitmv.c
mvsearch.o : $(mySRCdir)/mvsearch.c
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/mvsearch.c

joe : $(SYSdir)/time.o xemitmv $(INCAdir)/atlas_type.h
	rm -f mvfc.o mv.o mv.c
	./xemitmv -p $(pre) -t $(ta) -b 1 -a 1 -m $(mu) -n $(nu) -y 1 \
                  -M $(muladd) -d $(ydup) -r $(xregs) -l $(lat) -A $(maxm) \
                  -f mv.c
	$(KC) $(CDEFS) $(M0MFLAGS) -DDREAL=$(type) -DNU=$(nu) -DMU=$(mu) \
              -DLAT=$(lat) -D$(tadef) -DMULADD=$(muladd) -DXREGS=$(xregs) \
              -DYDUP=$(ydup) -DMAXM=$(maxm) \
              -DATL_gemv=ATL_$(pre)gemv_$(ta)_a1_x1_b1_y1 \
              -c $(mySRCdir)/mvfc.c
	$(KC) $(CDEFS) $(M0MFLAGS) -c mv.c
	$(CLINKER) $(CLINKFLAGS) -o xmvfc mvfc.o mv.o $(SYSdir)/time.o
	$(ATLRUN) $(L2Tdir) xmvfc -f res/$(pre)mv$(ta)$(mu)x$(nu)_x$(xregs)_d$(ydup)_m$(maxm)_$(lat)x$(muladd).mflop

mvlib :
	cd $(GMVdir) ; $(MAKE) @(pre)mvlib
mvreadyN: xemitmv $(INCAdir)/atlas_type.h
	rm -f $(INCAdir)/$(pre)mv_N.h
	./xemitmv -H -p $(pre) -t n -m $(mu) -n $(nu) -f $(INCAdir)/$(pre)mv_N.h
	./xemitmv -p $(pre) -t n -a 1 -b 0 -m $(mu) -n $(nu) -y 1 \
                  -d $(ydup) -r $(xregs) -l $(lat) \
                  -f $(GMVdir)/ATL_$(pre)gemv_N_a1_x1_b0_y1.c
	./xemitmv -p $(pre) -t n -a 1 -b 1 -m $(mu) -n $(nu) -y 1 \
                  -d $(ydup) -r $(xregs) -l $(lat) \
                  -f $(GMVdir)/ATL_$(pre)gemv_N_a1_x1_b1_y1.c

mvreadyT: xemitmv $(INCAdir)/atlas_type.h
	rm -f $(INCAdir)/$(pre)mv_T.h
	./xemitmv -H -p $(pre) -t t -m $(mu) -n $(nu) -f $(INCAdir)/$(pre)mv_T.h
	./xemitmv -p $(pre) -t t -a 1 -b 0 -m $(mu) -n $(nu) -y 1 \
                  -d $(ydup) -r $(xregs) -l $(lat) \
                  -f $(GMVdir)/ATL_$(pre)gemv_T_a1_x1_b0_y1.c
	./xemitmv -p $(pre) -t t -a 1 -b 1 -m $(mu) -n $(nu) -y 1 \
                  -d $(ydup) -r $(xregs) -l $(lat) \
                  -f $(GMVdir)/ATL_$(pre)gemv_T_a1_x1_b1_y1.c

xgenmv  : force_build xtlb
	$(MAKE) -f Makefile xgenmv 

xemitmv : force_build xtlb
	$(MAKE) -f Makefile xemitmv

$(INCAdir)/$(pre)mv.h: xemitmv
	./xemitmv -H- -f $(INCAdir)/$(pre)mv.h

@ROUT Make.mmtune

L3INCdep = $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_lvl3.h \
           $(INCSdir)/atlas_f77.h $(INCAdir)/atlas_type.h
parsedeps = $(INCSdir)/atlas_mmparse.h $(INCSdir)/atlas_mmtesttime.h \
            $(INCSdir)/atlas_genparse.h $(INCSdir)/atlas_gentesttime.h
basf = $(mySRCdir)/atlas-mmg.base
fkob = $(mySRCdir)/ammm_fko.B
extC = $(BINdir)/xextract -b $(basf) -langC
extB = $(BINdir)/xextract -b $(fkob) -langC 
if = -1
nf = 0
ff = 0
beta = 1
ldc = $(nb)
regs = 32
nb = 28
mmrout=JIKNBmm
ID=25

pre = d
muladd = 1
ta = t
tb = n
lat = 4
mu = 4
nu = 4
ku = 1
kp = $(ku)
nb = 4
mb = $(nb)
kb = $(nb)
KB=0
M = $(mb)
N = $(nb)
K = $(kb)
csA = 1
csB = 1
csC = 1
alpha = 1
beta = 1
betan=$(beta)
loopO = JIK
F0 = 16
FN = 0
kmoves = -DATL_MOVEA -DATL_MOVEB    # ammm kernels take this form
cleanup = 0
casnam =
bnb = 28
mmrout = $(pre)mm0.c
mmlib =
pf=0      # bitpattern controlling prefetch, see atlas-mmkg.base for details
pfLS=64   # prefetch line size in bytes 
pfA = 0
dupB=1
nreg=0
kmaj=0
mvA=1
mvB=1
mvC=0
CFLUSH="-1"
outF=
bcast=1
vlen=1
cpvlen=1
@whiledef iv szExtra
@(iv)=0
@endwhile
FMF=750.0
FMFS=-R $(FMF)
NRF=-1  # change to -2 to get unconstrained MB
@BEGINSKIP
RunMMDef : xmmsearch
	./xmmsearch -p $(pre) -r $(nreg)
RunUMMSearch : xummsearch
	./xummsearch -p $(pre) -n $(nb) $(EXTSEARCHES)
RunUMMClean : xummsearch
	./xummsearch -p $(pre) -n $(nb) -C $(which)
$(BINdir)/xsubstr:
	cd $(BINdir) ; $(MAKE) xsubstr
$(flagfile) : xuserflag $(BINdir)/xsubstr $(mySRCdir)/CASES/$(flagfile)
	- rm -f ATL_tMpFiLe
	$(BINdir)/xsubstr -o ATL_tMpFiLe -i $(mySRCdir)/CASES/$(flagfile) \
           -s '^gcc' '$(GOODGCC)' -s ' gcc' ' $(GOODGCC)'
	./xuserflag -i ATL_tMpFiLe -o $(flagfile)
	- rm -f ATL_tMpFiLe
FindFlagCases : xuserflag $(BINdir)/xsubstr
	- rm -f ATL_tMpFiLe
	$(BINdir)/xsubstr -o ATL_tMpFiLe -i $(mySRCdir)/CASES/$(pre)cases.flg \
           -s '^gcc' '$(GOODGCC)' -s ' gcc' ' $(GOODGCC)'
	./xuserflag -i ATL_tMpFiLe -o $(outfile)
	- rm -f ATL_tMpFiLe

@multidef dep xmmcuncpsearch @^ @^ @^ scases.dsc@^dcases.dsc@^ccases.dsc@^zcases.dsc @^ @^ xusercomb 
@whiledef rout mmflagsearch mmcuncpsearch usercomb userflag userindex
x@(rout) : $(INCAdir)/atlas_type.h @(rout).o @(dep) $(parsedeps)
	$(XCC) $(XCCFLAGS) -o $@ @(rout).o
@(rout).o : $(mySRCdir)/@(rout).c $(parsedeps)
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/@(rout).c
  @undef dep
@endwhile
@ENDSKIP

DoSzBlk :
	rm -f szblk.c xszblk
	echo "int getsz(int M, int N, int mu, int nu, int vlen)" > szblk.c
	echo "{return(${szfunc});}" >> szblk.c
	cat $(mySRCdir)/szblk.c >> szblk.c
	$(XCC) $(XCCFLAGS) -o xszblk szblk.c
	./xszblk $(mb) $(nb) $(mu) $(nu) $(vlen)

res/L1CacheSize :
	$(MAKE) RunL1

res/$(pre)MULADD : $(SYSdir)/res/$(pre)MULADD 
RunFindCE :
	$(MAKE) dRunFindCE

res/atlas_cacheedge.h :
	$(MAKE) $(pre)RunFindCE

res/goodgcc.txt :
	echo "'$(GOODGCC)'" > res/goodgcc.txt
$(BINdir)/xextract :
	cd $(BINdir) ; $(MAKE) xextract
@whiledef pre z c
   @whiledef rt am2cm am2rm cm2am rm2am
ATL_@(pre)@(rt)_a$(al)_$(UR).c : $(basf) force_build
	$(extC) -def mu "${UR}" -def nu "${UR}" -def alpha "${alpha}" \
                -def dupB "${dupB}" -def kmaj "${kmaj}" \
                -o ATL_@(pre)@(rt)_a$(al)_$(UR).c rout=ATL_c@(rt)
   @endwhile
ATL_@(pre)ablk2cmat_${mu}x${nu}_a$(al)_b$(be).c : $(basf) force_build
	$(extC) -def mu "${mu}" -def nu "${nu}" -def alpha "${alpha}" \
                -def beta "${beta}" rout=ATL_cablk2cmat \
                -o ATL_@(pre)ablk2cmat_${mu}x${nu}_a$(al)_b$(be).c
ATL_@(pre)cmat2ablk_${mu}x${nu}_a$(al)_b$(be).c : $(basf) force_build
	$(extC) -def mu "${mu}" -def nu "${nu}" -def alpha "${alpha}" \
                -def beta "${beta}" rout=ATL_ccmat2ablk \
                -o ATL_@(pre)cmat2ablk_${mu}x${nu}_a$(al)_b$(be).c
@endwhile
@multidef rt2 blk2C C2blk syblk2C
@whiledef rt  blk2C C2blk syblk2C
genall_@(rt): $(BINdir)/xextract $(mySRCdir)/atlas-mmkg.base
	- rm -f ATL_tmp.c $(rt)
	touch $(rt)
   @multidef ib 0 1 -1 2
   @whiledef be 0 1 N1 X
      @multidef ia 1 -1 2
      @whiledef al 1 N1 X
	echo "#if defined(BETA@(be)) && defined(ALPHA@(al))" >> $(rt)
	make gen_@(rt2) rt=ATL_tmp.c pre=$(pre) vlen=$(vlen) mu=$(mu) \
             nu=$(nu) cpvlen=$(cpvlen) beta=@(ib) alpha=@(ia)
	cat ATL_tmp.c >> $(rt)
	echo "#endif" >> $(rt)
         @undef ia
      @endwhile
      @undef ib
   @endwhile
   @undef rt2
	- rm -f ATL_tmp.c
@endwhile
@whiledef rt blk2C C2blk
gen_@(rt) : $(BINdir)/xextract $(mySRCdir)/atlas-mmkg.base
	$(extC) -b $(mySRCdir)/atlas-mmkg.base -o $(rt) pre=$(pre) vec=NA \
                rout=@(rt) -def vl $(vlen) -def mu $(mu) -def nu $(nu) \
                -def cpvl $(cpvlen) -def beta $(beta) -def alpha $(alpha)
@endwhile
@whiledef rt blk2C C2blk
gen_sy@(rt) : $(BINdir)/xextract $(mySRCdir)/atlas-mmkg.base
	$(extC) -b $(mySRCdir)/atlas-mmkg.base -o $(rt) pre=$(pre) vec=NA \
                rout=@(rt) -def vl $(vlen) -def mu $(mu) -def nu $(nu) \
                -def cpvl $(cpvlen) -def beta $(beta) -def alpha $(alpha) \
                -def TRI 1
@endwhile
@define pr @@
@whiledef pr c
genall_@(pr)A2blk:
	- rm -f ATL_tmp.c $(rt)
	touch $(rt)
   @whiledef ta N T
	echo "#ifdef TRANS@(ta)_" >> $(rt)
      @multidef ia 1 -1 2
      @whiledef al 1 N1 X
	echo "   #if defined(ALPHA@(al))" >> $(rt)
	make gen_@(pr)A@(ta)2blk UR=$(UR) alpha=@(ia) dupB=$(dupB) \
             kmaj=$(kmaj) rt=ATL_tmp.c
	cat ATL_tmp.c >> $(rt)
	echo "   #endif /* end ALPHA@(al) */" >> $(rt)
         @undef ia
      @endwhile
	echo "#endif /* end TRANS@(ta)_ */" >> $(rt)
   @endwhile
genall_@(pr)blk2A:
	- rm -f ATL_tmp.c $(rt)
	touch $(rt)
   @whiledef ta N T
	echo "#ifdef TRANS@(ta)_" >> $(rt)
      @multidef ia 1 -1 2
      @whiledef al 1 N1 X
	echo "   #if defined(ALPHA@(al))" >> $(rt)
	make gen_@(pr)blk2A@(ta) UR=$(UR) alpha=@(ia) dupB=$(dupB) \
             kmaj=$(kmaj) rt=ATL_tmp.c
	cat ATL_tmp.c >> $(rt)
	echo "   #endif /* end ALPHA@(al) */" >> $(rt)
         @undef ia
      @endwhile
	echo "#endif /* end TRANS@(ta)_ */" >> $(rt)
   @endwhile
@multidef tg blk2AN blk2AT AN2blk AT2blk
@whiledef rt am2cm am2rm cm2am rm2am
gen_@(pr)@(tg) : $(basf) force_build
	$(extC) -def mu "${UR}" -def nu "${UR}" -def alpha "${alpha}" \
                -def dupB "${dupB}" -def kmaj "${kmaj}" -o $(rt) rout=ATL_@(pr)@(rt)
   @undef tg
@endwhile
@endwhile
@whiledef pre d s
   @whiledef rt am2cm am2rm cm2am rm2am
ATL_@(pre)@(rt)_a$(al)_$(UR).c : $(basf) force_build
	$(extC) -def mu "${UR}" -def nu "${UR}" -def alpha "${alpha}" \
                -def dupB "${dupB}" -def kmaj "${kmaj}" \
                -o ATL_@(pre)@(rt)_a$(al)_$(UR).c rout=ATL_@(rt)
   @endwhile
ATL_@(pre)ablk2cmat_${mu}x${nu}_a$(al)_b$(be).c : $(basf) force_build
	$(extC) -def mu "${mu}" -def nu "${nu}" -def alpha "${alpha}" \
                -def beta "${beta}" rout=ATL_ablk2cmat \
                -o ATL_@(pre)ablk2cmat_${mu}x${nu}_a$(al)_b$(be).c
ATL_@(pre)cmat2ablk_${mu}x${nu}_a$(al)_b$(be).c : $(basf) force_build
	$(extC) -def mu "${mu}" -def nu "${nu}" -def alpha "${alpha}" \
                -def beta "${beta}" rout=ATL_cmat2ablk \
                -o ATL_@(pre)cmat2ablk_${mu}x${nu}_a$(al)_b$(be).c
@endwhile
xprefparse : $(mySRCdir)/prefparse.c $(parsedeps)
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/prefparse.c
xammgen :  $(mySRCdir)/ammgen.c $(parsedeps) $(INCSdir)/atlas_mmgen.h
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/ammgen.c -lm
xuammgen :  $(mySRCdir)/uammgen.c $(parsedeps) $(INCSdir)/atlas_mmgen.h
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/uammgen.c -lm
xemit_amm : $(mySRCdir)/emit_amm.c $(parsedeps)
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/emit_amm.c -lm
xemit_uamm : $(mySRCdir)/emit_uamm.c $(parsedeps)
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/emit_uamm.c -lm
@whiledef rt ammsearch uammsearch gmmsearch uammsrch
x@(rt) : $(mySRCdir)/@(rt).c $(parsedeps)
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/@(rt).c -lm
@endwhile
# vec=[no,kdim,mdim]
gen_fko : $(BINdir)/xextract
	$(extB) -o $(rt) pre=$(pre) vec=$(vec) \
           -def vl $(vlen) -def mu $(mu) -def nu $(nu) -def ku $(ku) \
           -def kp $(kp) -def kb $(KB) \
           -def pf $(pf)  -def pfLS $(pfLS)
@multidef tri  0      1
@whiledef rt amm amsyrk
gen_@(rt) : $(BINdir)/xextract
	$(extC) -b $(mySRCdir)/atlas-mmkg.base -o $(rt) pre=$(pre) vec=$(vec) \
           rout=amm -def vl $(vlen) -def mu $(mu) -def nu $(nu) -def ku $(ku) \
           -def kp $(kp) -def bc $(bcast) -def kb $(KB) \
           -def pf $(pf) -def pfLS $(pfLS) -def TRI @(tri)
   @undef tri
@endwhile
gen_amm_sse : $(BINdir)/xextract
	$(extC) -def mu "${mu}" -def nu "${nu}" -def kmaj "${kmaj}" \
                rout=ATL_mm${kmaj}_${mu}x${nu}_1_sse -o $(rt) \
                -def kb "${kb}" -def vlen "${vlen}" -def dupB "${dupB}"
gen_amm_avxz : $(BINdir)/xextract force_build
	$(extC) -def mu "${mu}" -def nu "${nu}" -def kb "${kb}" \
                 rout=ATL_mm${kmaj}_${mu}x${nu}_1_avxz -def vlen "${vlen}" \
                 -def kmaj ${kmaj} -o $(rt)
gen_amm_avx : $(BINdir)/xextract force_build
	$(extC) -def mu "${mu}" -def nu "${nu}" -def kb "${kb}" \
                 rout=ATL_mm${kmaj}_${mu}x${nu}_1_avx -def vlen "${vlen}" \
                 -def kmaj ${kmaj} -o $(rt)
gen_amm_gvec: $(BINdir)/xextract force_build
	$(extC) -def mu "${mu}" -def nu "${nu}" \
                rout=ATL_mm${kmaj}_${mu}x${nu}_gvec -def kmaj ${kmaj} \
                -def kb "${kb}" -def vlen "${vlen}" -o $(rt)
gen_amm_scalar : $(BINdir)/xextract force_build
	$(extC) -def mu "${mu}" -def nu "${nu}" -def kb "${kb}" -o $(rt) \
                -def kmaj "${kmaj}" rout=ATL_mm${kmaj}_${mu}x${nu}_1 
@beginskip
SSEGENOUTDIR :
	mkdir SSEGENOUTDIR
xmmgen_sse : $(mySRCdir)/mmgen_sse.c
	$(XCC) -o $@ $(mySRCdir)/mmgen_sse.c -lm
@whiledef rout mmksearch_sse
xmmksearch_sse : xmmgen_sse @(rout).o SSEGENOUTDIR
	$(XCC) $(XCCFLAGS) -o $@ @(rout).o
@(rout).o : $(mySRCdir)/@(rout).c $(parsedeps)
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/@(rout).c
@skip $(pre)vMMRES : xvnbmmsearch $(pre)cases.vnb
@skip 	./xvnbmmsearch -p $(pre)
$(GMMdir)/../kbmm/KBMMS :
	mkdir $(GMMdir)/../kbmm/KBMMS
vinstall : xemit_vkb $(GMMdir)/../kbmm/KBMMS
	$(MAKE) $(INCAdir)/atlas_$(pre)vkbmms.h pre=$(pre)
	- rm -f $(GMMdir)/../kbmm/KBMMS/$(pre)*
	./xemit_vkb -p $(pre) -d $(GMMdir)/../kbmm/KBMMS
	cd $(GMMdir)/../kbmm/ ; $(MAKE) $(pre)lib pre=$(pre)
@skip	cd $(GMMdir)/../kbmm/KBMMS ; $(MAKE) -f $(pre)Make.vKB   # delete, debug only
$(INCAdir)/atlas_$(pre)vkbmms.h: res/$(pre)vMMRES xemit_vkb
	./xemit_vkb -p $(pre) -h $(INCAdir)
xmm_old2new : $(mySRCdir)/mm_old2new.c
	$(XCC) -o xmm_old2new $(XCCFLAGS) $(mySRCdir)/mm_old2new.c

xvnbmmsearch : $(INCAdir)/atlas_type.h vnbmmsearch.o
	$(XCC) $(XCCFLAGS) -o $@ vnbmmsearch.o
vnbmmsearch.o : $(mySRCdir)/vnbmmsearch.c $(INCSdir)/atlas_vnbcase.h
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/vnbmmsearch.c
xmmsearch_sse : $(INCAdir)/atlas_type.h $(INCSdir)/atlas_mmtesttime.h \
                $(INCSdir)/atlas_mmparse.h $(INCSdir)/atlas_genpars.h \
                mmsearch_sse.c
	$(XCC) $(XCCFLAGS) -o $@ mmsearch_sse.c

@whiledef TT NN NT TN TT
res/$(pre)best@(TT)_$(bnb)x$(bnb)x$(bnb) : xmmsearch xemit_mm 
	./xmmsearch -p $(pre)
	./xemit_mm  -p $(pre) -R -2
	$(MAKE) install pre=$(pre)
res/$(pre)best@(TT)_0x0x$(bnb) : xmmsearch xemit_mm 
	./xmmsearch -p $(pre)
	./xemit_mm  -p $(pre) -R -2
	$(MAKE) install pre=$(pre)
res/$(pre)best@(TT)_0x0x0 : xmmsearch xemit_mm 
	./xmmsearch -p $(pre)
	./xemit_mm  -p $(pre) -R -2
	$(MAKE) install pre=$(pre)
@endwhile
res/$(pre)BEST : xmmsearch
	./xmmsearch -p $(pre)

res/$(pre)NCNB  : xmmsearch xemit_mm 
	./xmmsearch -p $(pre)
res/$(pre)Xover.h :
	$(MAKE) $(pre)Run_tfc pre=$(pre)

RunTXover : x$(pre)txover
	$(ATLRUN) $(MMTdir) x$(pre)txover -o res/atlas_$(pre)tXover_$(NPROC)p.h
	cp -f res/atlas_$(pre)tXover_$(NPROC)p.h $(INCAdir)/.
res/atlas_$(pre)tXover_$(NPROC)p.h : 
	$(MAKE) RunTXover pre=$(pre)
xemit_vkb  : emit_vKB.o
	$(XCC) $(XCCFLAGS) -o xemit_vkb emit_vKB.o

xemit_mm  : emit_mm.o
	$(XCC) $(XCCFLAGS) -o xemit_mm emit_mm.o
xemit_fmm : emit_fmm.o
	$(XCC) $(XCCFLAGS) -o xemit_fmm emit_fmm.o
xhcsearch : hcsearch.o
	$(XCC) $(XCCFLAGS) -o xhcsearch hcsearch.o
RunHCtest : xhcsearch
	rm -f $(INCAdir)/$(pre)mmcase.h
	touch $(INCAdir)/$(pre)mmcase.h
	./xhcsearch -p $(pre) -n $(nb)
	mv res/$(pre)mmcase.h $(INCAdir)/.

$(pre)killclean :
	rm -f res/$(pre)Clean?
$(pre)killNC :
	rm -f res/$(pre)best*
$(pre)killMM : $(pre)killclean $(pre)killNC
	rm -f res/$(pre)MMRES res/$(pre)*MMRES.sum res/$(pre)*NB
@ENDSKIP
	
res/atlas_zdNKB.h :
	$(MAKE) zdRunFindCE
res/atlas_csNKB.h :
	$(MAKE) csRunFindCE


xemit_reg : emit_reg.o
	$(XCC) $(XCCFLAGS) -o xemit_reg emit_reg.o

xemit_cmm : emit_cmm.o
	$(XCC) $(XCCFLAGS) -o xemit_cmm emit_cmm.o


$(BLDdir)/src/threads/lapack/amm/sumd :
	mkdir $(BLDdir)/src/threads/lapack/amm/sumd

xvmmf_gccsub : $(mySRCdir)/vmmf_gccsub.c
	$(XCC) $(XCCFLAGS) -o xvmmf_gccsub $(mySRCdir)/vmmf_gccsub.c

@multidef upr d s d s
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
@BEGINSKIP
@(pre)cases.dsc: xuserindex $(mySRCdir)/CASES/@(pre)cases.0 $(mySRCdir)/CASES/@(pre)cases.SSE \
                 $(mySRCdir)/CASES/@(pre)cases.3DN $(mySRCdir)/CASES/@(pre)cases.flg 
	./xuserindex -p @(pre)
@ENDSKIP
@(pre)mflops.frc : xgmmsearch
	./xgmmsearch -p @(pre) -f 16
res/@(pre)nreg : xgmmsearch @(pre)mflops.frc
	./xgmmsearch -p @(pre) -f 4
@(pre)Run_tfc : @(pre)tfc
	$(ATLRUN) $(MMTdir) x@(pre)tfc
	cp -f $(INCAdir)/@(pre)Xover.h res/.

@(pre)tfc :
	$(MAKE) x@(pre)tfc pre=@(pre) typ=@(typ)

@whiledef rt geAMMRES.sum sqAMMRES.sum rkAMMRES.sum geAMMKCLEAN.sum sqAMMKCLEAN.sum
res/@(pre)@(rt) : xammsearch
	./xammsearch -p @(pre)
@endwhile
@whiledef rt gAMSYRK.sum
res/@(pre)@(rt) : res/@(pre)sqAMMRES.sum xgmmsearch 
	./xgmmsearch -p @(pre)
@endwhile
@whiledef rt gAMMRES.sum gkvAMMUR.sum gmvAMMUR.sum
res/@(pre)@(rt) : xgmmsearch
	./xgmmsearch -p @(pre)
@endwhile
@(pre)save_uamm : $(usaved)
	cp res/@(pre)uAMMFRC.sum $(usaved)/.
	cp res/@(pre)UMMKCLEAN.sum $(usaved)/.
	cp res/@(pre)UMMKCLEANBYNB.sum $(usaved)/.
@(pre)restore_uamm : $(usaved)
	cp $(usaved)/@(pre)uAMMFRC.sum res/.
	cp $(usaved)/@(pre)UMMKCLEAN.sum res/.
	cp $(usaved)/@(pre)UMMKCLEANBYNB.sum res/.
@(pre)uamm_getrf : xuammsearch $(BLDdir)/src/threads/lapack/amm/sumd
	./xuammsearch -p @(pre) -b $(NRF) -M 2 a c -T 1.01 -K 0
	make @(pre)install_uamm_noclean ID=0
	cp res/@(pre)uAMMFRC.sum $(BLDdir)/src/threads/lapack/amm/sumd/.

@beginskip
@(pre)install_uamm: res/@(pre)uAMMFRC.sum res/@(pre)UMMKCLEAN.sum \
              res/@(pre)UMMKCLEANBYNB.sum xemit_uamm
@skip	- cd $(AMMdir)/UKERNEL ; $(PMAKE) -f @(pre)Make_amm @(pre)killall
	./xemit_uamm -p @(pre) -I $(ID) -d $(AMMdir)/UKERNEL \
            -i res/@(pre)uAMMFRC.sum \
            -k res/@(pre)UMMKCLEAN.sum -K res/@(pre)UMMKCLEANBYNB.sum
	mv $(AMMdir)/UKERNEL/*.h $(INCAdir)/.
	cd $(AMMdir)/UKERNEL ; $(PMAKE) -f @(pre)Make_amm
@(pre)install_uamm_noclean: res/@(pre)uAMMFRC.sum xemit_uamm
	./xemit_uamm -p @(pre) -I $(ID) -d $(AMMdir)/UKERNEL \
            -i res/@(pre)uAMMFRC.sum 
	mv $(AMMdir)/UKERNEL/*.h $(INCAdir)/.
	cd $(AMMdir)/UKERNEL ; $(PMAKE) -f @(pre)Make_amm
@endskip
@multidef pt c r
   @ptyp s
      @multidef pp c s
   @ptyp d
      @multidef pp z d
   @ptyp s d
@declare "@(pre)install_uamm_noclean: " y n 
   xuammgen
   @whiledef pp
         res/@(pp)uAMMRES.sum
   @endwhile
@enddeclare
	- cd $(AMMdir)/UKERNEL ; $(PMAKE) -f @(pre)Make_amm @(pre)killall
	./xuammgen -p @(pre) -d $(AMMdir)/UKERNEL -I $(ID)
	mv $(AMMdir)/UKERNEL/*.h $(INCAdir)/.
	cd $(AMMdir)/UKERNEL ; $(PMAKE) -f @(pre)Make_amm
   @ptyp s
      @multidef pp c s
   @ptyp d
      @multidef pp z d
@declare "@(pre)install_uamm: " y n 
   xuammgen
   @whiledef pp
      @whiledef rt uAMMRES uAMMKCLEAN
         res/@(pp)@(rt).sum
      @endwhile
   @endwhile
@enddeclare
	- cd $(AMMdir)/UKERNEL ; $(PMAKE) -f @(pre)Make_amm @(pre)killall
	./xuammgen -p @(pre) -d $(AMMdir)/UKERNEL -I $(ID)
	mv $(AMMdir)/UKERNEL/*.h $(INCAdir)/.
	cd $(AMMdir)/UKERNEL ; $(PMAKE) -f @(pre)Make_amm
   @ptyp z c
@(pre)install_uamm_noclean: 
	$(MAKE) @(upr)install_uamm_noclean
@(pre)install_uamm: 
	$(MAKE) @(upr)install_uamm
   @ptyp !
@(pre)install_ammm: @(pre)install_amm
   @ptyp s
      @multidef pp c s
   @ptyp d
      @multidef pp z d
   @ptyp s d
@declare "@(pre)install_amm: " y n 
   xammgen
@skip   xemit_amm
   @whiledef pp
      @whiledef rt geAMMRES sqAMMRES rkAMMRES geAMMKCLEAN sqAMMKCLEAN gAMSYRK
         res/@(pp)@(rt).sum
      @endwhile
   @endwhile
@enddeclare
	- cd $(AMMdir)/KERNEL ; $(PMAKE) -f @(pre)Make_amm @(pre)killall
@skip	./xemit_amm -p @(pre) -d $(AMMdir)/KERNEL 
	./xammgen -p @(pre) -d $(AMMdir)/KERNEL 
	mv $(AMMdir)/KERNEL/*.h $(INCAdir)/.
	cd $(AMMdir) ; $(PMAKE) @(pre)lib
@beginskip
@(pre)install_amm: res/@(pre)geAMMRES.sum res/@(pre)geAMMKCLEAN.sum \
                   res/@(pre)sqAMMRES.sum res/@(pre)sqAMMKCLEAN.sum \
                   res/@(pre)rkAMMRES.sum xemit_amm
	- cd $(AMMdir)/KERNEL ; $(PMAKE) -f @(pre)Make_amm @(pre)killall
	./xemit_amm -p @(pre) -d $(AMMdir)/KERNEL 
	mv $(AMMdir)/KERNEL/*.h $(INCAdir)/.
	cd $(AMMdir) ; $(PMAKE) @(pre)lib
@endskip
   @ptyp z c
$(INCAdir)/atlas_@(pre)amm_sum.h : res/atlas_@(pre)amm_sum.h
	cp res/atlas_@(pre)amm_sum.h $(INCAdir)/atlas_@(pre)amm_sum.h
res/atlas_@(pre)amm_sum.h : 
	$(MAKE) x@(pre)nbtune
	$(ATLRUN) $(MMTdir) x@(pre)nbtune -f res/atlas_@(pre)amm_sum.h
@(pre)install_amm: $(INCAdir)/atlas_@(pre)amm_sum.h
	$(MAKE) @(upr)install_amm
   @ptyp !
   @killkeys ptyp
@(pre)RunFindCE : x@(pre)findCE
	$(ATLRUN) $(MMTdir) x@(pre)findCE -f res/atlas_cacheedge.h
	cp -f res/atlas_cacheedge.h $(INCAdir)/atlas_cacheedge.h

   @undef typ
   @undef upr
@endwhile

@multidef typ DCPLX SCPLX
@multidef pr1 z c
@multidef pr2 d s
@whiledef pre zd cs
@(pre)RunFindCE : x@(pre)findCE
	$(ATLRUN) $(MMTdir) x@(pre)findCE -f res/atlas_@(pre)NKB.h
	cp -f res/atlas_@(pre)NKB.h $(INCAdir)/.
@(pre)findCE.o : $(mySRCdir)/findCE.c
	$(KC) $(KCFLAGS) -c -D@(typ) -DATL_JITcp -o $@ $(mySRCdir)/findCE.c

x@(pre)findCE : $(INCAdir)/atlas_type.h $(L3INCdep) @(pr1)mmlib @(pr2)mmlib \
                @(pre)findCE.o
	cd $(GMMdir) ; $(MAKE) ATL_@(pre)FindCE_mm.o typ=@(typ)
	$(CLINKER) $(CLINKFLAGS) -o $@ @(pre)findCE.o \
                   $(GMMdir)/ATL_@(pre)FindCE_mm.o $(ATLASlib) $(LIBS)
   @undef typ
   @undef pr1
   @undef pr2
@endwhile

res/atlas_tcacheedge.h : 
	$(MAKE) xdtfindCE
	$(ATLRUN) $(MMTdir) xdtfindCE -f res/atlas_tcacheedge.h
	cp -f res/atlas_tcacheedge.h $(INCAdir)/.
PKC = $(DKC)
PKFLAGS = $(DKCFLAGS) -x assembler-with-cpp
pklib = $(ATLASlib)
nrep=3
peaktime: peaktim.o
	$(PKC) $(PKFLAGS) $(CDEFS) -c -o pkkern.o $(pkkern)
	$(CLINKER) $(CLINKFLAGS) -o xpeaktim peaktim.o pkkern.o \
                                    $(SYSdir)/time.o $(pklib)
	$(ATLRUN) $(MMTdir) xpeaktim -# $(nrep)
peaktim.o : $(mySRCdir)/peaktim.c
	$(KC) $(KCFLAGS) -c -o peaktim.o $(mySRCdir)/peaktim.c
@multidef utp DREAL SREAL DREAL SREAL
@multidef typ DCPLX SCPLX DREAL SREAL
@multidef upr d s d s
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
   @define MCC @$(@up@(upr)MC)@
   @define MMFLAGS @$(CDEFS) $(@up@(upr)MCFLAGS)@
@skip $(INCAdir)/atlas_@(pre)sysinfo.h :
@skip	cd $(SYSdir) ; $(MAKE) $(INCAdir)/atlas_@(pre)sysinfo.h
@(pre)mmlib:
	cd $(AMMdir) ; $(MAKE) @(pre)lib

@(pre)findCE.o : $(mySRCdir)/findCE.c
	$(KC) $(KCFLAGS) -c -D@(typ) -o $@ $(mySRCdir)/findCE.c
@(pre)tfindCE.o : $(mySRCdir)/findCE.c
	$(KC) $(KCFLAGS) -c -DATL_THREADED_CE -D@(typ) -o $@ \
               $(mySRCdir)/findCE.c

@(pre)thrCE :
	cd $(BLDdir)/src/threads ; $(MAKE) lib.grd
	cd $(BLDdir)/src/threads/blas/level3 ; $(MAKE) @(pre)lib
	cd $(BLDdir)/src/threads/blas/level3 ; $(MAKE) ATL_@(pre)tgemm_CE.o \
           ATL_@(pre)tgemm_bigMN_Kp_CE.o
x@(pre)tfindCE : $(INCAdir)/atlas_type.h $(L3INCdep) @(pre)mmlib \
                 @(pre)tfindCE.o @(pre)thrCE
	cd $(GMMdir) ; $(MAKE) ATL_@(pre)FindCE_mm.o pre=@(pre) typ=@(typ)
	$(CLINKER) $(CLINKFLAGS) -o $@ @(pre)tfindCE.o \
           $(BLDdir)/src/threads/blas/level3/ATL_@(pre)tgemm_CE.o \
           $(BLDdir)/src/threads/blas/level3/ATL_@(pre)tgemm_bigMN_Kp_CE.o \
           $(GMMdir)/ATL_@(pre)FindCE_mm.o $(ATLASlib) $(LIBS)

@(pre)RunFindCE_thr : x@(pre)tfindCE
	$(ATLRUN) $(MMTdir) x@(pre)tfindCE -f res/atlas_t@(pre)cacheedge.h
	cp -f res/atlas_t@(pre)cacheedge.h $(INCAdir)/.

x@(pre)findCE : $(INCAdir)/atlas_type.h $(L3INCdep) @(pre)mmlib \
                @(pre)findCE.o
	cd $(GMMdir) ; $(MAKE) ATL_@(pre)FindCE_mm.o pre=@(pre) typ=@(typ)
	$(CLINKER) $(CLINKFLAGS) -o $@ @(pre)findCE.o \
                   $(GMMdir)/ATL_@(pre)FindCE_mm.o $(ATLASlib) $(LIBS)

@BEGINSKIP
x@(pre)txover : force_build @(pre)txover.o
	cd $(BLDdir)/src/threads/blas/level3 ; $(MAKE) ATL_@(pre)tgemm_p.o @(pre)lib
	$(CLINKER) $(CLINKFLAGS) -o $@ @(pre)txover.o \
              $(BLDdir)/src/threads/blas/level3/ATL_@(pre)tgemm_p.o \
              $(TESTlib) $(ATLASlib) $(LIBS)
@ENDSKIP
x@(pre)tfc : $(INCAdir)/atlas_type.h $(L3INCdep) \
             $(pre)tfc.o @(pre)mmlib
	cd $(GMMdir) ; $(MAKE) ATL_@(pre)big_mm.o ATL_@(pre)small_mm.o \
@ptyp z c
           ATL_@(pre)@(upr)big_mm.o pre=@(pre) typ=@(typ)
@ptyp ! z c
           pre=@(pre) typ=@(typ)
@ptyp !
	$(CLINKER) $(CLINKFLAGS) -o $@ @(pre)tfc.o \
              $(GMMdir)/ATL_$(pre)big_mm.o $(GMMdir)/ATL_@(pre)small_mm.o \
@ptyp z c
              $(GMMdir)/ATL_@(pre)@(upr)big_mm.o \
@ptyp !
              $(ATLASlib) $(LIBS)

@ptyp z c
@(pre)ammlib:
	cd $(AMMdir) ; make @(pre)lib
@(pre)nbtune.o : $(mySRCdir)/cnbtune.c atlas_@(upr)amm_sum.h
	$(@up@(upr)KC) $(CDEFS) $(@up@(upr)KCFLAGS) -D@(typ)=1 -c \
           -o @(pre)nbtune.o $(mySRCdir)/cnbtune.c
x@(pre)nbtune : @(pre)nbtune.o @(pre)ammlib
	$(CLINKER) $(CLINKFLAGS) -o $@ @(pre)nbtune.o $(ATLASlib) $(LIBS)
@ptyp !
@(pre)rbob : $(SYSdir)/time.o xemit_reg $(INCAdir)/atlas_type.h \
       $(INCAdir)/atlas_@(pre)sysinfo.h
	rm -f fc.o @(pre)mm.o @(pre)mm.c
	./xemit_reg x @(pre) $(muladd) $(mmrout) $(mb) $(nb) $(kb) $(if) $(nf) \
                    $(mu) $(nu) $(ku) $(lat) $(beta) > @(pre)mm.c
	$(KC) $(KCFLAGS) -D@(pre)REAL -DMB=$(mb) -DNB=$(nb) -DKB=$(kb) \
              -DKU=$(ku) -DNU=$(nu) -DMU=$(mu) -DLAT=$(lat) -DMULADD=$(muladd) \
              -DNBmm=ATL_@(pre)$(mmrout) -DLDC=$(ldc) -DBETA=$(beta) $(moves) \
              -o @(pre)fc.o -c $(mySRCdir)/fc.c
	@(MCC) @(MMFLAGS) -c @(pre)mm.c
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)fc @(pre)fc.o @(pre)mm.o \
                                    $(SYSdir)/time.o
	$(ATLRUN) $(MMTdir) x@(pre)fc

@(pre)trstime_pt.o : $(mySRCdir)/mmtime_pt.c
	$(KC) $(KCFLAGS) -c -DTIME_TRMVK=1 -D@(typ)=1 \
              -o @(pre)trstime_pt.o $(mySRCdir)/mmtime_pt.c
@(pre)trstime_pt3f.o : $(mySRCdir)/mmtime_pt3f.c
	$(KC) $(KCFLAGS) -c -DTIME_TRMVK=1 -D@(typ)=1 $(TDEFS) \
              -o @(pre)trstime_pt3f.o $(mySRCdir)/mmtime_pt3f.c
@ptyp z c
   @define trsm @ATL_@(pre)ctrsmKL_rk2.o@
@ptyp d s
   @define trsm @ATL_@(pre)trsmKL_rk4.o@
@ptyp !
$(L3Bdir)/kernel/@(trsm) :
	cd $(L3Bdir)/kernel ; make @(trsm)
@ptyp !
x@(pre)trstime_pt : @(pre)trstime_pt.o $(L3Bdir)/kernel/@(trsm)
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)trstime_pt @(pre)trstime_pt.o \
           $(SYSdir)/time.o $(L3Bdir)/kernel/@(trsm) $(ATLASlib) $(LIBS)
@(pre)trsmKtime : x@(pre)trstime_pt
	$(ATLRUN) $(MMTdir) x@(pre)trstime_pt -p $(NPROC) $(TIDLIST) \
           -m $(mb) -n $(nb) -k $(mb) -um 1 -un 1 -uk 1 $(FMFS) \
           -Ma 0 -Mb 0 -Mc 1 $(outF)
x@(pre)trstime_pt3f : @(pre)trstime_pt3f.o $(L3Bdir)/kernel/@(trsm)
	$(CLINKER) $(CLINKFLAGS) -o $@ @(pre)trstime_pt3f.o \
         $(SYSdir)/time.o $(L3Bdir)/kernel/@(trsm) $(ATLASlib) $(LIBS)

@ptyp d s
bn = _b${betan}
@(pre)ammtime_pt3f${bn}.o : $(mySRCdir)/mmtime_pt3f.c
	$(KC) $(KCFLAGS) -c -DBETA${betan}=1 -D@(typ)=1 -DTIME_GEMMK=1 \
              -o @(pre)ammtime_pt3f${bn}.o $(mySRCdir)/mmtime_pt3f.c
x@(pre)ammtime_pt3f : $(SYSdir)/time.o force_build
	rm -f @(pre)mm.c
	$(MAKE) @(pre)ammtime_pt3f${bn}.o
	@(MCC) @(MMFLAGS) -DBETA$(betan)=1 -DMB=$(mb) -DNB=$(nb) \
	    -DKB=$(kb) -D@(typ)=1 $(kmoves) -o @(pre)ammmKT.o -c $(mmrout)
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)ammtime_pt3f \
	    @(pre)ammtime_pt3f${bn}.o @(pre)ammmKT.o $(SYSdir)/time.o $(LIBS)
	$(ATLRUN) $(MMTdir) x@(pre)ammtime_pt3f -p $(NPROC) $(TIDLIST) \
           -m $(mb) -n $(nb) -k $(kb) -um $(mu) -un $(nu) -uk $(ku) $(FMFS) \
           -V $(vlen) -Ma $(mvA) -Mb $(mvB) -Mc $(mvC) -F $(CFLUSH) $(outF)
@ptyp !

@skip @(pre)txover.o : $(mySRCdir)/txover.c
@skip 	$(KC) $(KCFLAGS) -c -D@(typ) -o @(pre)txover.o $(mySRCdir)/txover.c
bn = _b${betan}
@multidef kr GEMM SYRK
@whiledef kn  amm  syk
@(pre)@(kn)time_pt${bn}.o : $(mySRCdir)/mmtime_pt.c
	$(KC) $(KCFLAGS) -c -DBETA${betan}=1 -D@(typ)=1 -DTIME_@(kr)K=1 \
              -o @(pre)@(kn)time_pt${bn}.o $(mySRCdir)/mmtime_pt.c
x@(pre)@(kn)time_pt : $(SYSdir)/time.o force_build
	rm -f @(pre)mm.c
	$(MAKE) @(pre)@(kn)time_pt${bn}.o
@ptyp z c
	@(MCC) @(MMFLAGS) -DBETA0=1 -DATL_USERMM=CAMM_b0 \
               -DMB=$(mb) -DNB=$(nb) -DKB=$(kb) \
               -D@(utp)=1 $(kmoves) -o @(pre)CAMM_b0.o -c $(mmrout)
	@(MCC) @(MMFLAGS) -DBETA1=1 -DATL_USERMM=CAMM_b1 \
               -DMB=$(mb) -DNB=$(nb) -DKB=$(kb) \
               -D@(utp)=1 $(kmoves) -o @(pre)CAMM_b1.o -c $(mmrout)
	@(MCC) @(MMFLAGS) -DBETAN1=1 -DATL_USERMM=CAMM_bn \
               -DMB=$(mb) -DNB=$(nb) -DKB=$(kb) \
               -D@(utp)=1 $(kmoves) -o @(pre)CAMM_bn.o -c $(mmrout)
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(kn)time_pt @(pre)@(kn)time_pt${bn}.o \
           @(pre)CAMM_b0.o @(pre)CAMM_b1.o @(pre)CAMM_bn.o \
           $(SYSdir)/time.o $(LIBS)
@ptyp d s
	@(MCC) @(MMFLAGS) -DBETA$(betan)=1 -DMB=$(mb) -DNB=$(nb) -DKB=$(kb) \
               -D@(typ)=1 $(kmoves) -o @(pre)ammmKT.o -c $(mmrout)
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)@(kn)time_pt @(pre)@(kn)time_pt${bn}.o \
           @(pre)ammmKT.o $(SYSdir)/time.o $(LIBS)
@ptyp !
	$(ATLRUN) $(MMTdir) x@(pre)@(kn)time_pt -p $(NPROC) $(TIDLIST) \
           -m $(mb) -n $(nb) -k $(kb) -um $(mu) -un $(nu) -uk $(ku) $(FMFS) \
           -V $(vlen) -Ma $(mvA) -Mb $(mvB) -Mc $(mvC) $(outF)
   @undef kr
@endwhile
@BEGINSKIP
@(pre)mmtime_pt.o : $(mySRCdir)/mmtime_pt.c
	$(KC) $(KCFLAGS) -c -D@(typ) -o @(pre)mmtime_pt.o \
               $(mySRCdir)/mmtime_pt.c
x@(pre)mmtime_pt : force_build
	rm -f $(pre)mm.c
	$(MAKE) @(pre)mmtime_pt.o xemit_mm
	./xemit_mm -p @(pre) -ta t -tb n -muladd $(muladd) -l $(lat) \
           -L $(loopO) -M $(mb) -N $(nb) -K $(kb) -m $(mu) -n $(nu) -k $(ku) \
           -lda $(lda) -ldb $(ldb) -ldc $(ldc) -csA $(csA) -csB $(csB) \
           -csC $(csC) -F0 $(if) -FN $(nf) -FF $(ff) -b $(beta) -a $(alpha) \
           -Z 1 -C $(cleanup) -R -3 | fgrep -v "define ATL_USERMM" > @(pre)mm.c
	cat $(mmrout) >> @(pre)mm.c
	@(MCC) @(MMFLAGS) -DATL_BETA=$(beta) -c @(pre)mm.c 
	$(CLINKER) $(CLINKFLAGS) -o x@(pre)mmtime_pt @(pre)mmtime_pt.o \
           @(pre)mm.o $(SYSdir)/time.o $(ATLASlib) $(LIBS)
@ENDSKIP
   @undef utp
   @undef typ
   @undef upr
@endwhile

cwrk3=0
@multidef typ DCPLX SCPLX
@multidef upr d s
@whiledef pre z c
@(pre)ammtst: @(pre)ammmtst
   @multidef tri   0    1
   @whiledef rt ammm syrk
@(pre)@(rt)tst : $(INCAdir)/atlas_type.h $(BINdir)/xextract
	$(extC) -b $(mySRCdir)/atlas-mmkg.base -o c@(rt)tst.c pre=@(pre) \
           vec=NA -def rtnm ATL_blk2C rout=blk2C -def vl $(vlen) \
           -def TRI @(tri) -def mu $(mu) -def nu $(nu) \
           -def cpvl $(cpvlen) -def beta 0 -def alpha 1
	$(extC) -def mu "${mu}" -def nu "${nu}" -def be "${beta}" \
                -def M "${M}" -def N "${N}" -def K "${K}" -def kmaj "$(kmaj)" \
                -def TRI @(tri) rout=cammmtst >> c@(rt)tst.c
	- rm -f @(pre)ammm_b1.o @(pre)ammm_b0.o @(pre)ammm_bn.o
	$(@up@(upr)MC) $(CDEFS) $(@up@(upr)MCFLAGS) -D@(typ)=1 -DBETA1 \
           -DKB=${kb} -DATL_USERMM=cmm_b1 -o @(pre)ammm_b1.o -c $(mmrout) 
	$(@up@(upr)MC) $(CDEFS) $(@up@(upr)MCFLAGS) -D@(typ)=1 -DBETA0 \
           -DKB=${kb} -DATL_USERMM=cmm_b0 -o @(pre)ammm_b0.o -c $(mmrout)
	$(@up@(upr)MC) $(CDEFS) $(@up@(upr)MCFLAGS) -D@(typ)=1 -DBETAN1 \
           -DKB=${kb} -DATL_USERMM=cmm_bn -o @(pre)ammm_bn.o -c $(mmrout)
	$(KC) $(KCFLAGS) -D@(typ)=1 -o x@(pre)@(rt)tst -DATL_CWRK3=$(cwrk3) \
              c@(rt)tst.c @(pre)ammm_b1.o @(pre)ammm_b0.o @(pre)ammm_bn.o
	$(ATLRUN) $(MMTdir) x@(pre)@(rt)tst 
      @undef tri
   @endwhile
   @undef upr
   @undef typ
@endwhile
@multidef typ DREAL SREAL
@multidef upr d s
@whiledef pre d s
@(pre)ammtst: @(pre)ammmtst
   @multidef tri   0    1
   @whiledef rt ammm syrk
@(pre)@(rt)tst : $(INCAdir)/atlas_type.h $(BINdir)/xextract
	$(extC) -b $(mySRCdir)/atlas-mmkg.base -o @(rt)tst.c pre=@(pre) vec=NA \
                rout=blk2C -def vl $(vlen) -def mu $(mu) -def nu $(nu) \
                -def cpvl $(cpvlen) -def beta 0 -def alpha 1 \
                -def rtnm ATL_blk2C -def TRI @(tri)
	$(extC) -b $(mySRCdir)/atlas-mmkg.base pre=@(pre) vec=NA \
                rout=C2blk -def vl $(vlen) -def mu $(mu) -def nu $(nu) \
                -def rtnm ATL_C2blk -def TRI @(tri) \
                -def cpvl $(cpvlen) -def beta 0 -def alpha 1 >> @(rt)tst.c
	$(extC) -def mu "${mu}" -def nu "${nu}" -def be "${beta}" \
                -def M "${M}" -def N "${N}" -def K "${K}" -def dupB "${dupB}" \
                -def kmaj "${kmaj}" -def TRI @(tri) rout=ammmtst >> @(rt)tst.c
	- rm -f @(pre)ammm.o
	$(@up@(upr)MC) $(CDEFS) $(@up@(upr)MCFLAGS) -D@(typ)=1 -DBETA${betan} \
           -DKB=${kb} -o @(pre)ammm.o -c $(mmrout)
	$(KC) $(KCFLAGS) -D@(typ)=1 -o x@(pre)@(rt)tst @(rt)tst.c @(pre)ammm.o
	$(ATLRUN) $(MMTdir) x@(pre)@(rt)tst 
    @undef tri
   @endwhile
@(pre)ammtst_fko: @(pre)ammmtst_fko
@(pre)ammmtst_fko : $(INCAdir)/atlas_type.h $(BINdir)/xextract
	$(extC) -def mu "${mu}" -def nu "${nu}" -def be "${beta}" \
                -def M "${M}" -def N "${N}" -def K "${K}" -def dupB "${dupB}" \
                -def kmaj "${kmaj}" -o ammmtst.c rout=ammmtst
	- rm -f @(pre)ammm.o @(pre)ammm.s
	$(FKO) $(FKOFLAGS) -o @(pre)ammm.s $(mmrout)
	$(GCC) -c ammm.s
	$(KC) $(KCFLAGS) -D@(typ)=1 -o x@(pre)ammmtst ammmtst.c @(pre)ammm.o
	$(ATLRUN) $(MMTdir) x@(pre)ammmtst 
   @undef upr
   @undef typ
@endwhile

@BEGINSKIP
mmutstcase : $(pre)mmutstcase1
cmmutstcase: auxlib xccobj
	rm -f $(pre)mm.c
	$(MAKE) BuildCobjs pre=$(pre) mb=$(mb) nb=$(nb) kb=$(kb) \
                lda=$(lda) ldb=$(ldb) ldc=$(ldc) mmrout=$(mmrout) \
                SMC="$(SMC)" SMCFLAGS="$(SMCFLAGS)" \
                DMC="$(DMC)" DMCFLAGS="$(DMCFLAGS)"
	$(MAKE) mmtstcase0 $(casarg) csC=2 \
                mmobjs="$(pre)mm_b0.o $(pre)mm_b1.o $(pre)mm_bX.o" \
                mmlib="$(ATLASlib) $(LIBS)"

mmtstcase : $(pre)mmtstcase

mmtstcase0: $(SYSdir)/time.o $(INCAdir)/atlas_type.h auxlib xccobj
	rm -f $(pre)mmtst.o
	$(KC) $(KCFLAGS) -D$(pre)REAL -DtranA$(ta) -DtranB$(tb) \
              -DMULADD=$(muladd) -DLAT=$(lat) -D$(loopO) \
              -DMB0=$(mb) -DNB0=$(nb) -DKB0=$(kb) \
              -DMB=$(M) -DNB=$(N) -DKB=$(K) \
              -DKU=$(ku) -DNU=$(nu) -DMU=$(mu) \
              -DLDA=$(lda) -DLDB=$(ldb) -DLDC=$(ldc) \
              -DcsA=$(csA) -DcsB=$(csB) -DcsC=$(csC) \
              -DALPHA=$(alpha) -DBETA=$(beta) $(moves) \
              -DCLEANUP=$(cleanup) \
              -o $(pre)mmtst.o -c $(mySRCdir)/mmtst.c
	$(CLINKER) $(CLINKFLAGS) -o x$(pre)mmtst $(pre)mmtst.o $(mmobjs) \
                   $(mmlib)
	$(ATLRUN) $(MMTdir) x$(pre)mmtst

@whiledef ta T N
   @whiledef tb T N
      @multidef bnam bX b1 b0
      @whiledef beta  12 1 0
	$(MAKE) NCemit `head -n 1 res/$(pre)best@(ta)@(tb)_$(nb)x$(nb)x$(nb)` \
                       alpha=1 beta=@(beta) \
                       mmnam=ATL_$(pre)NCmm@(ta)@(tb)_a1_@(bnam).c
@skip	./xemit_mm `head -n 1 res/$(pre)best@(ta)@(tb)_$(nb)x$(nb)x$(nb)` \
@skip                   -a 1 @(alpha) -b 1 @(beta) > \
@skip                   ATL_$(pre)NCmm@(ta)@(tb)_a1_@(bnam).c
         @undef bnam
      @endwhile
      @multidef bnam bX b0
      @whiledef beta  12 0
	$(MAKE) NCemit `head -n 1 res/$(pre)best@(ta)@(tb)_$(nb)x$(nb)x$(nb)` \
                       alpha=3 beta=@(beta) \
                       mmnam=ATL_$(pre)NCmm@(ta)@(tb)_aX_@(bnam).c
         @undef bnam
      @endwhile
	$(MAKE) NCemit `head -n 1 res/$(pre)best@(ta)@(tb)_0x0x$(nb)` \
                       alpha=12 beta=12 mmnam=ATL_$(pre)NCCUmm@(ta)@(tb)_K.c
	$(MAKE) NCemit `head -n 1 res/$(pre)best@(ta)@(tb)_0x0x0` \
                       alpha=12 beta=12 mmnam=ATL_$(pre)NCCUmm@(ta)@(tb).c
@skip	./xemit_mm `head -n 1 res/$(pre)best@(ta)@(tb)_0x0x$(nb)` \
@skip                   -a 1 12 -b 1 12 > ATL_$(pre)NCCUmm@(ta)@(tb)_K.c
@skip	./xemit_mm `head -n 1 res/$(pre)best@(ta)@(tb)_0x0x0` \
@skip                   -a 1 12 -b 1 12 > ATL_$(pre)NCCUmm@(ta)@(tb).c
   @endwhile
@endwhile
@ENDSKIP

$(BINdir)/xccobj :
	cd $(BINdir) ; $(MAKE) xccobj
xccobj : $(BINdir)/xccobj
	-@ cp -f $(BINdir)/xccobj .
	-@ cp -f $(BINdir)/xccobj.exe .

auxlib :
	cd $(AUXdir) ; $(MAKE) lib
	touch auxlib
force_build :

@beginskip
install :
	$(MAKE) $(pre)install
dNCinstall :
	$(MAKE) NCinstall pre=d
sNCinstall :
	$(MAKE) NCinstall pre=s
zNCinstall :
	$(MAKE) NCinstall pre=z
cNCinstall :
	$(MAKE) NCinstall pre=c
NCinstall:
	mv -f ATL_$(pre)NCmm[T,N][T,N]_a[1,X]_b[0,1,X].c \
              ATL_$(pre)NCCUmm[T,N][T,N].c ATL_$(pre)NCCUmm[T,N][T,N]_K.c \
              $(GMMdir)/.

emit_vKB.o : $(mySRCdir)/emit_vKB.c $(INCSdir)/atlas_vnbcase.h
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/emit_vKB.c

emit_mm.o : $(mySRCdir)/emit_mm.c
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/emit_mm.c

emit_reg.o : $(mySRCdir)/emit_reg.c
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/emit_reg.c

emit_cmm.o : $(mySRCdir)/emit_cmm.c
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/emit_cmm.c

emit_fmm.o : $(mySRCdir)/emit_fmm.c
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/emit_fmm.c

hcsearch.o : $(L3INCdep) $(mySRCdir)/hcsearch.c
	$(XCC) -c $(XCCFLAGS) $(mySRCdir)/hcsearch.c
@endskip

GetSysSum.o : $(mySRCdir)/GetSysSum.c
	$(KC) -c $(KCFLAGS) $(mySRCdir)/GetSysSum.c

gemmtst.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
            $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_tst.h $(INCSdir)/cblas.h
	$(KC) -c $(KCFLAGS) $(mySRCdir)/gemmtst.c
xlcm :
	$(KC) -o xlcm lcm.c

clean :
	rm -f *.o *.grd

$(pre)tfc.o : $(mySRCdir)/tfc.c $(INCSdir)/atlas_misc.h \
              $(INCAdir)/atlas_$(pre)sysinfo.h
	$(KC) -o $@ -c $(KCFLAGS) -D$(typ) $(mySRCdir)/tfc.c \
                 -DSM_FOUT=$(INCAdir)/$(pre)Xover.h

@ROUT Make.gemmbased
include Make.inc

N=500
ext = ./extract3.0
base = $(mySRCdir)/ssgemmbased.base

dexe : xdblat3_ssb xdb3tim_ssb xdb3tim_sys xdb3tim_rb xdblat3_rb
sexe : xsblat3_ssb xsb3tim_ssb xsb3tim_sys xsb3tim_rb

dtest : xdblat3_ssb xdblat3_rb
stest : xsblat3_ssb xsblat3_rb
dlib : dblas
slib : sblas
lib:  dblas sblas

force_build:
frc :

@beginskip
xzblat3_rb  : zblat3.o $(SYSdir)/time.o ATL_xerbla.o
	$(FLINKER) $(FLINKFLAGS) -o $@ zblat3.o $(SYSdir)/time.o ATL_xerbla.o \
                                 $(ATLASlib) $(LIBS)
xcblat3_rb  : cblat3.o $(SYSdir)/time.o ATL_xerbla.o
	$(FLINKER) $(FLINKFLAGS) -o $@ cblat3.o $(SYSdir)/time.o ATL_xerbla.o \
                                 $(ATLASlib) $(LIBS)
@endskip
@whiledef pr z c d s
@(pr)GEMMBLASOBJ = @(pr)symm.o @(pr)syr2k.o @(pr)syrk.o @(pr)trsm.o @(pr)trmm.o lsame.o xerbla.o

x@(pr)blat3_ssb : @(pr)blat3.o $(SYSdir)/time.o ATL_xerbla.o @(pr)blas
	$(FLINKER) $(FLINKFLAGS) -o $@ @(pr)blat3.o $(SYSdir)/time.o \
                   ATL_xerbla.o $(GEMMBlib) $(ATLASlib) $(LIBS)
	rm -f @up@(pr)BLAT3.SUMM
	$(ATLRUN) $(MMBdir) x@(pr)blat3_ssb < $(MMBdir)/@(pr)blat3.dat
	mv @up@(pr)BLAT3.SUMM @up@(pr)BLAT3.SSB
x@(pr)blat3_rb  : @(pr)blat3.o $(SYSdir)/time.o ATL_xerbla.o
	$(FLINKER) $(FLINKFLAGS) -o $@ @(pr)blat3.o $(SYSdir)/time.o \
                   ATL_xerbla.o $(ATLASlib) $(LIBS)
	rm -f @up@(pr)BLAT3.SUMM
	$(ATLRUN) $(MMBdir) x@(pr)blat3_rb < $(MMBdir)/@(pr)blat3.dat
	mv @up@(pr)BLAT3.SUMM @up@(pr)BLAT3.RB

x@(pr)b3tim_rb : @(pr)blas3time.o second.o $(SYSdir)/time.o
	$(FLINKER) $(FLINKFLAGS) -o $@ @(pr)blas3time.o second.o \
                   $(SYSdir)/time.o $(ATLASlib) $(LIBS)
x@(pr)b3tim_ssb : @(pr)blas3time.o second.o $(SYSdir)/time.o @(pr)blas
	$(FLINKER) $(FLINKFLAGS) -o $@ @(pr)blas3time.o second.o \
                   $(SYSdir)/time.o $(GEMMBlib) $(ATLASlib) $(LIBS)

x@(pr)b3tim_sys : @(pr)blas3time.o second.o $(SYSdir)/time.o
	$(FLINKER) $(FLINKFLAGS) -o $@ @(pr)blas3time.o second.o \
                   $(SYSdir)/time.o $(BLASlib) $(LIBS)

@define rtarg @@up@(pr)SYMM_RCB=$(@up@(pr)SYMM_RCB)@
@define rtarg @@up@(pr)SYRK_RCB=$(@up@(pr)SYRK_RCB) @up@(pr)SYRK_CB=$(@up@(pr)SYRK_CB) @up@(pr)SYRK_RB=$(@up@(pr)SYRK_RB)@
@define rtarg @@up@(pr)SYR2K_RCB=$(@up@(pr)SYR2K_RCB)@
@define rtarg @@up@(pr)TRMM_RCB=$(@up@(pr)TRMM_RCB) @up@(pr)TRMM_CB=$(@up@(pr)TRMM_CB) @up@(pr)TRMM_RB=$(@up@(pr)TRMM_RB)@
@define rtarg @@up@(pr)TRSM_RCB=$(@up@(pr)TRSM_RCB) @up@(pr)TRSM_CB=$(@up@(pr)TRSM_CB) @up@(pr)TRSM_RB=$(@up@(pr)TRSM_RB)@
@whiledef rt symm syrk syr2k trmm trsm
@(pr)@(rt)tune : $(ext)
	$(MAKE) @(pr)@(rt).f frc=frc @(rtarg)
	$(MAKE) x@(pr)b3tim_ssb frc=
	$(ext) -b $(base) -o tune.dat type=@(pr) rout=tune.@(rt) -def size $(N)
	$(ATLRUN) $(MMBdir) x@(pr)b3tim_ssb < $(MMBdir) tune.dat
  @undef rtarg

@endwhile
@(pr)blas: $(ext) $(@(pr)GEMMBLASOBJ)
	$(ARCHIVER) $(ARFLAGS) $(GEMMBlib) $(@(pr)GEMMBLASOBJ)

@whiledef rt symm syr2k syrk trmm trsm
@(pr)@(rt).o : @(pr)@(rt).f
	$(F77) $(F77FLAGS) -c @(pr)@(rt).f
@endwhile

@(pr)symm.f: $(ext) $(base) $(frc)
	$(ext) -b $(base) -o @(pr)symm.f TYPE=@(pr)REAL ROUT=SYMM \
               -def RCB $(@up@(pr)SYMM_RCB)

@(pr)syr2k.f: $(ext) $(base) $(frc)
	$(ext) -b $(base) -o @(pr)syr2k.f TYPE=@(pr)REAL ROUT=SYR2K \
               -def RCB $(@up@(pr)SYR2K_RCB)

@(pr)syrk.f: $(ext) $(base) $(frc)
	$(ext) -b $(base) -o @(pr)syrk.f TYPE=@(pr)REAL ROUT=SYRK \
               -def RB $(@up@(pr)SYRK_RB) -def CB $(@up@(pr)SYRK_CB) 

@(pr)trmm.f: $(ext) $(base) $(frc)
	 $(ext) -b $(base) -o @(pr)trmm.f TYPE=@(pr)REAL ROUT=TRMM \
                 -def RCB $(@up@(pr)TRMM_RCB) -def RB $(@up@(pr)TRMM_RB) \
                 -def CB $(@up@(pr)TRMM_CB)

@(pr)trsm.f: $(ext) $(base) $(frc)
	$(ext) -b $(base) -o @(pr)trsm.f TYPE=@up@(pr)REAL ROUT=TRSM \
               -def RCB $(@up@(pr)TRSM_RCB) -def RB $(@up@(pr)TRSM_RB) \
               -def CB $(@up@(pr)TRSM_CB)

@(pr)blas3time.o : $(mySRCdir)/@(pr)blas3time.f
	$(F77) $(F77FLAGS) -c $(mySRCdir)/@(pr)blas3time.f

@(pr)blat3.o : $(mySRCdir)/@(pr)blat3.f
	$(F77) $(F77FLAGS) -c $(mySRCdir)/@(pr)blat3.f

@endwhile

$(ext): $(mySRCdir)/extract3.c
	$(XCC) -o $(ext) $(XCCFLAGS) $(mySRCdir)/extract3.c

second.o : $(mySRCdir)/second.c
	$(KC) -o $@ -c $(KCFLAGS) -I$(INCAdir) $(mySRCdir)/second.c

ATL_xerbla.o : $(mySRCdir)/ATL_xerbla.c
	$(KC) -o $@ -c $(KCFLAGS) -I$(INCAdir) $(mySRCdir)/ATL_xerbla.c

xerbla.o: $(mySRCdir)/xerbla.f
	$(F77) $(F77FLAGS) -c $(mySRCdir)/xerbla.f 

lsame.o: $(mySRCdir)/lsame.f
	$(F77) $(F77FLAGS) -c $(mySRCdir)/lsame.f 

clean :
	rm -f *.f *.o *.grd
@ROUT Make.bin
include Make.inc
mySRCdir = $(SRCdir)/bin

scalf = $(mflop_l1)

LOCK=mut
ammidx=0
pre=j
nb = 88
nreg=0
NBs = 31 1 4 8 12 16 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 96 \
      112 128 144 160 176 192 224 256

@beginskip
dmmobj = $(GMMdir)/ATL_dbig_mm.o $(GMMdir)/ATL_dbignork_mm.o \
         $(GMMdir)/ATL_dsmall_mm.o $(GMMdir)/ATL_dsmallK_mm.o
smmobj = $(GMMdir)/ATL_sbig_mm.o $(GMMdir)/ATL_sbignork_mm.o \
         $(GMMdir)/ATL_ssmall_mm.o $(GMMdir)/ATL_ssmallK_mm.o
cmmobj = $(GMMdir)/ATL_cbig_mm.o $(GMMdir)/ATL_csmall_mm.o \
         $(GMMdir)/ATL_csmallK_mm.o
zmmobj = $(GMMdir)/ATL_zbig_mm.o $(GMMdir)/ATL_zsmall_mm.o \
         $(GMMdir)/ATL_zsmallK_mm.o
@endskip

@multidef tv0 cat join print reduce rename scale unify select ratio
@declare "tvexe = " y y
   tvecget
   @whiledef tv0
      tvec@(tv0)
      @define tv1 @@(tv0)@
   @endwhile
@enddeclare
tvec_all : $(tvexe)
tvecget : $(INCSdir)/atlas_tvec.h $(mySRCdir)/tvecget.c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/tvecget.c -lm
@whiledef tv1
tvec@(tv1) : $(INCSdir)/atlas_tvec.h $(mySRCdir)/tvec@(tv1).c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/tvec@(tv1).c
@endwhile
$(SYSdir)/ATL_Xwalltime.o :
	cd $(SYSdir) ; $(MAKE) ATL_Xwalltime.o
xextract : $(mySRCdir)/extract.c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/extract.c
xatlas_waitfile : atlas_waitfile.o $(SYSdir)/ATL_Xwalltime.o
	$(XCC) $(XCCFLAGS) -o $@ atlas_waitfile.o $(SYSdir)/ATL_Xwalltime.o
atlas_waitfile.o : $(mySRCdir)/atlas_waitfile.c
	$(XCC) $(XCCFLAGS) -c $(mySRCdir)/atlas_waitfile.c
xatlas_build : xatlas_tee atlas_install.o 
	$(XCC) $(XCCFLAGS) -o $@ atlas_install.o
atlas_install.o : $(mySRCdir)/atlas_install.c
	$(XCC) $(XCCFLAGS) -c $(mySRCdir)/atlas_install.c
xatlas_tee     : atlas_tee.o 
	$(XCC) $(XCCFLAGS) -o $@ atlas_tee.o
atlas_tee.o : $(mySRCdir)/atlas_tee.c
	$(XCC) $(XCCFLAGS) -c $(mySRCdir)/atlas_tee.c
xccobj  : $(mySRCdir)/ccobj.c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/ccobj.c -DTOPDIR=$(BLDdir)
xsubstr : $(mySRCdir)/substr.c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/substr.c
@whiledef rt stattime atl2vec
x@(rt) : $(mySRCdir)/@(rt).c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/@(rt).c -lm
@endwhile


IBuildRef:
	cd $(BLDdir)/src/blas/reference/level3 ; $(MAKE) $(pre)lib
	cd $(BLDdir)/src/blas/reference/level2 ; $(MAKE) $(pre)lib

@skip $(INCAdir)/atlas_pthreads.h:
@skip  	cd $(SYSdir) ; $(MAKE) findNT
@skip INSTALL_LOG/atlas_pthreads.h: $(INCAdir)/atlas_pthreads.h
@skip 	cp $(INCAdir)/atlas_pthreads.h $(BINdir)/INSTALL_LOG/.
@skip IFindNthreads: INSTALL_LOG/atlas_pthreads.h
@skip IFindNthreads: $(INCAdir)/atlas_pthreads.h

IBuildDyLibs:
	cd $(BLDdir) ; $(MAKE) dylibs
@beginskip
INSTALL_LOG/atlas_$(pre)tXover_$(NPROC)p.h:
	if [ -s "$(INCAdir)/atlas_$(pre)tXover_$(NPROC)p.h" ]; then \
           echo "Arch Defaults allow us to skip tuning" ; \
           cp $(INCAdir)/atlas_$(pre)tXover_$(NPROC)p.h INSTALL_LOG/. ; \
        else \
           cd $(MMTdir) ; $(MAKE) res/atlas_$(pre)tXover_$(NPROC)p.h ; \
           cp $(MMTdir)/res/atlas_$(pre)tXover_$(NPROC)p.h $(INCAdir)/. ; \
           cp $(MMTdir)/res/atlas_$(pre)tXover_$(NPROC)p.h \
              $(BINdir)/INSTALL_LOG/. ; \
        fi
@endskip
$(MMTdir)/res/atlas_tcachedge.h :
	cd $(MMTdir) ; $(MAKE) res/atlas_tcacheedge.h
INSTALL_LOG/atlas_tcacheedge.h : $(MMTdir)/res/atlas_tcachedge.h
	cp $(MMTdir)/res/atlas_tcacheedge.h $(INCAdir)/.
	cp $(MMTdir)/res/atlas_tcacheedge.h INSTALL_LOG/.
IBuildPtlibs0:
	cd $(BLDdir)/src/auxil/ ; $(MAKE) ptlib
	cd $(BLDdir)/src/blas/ammm ; $(MAKE) lib
	cd $(BLDdir)/src/threads/ ; $(MAKE) lib
	cd $(BLDdir)/interfaces/blas/C/src/ ; $(MAKE) ptlib
	- cd $(BLDdir)/interfaces/blas/F77/src/ ; $(MAKE) ptlib
	cd $(BLDdir)/src/lapack ; $(MAKE) ptlib

Tprim_mut :
	cp $(SRCdir)/makes/Make.tprim $(BLDdir)/src/threads/Make.tprim
@whiledef ar ia32 amd64 arm64
Tprim_@(ar) : 
	- rm -f $(BLDdir)/src/threads/Make.tprim
	cat $(SRCdir)/makes/Make.tprim | sed -e "s/LNG=c/LNG=S/" \
        -e "s/ARC=mut/ARC=@(ar)/" > $(BLDdir)/src/threads/Make.tprim
@endwhile
	
ITprim: Tprim_$(LOCK)
	cd $(BLDdir)/tune/threads ; $(MAKE) IRun_nthr
	cd $(BLDdir/src/threads ; $(MAKE) -f Make.tprim lib
IPTtune:
	cd $(BLDdir)/tune/threads ; $(MAKE) IThreadTune
	cd $(BLDdir)/src/threads/ ; $(MAKE) lib
	cd $(BLDdir)/tune/threads ; $(MAKE) MakeThreadPerf
	$(MAKE) INSTALL_LOG/atlas_tcacheedge.h
	cd $(BLDdir)/src/blas/ammm ; $(MAKE) lib
@beginskip
	$(MAKE) INSTALL_LOG/atlas_stXover_$(NPROC)p.h pre=s
	$(MAKE) INSTALL_LOG/atlas_dtXover_$(NPROC)p.h pre=d
	$(MAKE) INSTALL_LOG/atlas_ctXover_$(NPROC)p.h pre=c
	$(MAKE) INSTALL_LOG/atlas_ztXover_$(NPROC)p.h pre=z
@endskip

IBuildPtlibs:
	cd $(BLDdir)/src/blas/ammm ; $(MAKE) lib
	cd $(BLDdir)/interfaces/blas/C/src/ ; $(MAKE) ptlib
	- cd $(BLDdir)/interfaces/blas/F77/src/ ; $(MAKE) ptlib
	cd $(BLDdir)/src/lapack ; $(MAKE) ptlib
	cd $(BLDdir)/interfaces/lapack/C/src/ ; $(MAKE) ptlib
	- cd $(BLDdir)/interfaces/lapack/F77/src/ ; $(MAKE) ptlib
	if [ -d "$(FLAdir)" ]; then \
	   cd $(BLDdir)/interfaces/lapack/C2F/src ; $(MAKE) ptlib ; \
        fi

IBuildLibs:
	cd $(BLDdir)/src/auxil ; $(MAKE) lib
	cd $(BLDdir)/src/blas/ammm ; $(MAKE) lib
	cd $(BLDdir)/src/blas/ammm ; $(MAKE) lib
	cd $(BLDdir)/src/blas/gemv ; $(MAKE) lib
	cd $(BLDdir)/src/blas/ger ; $(MAKE) lib
	cd $(BLDdir)/src/blas/level1 ; $(MAKE) lib
	cd $(BLDdir)/src/blas/level2 ; $(MAKE) lib
	cd $(BLDdir)/src/blas/level3 ; $(MAKE) lib
@skip	cd $(BLDdir)/src/blas/pklevel3 ; $(MAKE) lib
	- cd $(BLDdir)/src/blas/f77reference ; $(MAKE) lib
@skip	cd $(BLDdir)/src/blas/reference/level2 ; $(MAKE) lib
	cd $(BLDdir)/src/blas/reference/level3 ; $(MAKE) lib
	cd $(BLDdir)/src/lapack ; $(MAKE) lib
	cd $(BLDdir)/interfaces/blas/C/src ; $(MAKE) all
	- cd $(BLDdir)/interfaces/blas/F77/src ; $(MAKE) lib
	cd $(BLDdir)/interfaces/lapack/C/src ; $(MAKE) lib
	- cd $(BLDdir)/interfaces/lapack/F77/src ; $(MAKE) lib
	if [ -d "$(FLAdir)" ]; then \
	   cd $(BLDdir)/interfaces/lapack/C2F/src ; $(MAKE) lib ; \
        fi
latune_all :
	$(MAKE) ILATune pre=d
	$(MAKE) ILATune pre=s
	$(MAKE) ILATune pre=z
	$(MAKE) ILATune pre=c
ILATune:
	if [ -s "$(INCAdir)/atlas_$(pre)GetNB_geqrf.h" ]; then \
           echo "Arch Defaults allow us to skip tuning" ; \
        else \
	    cd $(BLDdir)/tune/lapack ; $(MAKE) res/ATL_$(pre)GetNB_geqrf.h ; \
	    cp $(BLDdir)/tune/lapack/res/ATL_$(pre)GetNB_geqrf.h \
               $(INCAdir)/atlas_$(pre)GetNB_geqrf.h ; \
        fi
	if [ -s "$(INCAdir)/atlas_$(pre)tGetNB_geqrf.h" ]; then \
           echo "Arch Defaults allow us to skip threaded tuning" ; \
        elif [ -s "$(INCAdir)/atlas_pthreads.h" ]; then \
	    cd $(BLDdir)/tune/lapack ; $(MAKE) res/ATL_$(pre)tGetNB_geqrf.h ; \
	    cp $(BLDdir)/tune/lapack/res/ATL_$(pre)tGetNB_geqrf.h \
               $(INCAdir)/atlas_$(pre)tGetNB_geqrf.h ; \
        fi
@beginskip
	   $(MAKE) x$(pre)lanbtst ; \
	   ./x$(pre)lanbtst -R 1 geqrf -oc ATL_$(pre)GetNB_geqrf \
              -#t 5 0 12 100 8 500 6 800 4 1200 3 -% 4 16 50 0 \
              -nbmin 3 100 8 400 16 800 24 -nb $(NBs) \
              -n 24 25 50 75 100 125 150 175 200 250 300 350 400 450 \
                    500 600 700 800 900 1000 1200 1400 1600 1800 2000 ; \
	   mv ATL_$(pre)GetNB_geqrf.h $(INCAdir)/atlas_$(pre)GetNB_geqrf.h ; \
        fi
	if [ -s "$(INCAdir)/atlas_$(pre)tGetNB_geqrf.h" ]; then \
           echo "Arch Defaults allow us to skip threaded tuning" ; \
        elif [ -s "$(INCAdir)/atlas_pthreads.h" ]; then \
	   $(MAKE) x$(pre)lanbtst_pt ; \
	   ./x$(pre)lanbtst_pt -R 1 geqrf -oc ATL_$(pre)tGetNB_geqrf \
              -#t 5 0 12 100 8 500 6 800 4 1200 3 -% 4 16 50 0 \
              -nbmin 3 100 8 400 16 800 24 -nb $(NBs) \
              -n 29 25 50 75 100 125 150 175 200 250 300 350 400 450 \
                    500 600 700 800 900 1000 1200 1400 1600 1800 2000 \
                    2400 2800 3200 3600 4000 ; \
	   mv ATL_$(pre)tGetNB_geqrf.h $(INCAdir)/atlas_$(pre)tGetNB_geqrf.h ; \
        fi
@endskip

IPostTune:
	cd $(L3Tdir) ; $(MAKE) res/atlas_trsmNB.h
	cd $(BLDdir)/src/blas/level3 ; $(MAKE) lib
error_report :
	cd $(BLDdir) ; $(MAKE) error_report

IBozoL1: IBozoL1.grd
$(BLDdir)/ARCHS/BOZOL1 : $(SRCdir)/CONFIG/ARCHS/BOZOL1.tar.bz2
	cd $(BLDdir)/ARCHS ; \
           $(BUNZIP) -c $(SRCdir)/CONFIG/ARCHS/BOZOL1.tar.bz2 | tar xvf -
	
IBozoL1.grd : $(BLDdir)/ARCHS/BOZOL1
	$(MAKE) IForceL1 pre=$(pre) defdir=$(BLDdir)/BOZOL1
	touch IBozoL1.grd
IForceL1:
	- cp -f $(defdir)/*_SUMM $(L1Tdir)/res/.

UntarArch: $(BLDdir)/ARCHS/$(ARCH)
$(BLDdir)/ARCHS/$(ARCH): $(ADdir)/$(ARCH).tar.bz2
	cd $(BLDdir)/ARCHS ; \
           $(BUNZIP) -c $(ADdir)/$(ARCH).tar.bz2 | tar xvf -
IArchDef.grd :
	cd $(BLDdir)/ARCHS ; \
           $(MAKE) archput
	touch IArchDef.grd
	

@beginskip
IL1$(pre)Defaults.grd:
	$(MAKE) I$(pre)ForceL1 pre=$(pre) defdir=$(defdir)
	touch IL1$(pre)Defaults.grd
I$(pre)ForceL1:
@whiledef rt ASUM AXPBY AXPY COPY CPSC DOT IAMAX NRM2 ROT SCAL SET SWAP
	- cp -f $(defdir)/?@(rt)_SUMM $(L1Tdir)/res/.
@endwhile
@whiledef rt DOT
	- cp -f $(defdir)/?@(rt)C_SUMM $(L1Tdir)/res/.
@endwhile
ISet$(pre)MMDef.grd : $(mmdir)
	- cp -f $(mmdir)/?Xover.h $(INCAdir)/.
	- cp -f $(mmdir)/atlas_cacheedge.h $(INCAdir)/.
	- cp -f $(mmdir)/atlas_tcacheedge.h $(INCAdir)/.
	- cp -f $(mmdir)/atlas_??NKB.h $(INCAdir)/.
	- cp -f $(mmdir)/* $(MMTdir)/res/.
	touch ISet$(pre)MMDef.grd
ISet$(pre)KernDef.grd:
	- cp -f $(defdir)/?MULADD $(SYSdir)/res/.
	- cp -f $(defdir)/L1CacheSize $(SYSdir)/res/.
	- cp -f $(defdir)/?R1RES $(R1Tdir)/res/.
	- cp -f $(defdir)/?MVRES $(MVTdir)/res/.
	- cp -f $(defdir)/?TRSM_NB $(L3Tdir)/res/.
	$(MAKE) I$(pre)Defaults.grd pre=$(pre) defdir=$(defdir)
@endskip

IStage1:
	$(MAKE) ITprim
	- cd $(AUXdir) ; $(MAKE) -s ATL_buildinfo.o
	cd $(AUXdir) ; $(MAKE) lib
	cd $(TSTdir) ; $(MAKE) lib
	$(MAKE) INSTALL_LOG/L1CacheSize
	$(MAKE) INSTALL_LOG/sMULADD pre=s nreg=$(nreg)
	$(MAKE) INSTALL_LOG/dMULADD pre=d nreg=$(nreg)
	cd $(SYSdir) ; $(MAKE) RunLamch

IRunMADef :
	cd $(SYSdir) ; $(MAKE) RunMADef pre=$(pre) nreg=$(nreg)

IRunMMDef :
	cd $(MMTdir) ; $(MAKE) RunMMDef pre=$(pre) nreg=$(nreg)
	cd $(MMTdir) ; ./xemit_mm  -p $(pre) -R -2
	cd $(MMTdir) ; $(MAKE) install pre=$(pre)
IKillL1 : force_build
	rm -f $(SYSdir)/res/L1CacheSize INSTALL_LOG/L1CacheSize

$(SYSdir)/res/L1CacheSize:
	cd $(SYSdir) ; $(MAKE) res/L1CacheSize

INSTALL_LOG/L1CacheSize : $(SYSdir)/res/L1CacheSize
	cp $(SYSdir)/res/L1CacheSize INSTALL_LOG/.

IL1Override : force_build
	rm -f $(SYSdir)/res/L1CacheSize
	cp $(tnam) $(SYSdir)/res/L1CacheSize
	rm -f $(tnam)

IKillMuladd : force_build
	rm -f $(SYSdir)/res/$(pre)MULADD $(SYSdir)/res/$(pre)muladd* \
              INSTALL_LOG/$(pre)MULADD

$(SYSdir)/res/$(pre)MULADD :
	cd $(SYSdir) ; $(MAKE) res/$(pre)MULADD pre=$(pre)

INSTALL_LOG/$(pre)MULADD :  $(SYSdir)/res/$(pre)MULADD
	cp $(SYSdir)/res/$(pre)MULADD INSTALL_LOG/.

$(INCAdir)atlas_$(pre)sysinfo.h :
	cd $(SYSdir) ; $(MAKE) $(INCAdir)/atlas_$(pre)sysinfo.h

INSTALL_LOG/atlas_$(pre)sysinfo.h : $(INCAdir)/res/atlas_$(pre)sysinfo.h
	cp $(INCAdir)/atlas_$(pre)sysinfo.h INSTALL_LOG/.

IKillMMres: force_build
	rm -f $(MMTdir)/res/* INSTALL_LOG/$(pre)MMRES.sum


Irbob :
	rm -f $(tnam)
	cd $(MMTdir) ; $(MAKE) $(pre)rbob pre=$(pre) muladd=$(muladd) \
           ldc=$(nb) nb=$(nb) mu=$(mu) nu=$(nu) lat=$(lat) ku=$(ku)
	cp $(MMTdir)/res/C$(pre)NB$(nb)_$(mu)x$(nu)x$(ku)_$(muladd)-$(lat).mflop $(tnam)
	echo $(muladd) $(lat) $(nb) $(mu) $(nu) $(ku) >> $(tnam)
Icbob :
	rm -f $(tnam)
	cd $(MMTdir) ; $(MAKE) cbob pre=$(pre) muladd=$(muladd) ldc=$(nb) \
                                 nb=$(nb) mu=$(mu) nu=$(nu) lat=$(lat) ku=$(ku)
	cp $(MMTdir)/res/C$(pre)NB$(nb)_$(mu)x$(nu)x$(ku)_$(muladd)-$(lat).mflop $(tnam)
	echo $(muladd) $(lat) $(nb) $(mu) $(nu) $(ku) >> $(tnam)

Imakefch:
	rm -f $(INCAdir)/atlas_$(pre)sysinfo.h
	cp $(tnam) $(INCAdir)/atlas_$(pre)sysinfo.h
	rm -f $(tnam)

INSTALL_LOG/smmstandard : 
	cd $(MMTdir) ; $(MAKE) rready $(sATLres)
	cd $(MMTdir) ; $(MAKE) install pre=s typ=SREAL
	$(MAKE) Irbob tnam=INSTALL_LOG/smmstandard $(sATLres)
INSTALL_LOG/dmmstandard : 
	cd $(MMTdir) ; $(MAKE) rready $(dATLres)
	cd $(MMTdir) ; $(MAKE) install pre=d typ=DREAL
	$(MAKE) Irbob tnam=INSTALL_LOG/dmmstandard $(dATLres)
INSTALL_LOG/cmmstandard : 
	cd $(MMTdir) ; $(MAKE) cready $(cATLres)
	cd $(MMTdir) ; $(MAKE) install pre=c typ=SCPLX
	$(MAKE) Icbob tnam=INSTALL_LOG/cmmstandard $(cATLres)
INSTALL_LOG/zmmstandard : 
	cd $(MMTdir) ; $(MAKE) cready $(zATLres)
	cd $(MMTdir) ; $(MAKE) install pre=z typ=DCPLX
	$(MAKE) Icbob tnam=INSTALL_LOG/zmmstandard $(zATLres)

@beginskip
$(pre)mminstall : INSTALL_LOG/$(pre)MMRES.sum
	cd $(MMTdir) ; $(MAKE) install pre=$(pre) typ=$(typ)
	touch $(pre)mminstall

mminstall : force_build
	$(MAKE) $(pre)mminstall

@endskip
$(L3Tdir)/res/atlas_$(pre)trsmXover.h:
	cd $(L3Tdir) ; $(MAKE) res/atlas_$(pre)trsmXover.h pre=$(pre)

INSTALL_LOG/atlas_$(pre)trsmXover.h : $(L3Tdir)/res/atlas_$(pre)trsmXover.h
	cp $(INCAdir)/atlas_$(pre)trsmXover.h INSTALL_LOG/.

@multidef rout
   @whiledef TA N T
      @whiledef TB N T
         best@(TA)@(TB)_$(nb)x$(nb)x$(nb)
         best@(TA)@(TB)_0x0x$(nb)
         best@(TA)@(TB)_0x0x0
      @endwhile
   @endwhile
@endmultidef
@whiledef rout
$(MMTdir)/res/$(pre)@(rout) :
	cd $(MMTdir) ; $(MAKE) res/$(pre)@(rout) pre=$(pre) bnb=$(nb)
INSTALL_LOG/$(pre)@(rout) : \
   $(MMTdir)/res/$(pre)@(rout)
	cp $(MMTdir)/res/$(pre)@(rout) INSTALL_LOG/.
@endwhile

$(R1Tdir)/res/$(pre)R2K.sum : $(R1Tdir)/res/$(pre)R1K.sum force_build
	cd $(R1Tdir) ; $(MAKE) res/$(pre)R2K.sum pre=$(pre)
$(R1Tdir)/res/$(pre)R1K.sum : force_build
	cd $(R1Tdir) ; $(MAKE) res/$(pre)R1K.sum pre=$(pre)
INSTALL_LOG/$(pre)R1K.sum : $(R1Tdir)/res/$(pre)R1K.sum
	cp $(R1Tdir)/res/$(pre)R1K.sum INSTALL_LOG/.
INSTALL_LOG/$(pre)R2K.sum : INSTALL_LOG/$(pre)R1K.sum \
   $(R1Tdir)/res/$(pre)R2K.sum
	cp $(R1Tdir)/res/$(pre)R2K.sum INSTALL_LOG/.
	cd $(R1Tdir) ; $(MAKE) $(pre)nxtune

@whiledef tt T N
$(MVTdir)/res/$(pre)MV@(tt)K.sum : force_build
	cd $(MVTdir) ; $(MAKE) res/$(pre)MV@(tt)K.sum pre=$(pre)
INSTALL_LOG/$(pre)MV@(tt)K.sum : $(MVTdir)/res/$(pre)MV@(tt)K.sum
	cp $(MVTdir)/res/$(pre)MV@(tt)K.sum INSTALL_LOG/.
@endwhile


@whiledef rout MMRES.sum NCNB Xover.h
$(MMTdir)/res/$(pre)@(rout) :
	cd $(MMTdir) ; $(MAKE) res/$(pre)@(rout) pre=$(pre) nb=$(nb)
INSTALL_LOG/$(pre)@(rout) : $(MMTdir)/res/$(pre)@(rout)
	cp $(MMTdir)/res/$(pre)@(rout) INSTALL_LOG/.
@endwhile
@beginskip
INSTALL_LOG/$(pre)vMMRES : $(MMTdir)/res/$(pre)vMMRES
	cd $(MMTdir) ; $(MAKE) res/$(pre)vMMRES pre=$(pre)
	cd $(MMTdir) ; $(MAKE) vinstall pre=$(pre)
	cp $(MMTdir)/res/$(pre)vMMRES INSTALL_LOG/.
	cp $(INCAdir)/atlas_$(pre)vkbmms*.h INSTALL_LOG/.
INSTALL_LOG/atlas_$(pre)rkXover.h : $(INCAdir)/atlas_$(pre)rkXover.h
	if [ -s "$(INCAdir)/atlas_$(pre)rkXover.h" ]; then \
           $(MAKE) $(pre)kbmmlib pre=$(pre) ; \
        else \
	   cd $(BINdir) ; $(MAKE) x$(pre)mmtst_rkX ; \
	   ./x$(pre)mmtst_rkX -o $(INCAdir)/atlas_$(pre)rkXover.h ; \
        fi
	cp $(INCAdir)/atlas_$(pre)rkXover.h INSTALL_LOG/.
@endskip
@beginskip
ammuse = $(INCAdir)/atlas_$(pre)amm_use.h
AMM_use:
	- rm -f $(ammuse)
	echo "#ifndef ATLAS_$(pre)AMM_USE_H" > $(ammuse)
	echo "   #define ATL_USE_AMM 1" >> $(ammuse)
	echo "#endif" >> $(ammuse)
AMM_disable:
	- rm -f $(ammuse)
	touch $(ammuse)
@endskip
cAMMinstall:
@skip	cd $(MMTdir) ; $(MAKE) $(pre)install_amm
	cp $(MMTdir)/res/$(pre)geAMMRES.sum INSTALL_LOG/.
	cd $(AMMdir) ; make $(pre)lib
AMMinstall:
	cd $(MMTdir) ; $(MAKE) $(pre)install_amm
	cp $(MMTdir)/res/$(pre)geAMMRES.sum INSTALL_LOG/.
	cd $(AMMdir) ; make $(pre)lib
MMinstall :
	cd $(MMTdir) ; $(MAKE) $(pre)install
$(MMTdir)/res/atlas_cachedge.h :
	cd $(MMTdir) ; $(MAKE) res/atlas_cacheedge.h pre=$(pre)
INSTALL_LOG/atlas_cacheedge.h : $(MMTdir)/res/atlas_cachedge.h
	cp $(MMTdir)/res/atlas_cacheedge.h $(INCAdir)/.
	cp $(MMTdir)/res/atlas_cacheedge.h INSTALL_LOG/.
$(MMTdir)/res/atlas_zdNKB.h :
	cd $(MMTdir) ; $(MAKE) res/atlas_zdNKB.h
$(MMTdir)/res/atlas_csNKB.h :
	cd $(MMTdir) ; $(MAKE) res/atlas_csNKB.h
INSTALL_LOG/atlas_zdNKB.h : $(MMTdir)/res/atlas_zdNKB.h
	cp $(MMTdir)/res/atlas_zdNKB.h $(INCAdir)/.
	cp $(MMTdir)/res/atlas_zdNKB.h INSTALL_LOG/.
INSTALL_LOG/atlas_csNKB.h : $(MMTdir)/res/atlas_csNKB.h
	cp $(MMTdir)/res/atlas_csNKB.h $(INCAdir)/.
	cp $(MMTdir)/res/atlas_csNKB.h INSTALL_LOG/.

Il3lib : force_build
	cd $(L3Bdir) ; $(MAKE) $(pre)lib

xluflops : $(mySRCdir)/luflops.c $(INCSdir)/atlas_genparse.h
	$(KC) $(KCFLAGS) -o $@ $(mySRCdir)/luflops.c
auxlib : force_build
	cd $(AUXdir) ; $(MAKE) lib
auxlib_pt : force_build
	cd $(AUXdir) ; $(MAKE) ptlib

xprint_buildinfo : $(mySRCdir)/print_buildinfo.c
	$(KC) $(KCFLAGS) -o $@ $(mySRCdir)/print_buildinfo.c $(ATLASlib)
xdlp1000: ftime00.o dlp1000.o dlapack dl3lib dl2lib dl1lib dcblas dfblas
	$(FLINKER) $(FLINKFLAGS) -o $@ dlp1000.o ftime00.o \
	$(LAPACKlib) $(CBLASlib) $(F77BLASlib) $(ATLASlib) $(LIBS)
ftime00.o : $(mySRCdir)/ftime00.c
	$(KC) -o $@ -c $(KCFLAGS) $(mySRCdir)/ftime00.c
dlp1000.o : $(mySRCdir)/dlp1000.f
	$(F77) -o $@ -c $(FFLAGS) $(mySRCdir)/dlp1000.f

sanity_test: 
	rm -f sanity.out
	$(MAKE) ssanity_test dsanity_test csanity_test zsanity_test
ptsanity_test:
	rm -f ptsanity.out
	$(MAKE) ssanity_test_pt dsanity_test_pt csanity_test_pt zsanity_test_pt

shared: shared.grd
ptshared: ptshared.grd
ptshared.grd :
@skip	if [ -e shared.grd ] ; then \
@skip           $(MAKE) killshared ;\
@skip        fi
	cd $(LIBdir) : make ptshared
@skip	touch ptshared.grd
shared.grd :
@skip	if [ -e ptshared.grd ] ; then \
@skip           $(MAKE) killshared ;\
@skip        fi
	cd $(LIBdir) ; make shared
@skip	touch shared.grd
killshared:
	rm -f $(LIBdir)/libatlas.so $(LIBdir)/libcatlas.so \
              shared.grd ptshared.grd

xtestGAC: ptauxlib $(INCSdir)/atlas_gatmctr.h $(mySRCdir)/testAC.c
	$(KC) $(KCFLAGS) -DTEST_GLOBAL -o $@ $(mySRCdir)/testAC.c \
              $(ATLASlib) $(LIBS)
xtestAC: ptauxlib $(INCSdir)/atlas_gatmctr.h $(mySRCdir)/testAC.c
	$(KC) $(KCFLAGS) -o $@ $(mySRCdir)/testAC.c $(ATLASlib) $(LIBS)
xtestBV : auxlib $(INCSdir)/atlas_bitvec.h $(mySRCdir)/testBV.c
	$(KC) $(KCFLAGS) -o $@ $(mySRCdir)/testBV.c $(ATLASlib) $(LIBS)
ptauxlib: auxlib
	cd $(BLDdir)/src/auxil ; $(MAKE) ptlib
	cd $(BLDdir)/src/threads ; $(MAKE) lib
xttestBV : ptauxlib $(INCSdir)/atlas_bitvec.h $(mySRCdir)/testtBV.c
	$(KC) $(KCFLAGS) -o $@ $(mySRCdir)/testtBV.c $(ATLASlib) $(LIBS)
@whiledef pre d s
x@(pre)lamchtest : $(mySRCdir)/@(pre)lamchtest.f $(FLAPACKlib) $(ATLASlib)
	$(F77) $(F77FLAGS) $(F77NOOPT) -o $@ $(mySRCdir)/@(pre)lamchtest.f \
               $(FLAPACKlib) $(ATLASlib)
@endwhile
@multidef upr d s d s
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @whiledef rt gelstest
x@(pre)@(rt) : $(mySRCdir)/@(pre)@(rt).f90 $(FLAPACKlib) $(ATLASlib)
	$(F77) $(F77FLAGS) -o $@ $(mySRCdir)/@(pre)@(rt).f90 \
               $(FLAPACKlib) $(LAPACKlib) $(F77BLASlib) $(CBLASlib) $(ATLASlib)
   @endwhile rt
   @whiledef rt qrtranstest transtest ger2test scltest
x@(pre)@(rt) : $(mySRCdir)/@(pre)@(rt).f90 $(FLAPACKlib) $(ATLASlib)
	$(F77) $(F77FLAGS) -o $@ $(mySRCdir)/@(pre)@(rt).f90 \
               $(FLAPACKlib) $(F77BLASlib) $(CBLASlib) $(ATLASlib)
   @endwhile rt
   @define suf @@
   @define suf @_pt@
   @define pt @@
   @whiledef pt PT
x@(pre)l1blastst@(suf)_dyn : @(pre)l1blastst@(suf).o @(pre)l1lib@(suf) @(pre)tstlib@(suf) @(pt)shared
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l1blastst@(suf).o \
                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
x@(pre)l2blastst@(suf)_dyn : @(pre)l2blastst@(suf).o @(pre)l2lib@(suf) @(pre)tstlib@(suf) @(pt)shared
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l2blastst@(suf).o \
                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
x@(pre)l3blastst@(suf)_dyn : $(INCAdir)/atlas_type.h @(pre)l3blastst@(suf).o \
                   @(pre)tstlib@(suf) @(pre)l3lib@(suf) @(pt)shared
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3blastst@(suf).o \
                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
   @whiledef rt lu llt slv uum trtri inv qr orm
x@(pre)@(rt)_all@(suf)_dyn : x@(pre)@(rt)tst@(suf) x@(pre)@(rt)tstF@(suf) \
                   x@(pre)@(rt)tst_sys@(suf) x@(pre)@(rt)tstF_sys@(suf) @(pt)shared

x@(pre)@(rt)tst@(suf)_dyn : @(pre)@(rt)tst@(suf).o @(pre)lapack @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf) @(pt)shared
	rm -f @(pre)@(rt)tst@(suf).o
	$(MAKE) @(pre)@(rt)tst@(suf).o
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tst@(suf).o \
                   $(TESTlib) $(LIBdir)/liblapack.so \
                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
x@(pre)@(rt)tstF@(suf)_dyn : @(pre)@(pt)lapack @(pre)tstlib@(suf) @(pre)l3lib@(suf) @(pre)l2lib@(suf) \
                   @(pre)l1lib@(suf) @(pre)cblas@(suf) @(pre)fblas@(suf) @(pt)shared
	rm -f @(pre)@(rt)tst@(suf).o
	$(MAKE) @(pre)@(rt)tst@(suf).o intf=-DTimeF77
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tst@(suf).o \
                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
   @endwhile
x@(pre)mmtst@(suf)_dyn : $(INCAdir)/atlas_type.h @(pre)gemmtst@(suf).o @(pre)mmlib@(suf) @(pre)tstlib@(suf) @(pt)shared
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst@(suf).o \
              $(TESTlib) $(@(pre)mmobj) $(LIBdir)/libf77blas.so \
              $(LIBdir)/libcblas.so $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)

   @undef suf
   @endwhile

   @define suf @_pt@
x@(pre)l1blastst_mike : @(pre)l1blastst_mike.o @(pre)l1lib@(suf) @(pre)tstlib@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l1blastst_mike.o $(MIKElib) \
                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
x@(pre)l2blastst_mike : @(pre)l2blastst@(suf).o @(pre)l2lib@(suf) @(pre)tstlib@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l2blastst_mike.o $(MIKElib) \
                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
x@(pre)l3blastst_mike : $(INCAdir)/atlas_type.h @(pre)l3blastst@(suf).o \
                   @(pre)tstlib@(suf) @(pre)l3lib@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3blastst_mike.o $(MIKElib) \
                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
   @undef suf

@(pre)tstlib_tb : @(pre)tstlib_pt
@(pre)tstlib_sb : @(pre)tstlib
@whiledef lvl 3 2 1
@(pre)l@(lvl)lib_sb : @(pre)l@(lvl)lib
@(pre)l@(lvl)lib_pb : @(pre)l@(lvl)lib_pt
@endwhile
#
# Ugly renaming of old system to new; new is <pre>[t,s]name, where
# 't' is threaded and 's' is serial
#
@(pre)slapack : @(pre)lapack
@skip @(pre)tlapack : @(pre)lapack_pt
@(pre)sl3lib : @(pre)l3lib
@(pre)tl3lib : @(pre)l3lib_pt
@(pre)sl2lib : @(pre)l2lib
@(pre)tl2lib : @(pre)l2lib_pt
@(pre)sl1lib : @(pre)l1lib
@(pre)tl1lib : @(pre)l1lib_pt
@(pre)ststlib : @(pre)tstlib
@(pre)ttstlib : @(pre)tstlib_pt
@(pre)sfblas : @(pre)fblas
@(pre)tfblas : @(pre)fblas_pt
@(pre)scblas : @(pre)cblas
@(pre)tcblas : @(pre)cblas_pt

@whiledef l 1 2 3
x@(pre)tsl@(l)time : @(pre)tsl@(l)time.o @(pre)ststlib @(pre)sl@(l)lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tsl@(l)time.o \
                   $(TESTlib) $(F77BLASlib) $(ATLASlib) $(LIBS)
@endwhile
x@(pre)sl1time_ab : @(pre)l1time.o @(pre)ststlib @(pre)sl1lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l1time.o \
                   $(TESTlib) $(F77BLASlib) $(ATLASlib) $(LIBS)
x@(pre)tl1time_ab : @(pre)tl1time.o @(pre)ttstlib @(pre)tl1lib @(pre)tfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tl1time.o \
                   $(TESTlib) $(PTF77BLASlib) $(ATLASlib) $(LIBS)
x@(pre)sl3time_ab : @(pre)l3time.o @(pre)ststlib \
      @(pre)sl3lib @(pre)sl2lib @(pre)sl1lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3time.o \
                   $(TESTlib) $(F77BLASlib) $(ATLASlib) $(LIBS)
x@(pre)tl3time_ab : @(pre)tl3time.o @(pre)ttstlib \
      @(pre)tl3lib @(pre)tl2lib @(pre)tl1lib @(pre)tfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tl3time.o \
                   $(TESTlib) $(PTF77BLASlib) $(ATLASlib) $(LIBS)

x@(pre)sl1time_sb : @(pre)l1time.o @(pre)ststlib @(pre)sl1lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l1time.o \
                   $(TESTlib) $(SBLASlib) $(ATLASlib) $(LIBS)
x@(pre)tl1time_sb : @(pre)tl1time.o @(pre)ttstlib @(pre)tl1lib @(pre)tfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tl1time.o \
                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
x@(pre)sl3time_sb : @(pre)l3time.o @(pre)ststlib \
      @(pre)sl3lib @(pre)sl2lib @(pre)sl1lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3time.o \
                   $(TESTlib) $(SBLASlib) $(ATLASlib) $(LIBS)
x@(pre)tl3time_sb : @(pre)tl3time.o @(pre)ttstlib \
      @(pre)tl3lib @(pre)tl2lib @(pre)tl1lib @(pre)tfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tl3time.o \
                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
#
# Default lanbtime, calls ATLAS's internal iface
#
x@(pre)slatime : @(pre)latime.o @(pre)slapack @(pre)ststlib \
      @(pre)sl3lib @(pre)sl2lib @(pre)sl1lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)latime.o \
                   $(TESTlib) $(LAPACKlib) $(CBLASlib) \
                   $(F77BLASlib) $(ATLASlib) $(LIBS)
x@(pre)tlatime : @(pre)tlatime.o @(pre)tlapack @(pre)ttstlib \
      @(pre)tl3lib @(pre)tl2lib @(pre)tl1lib @(pre)tfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tlatime.o \
                   $(TESTlib) $(PTLAPACKlib) $(PTCBLASlib) \
                   $(PTF77BLASlib) $(ATLASlib) $(LIBS)
#
# latime for timing Rakib's block cyclic amm LU
#
@(pre)bcamm :
	cd $(BLDdir)/src/threads/lapack/amm ; $(MAKE) @(pre)lib
x@(pre)tlatime_bcamm : @(pre)tlatime_bcamm.o @(pre)tlapack @(pre)ttstlib \
      @(pre)tl3lib @(pre)tl2lib @(pre)tl1lib @(pre)tfblas @(pre)bcamm
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tlatime_bcamm.o \
                   $(TESTlib) $(PTLAPACKlib) $(LAPACKlib) $(CBLASlib) \
                   $(F77BLASlib) $(UAMMlib) $(ATLASlib) $(LIBS)
x@(pre)tlutst_bcamm : @(pre)tlutst_bcamm.o @(pre)tlapack @(pre)ttstlib \
      @(pre)tl3lib @(pre)tl2lib @(pre)tl1lib @(pre)tfblas @(pre)bcamm
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tlutst_bcamm.o \
                   $(TESTlib) $(PTLAPACKlib) $(LAPACKlib) $(CBLASlib) \
                   $(F77BLASlib) $(UAMMlib) $(ATLASlib) $(LIBS)

@(pre)tlutst_bcamm.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -D@(typ) \
              -DTimeBCAMM $(mySRCdir)/lutst.c
x@(pre)luflops_amm : @(pre)bcamm $(INCAdir)/atlas_@(upr)u0amm_blk.h \
                $(INCAdir)/atlas_@(upr)u0amm_perf.h $(mySRCdir)/luflops.c
	$(KC) $(KCFLAGS) -o $@ -D@(typ) -DUSEH=1 $(mySRCdir)/luflops.c
#
# Targets for building latime with the F77 iface, using ATLAS, system,
# or F77 BLAS and LAPACK in serial and parallel
#
# ATLAS-ATLAS
x@(pre)slatime_al_ab : @(pre)latimeF.o @(pre)slapack @(pre)ststlib \
      @(pre)sl3lib @(pre)sl2lib @(pre)sl1lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)latimeF.o \
                   $(TESTlib) $(LAPACKlib) $(CBLASlib) \
                   $(F77BLASlib) $(ATLASlib) $(LIBS)
x@(pre)tlatime_al_ab : @(pre)tlatimeF.o @(pre)tlapack @(pre)ttstlib \
      @(pre)tl3lib @(pre)tl2lib @(pre)tl1lib @(pre)tfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tlatimeF.o \
                   $(TESTlib) $(PTLAPACKlib) $(PTCBLASlib) \
                   $(PTF77BLASlib) $(ATLASlib) $(LIBS)
# ATLAS2-ATLAS2 (to compare against competing ATLAS install)
x@(pre)slatime_2l_2b : @(pre)latimeF.o @(pre)ststlib 
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)latimeF.o \
                   $(TESTlib) $(AT2dir)/liblapack.a $(AT2dir)/libcblas.a \
                   $(AT2dir)/libf77blas.a $(AT2dir)/libatlas.a $(LIBS)
x@(pre)tlatime_2l_2b : @(pre)tlatimeF.o @(pre)ttstlib 
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tlatimeF.o \
                   $(TESTlib) $(AT2dir)/libptlapack.a $(AT2dir)/libptcblas.a \
                   $(AT2dir)/libptf77blas.a $(AT2dir)/libatlas.a $(LIBS)
# F77-ATLAS
x@(pre)slatime_fl_ab : @(pre)latimeF.o @(pre)slapack @(pre)ststlib \
      @(pre)sl3lib @(pre)sl2lib @(pre)sl1lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)latimeF.o \
                   $(TESTlib) $(FLAPACKlib) $(CBLASlib) \
                   $(F77BLASlib) $(ATLASlib) $(LIBS)
x@(pre)tlatime_fl_ab : @(pre)tlatimeF.o @(pre)tlapack @(pre)ttstlib \
      @(pre)tl3lib @(pre)tl2lib @(pre)tl1lib @(pre)tfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tlatimeF.o \
                   $(TESTlib) $(FLAPACKlib) $(PTCBLASlib) \
                   $(PTF77BLASlib) $(ATLASlib) $(LIBS)
# System-system; CBLASlib in there since tester can call that iface
x@(pre)slatime_sl_sb : @(pre)latimeF.o @(pre)slapack @(pre)ststlib \
      @(pre)sl3lib @(pre)sl2lib @(pre)sl1lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)latimeF.o \
                   $(TESTlib) $(SSLAPACKlib) $(SBLASlib) $(CBLASlib) \
                   $(ATLASlib) $(LIBS)
x@(pre)tlatime_sl_sb : @(pre)tlatimeF.o @(pre)tlapack @(pre)ttstlib \
      @(pre)tl3lib @(pre)tl2lib @(pre)tl1lib @(pre)tfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tlatimeF.o \
                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(CBLASlib) \
                   $(ATLASlib) $(LIBS)
# F77-system
x@(pre)slatime_fl_sb : @(pre)latimeF.o @(pre)slapack @(pre)ststlib \
      @(pre)sl3lib @(pre)sl2lib @(pre)sl1lib @(pre)sfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)latimeF.o \
                   $(TESTlib) $(FLAPACKlib) $(SBLASlib) $(CBLASlib) \
                   $(ATLASlib) $(LIBS)
x@(pre)tlatime_fl_sb : @(pre)tlatimeF.o @(pre)tlapack @(pre)ttstlib \
      @(pre)tl3lib @(pre)tl2lib @(pre)tl1lib @(pre)tfblas
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)tlatimeF.o \
                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(CBLASlib) \
                   $(ATLASlib) $(LIBS)

@whiledef l 1 2 3
@(pre)tsl@(l)time.o : $(mySRCdir)/l@(l)time_pt.c $(INCSdir)/atlas_misc.h \
                  $(INCSdir)/atlas_level@(l).h 
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) $(mySRCdir)/l@(l)time_pt.c
@endwhile
@(pre)l1time.o : $(mySRCdir)/l1time.c $(INCSdir)/atlas_misc.h \
                  $(INCSdir)/atlas_level1.h 
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) $(mySRCdir)/l1time.c
@(pre)tl1time.o : $(mySRCdir)/l1time.c $(INCSdir)/atlas_misc.h \
                  $(INCSdir)/atlas_level1.h 
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) -DATL_USEPTHREADS=1 \
                 $(mySRCdir)/l1time.c
@(pre)l3time.o : $(mySRCdir)/l3time.c $(INCSdir)/atlas_misc.h \
                  $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) $(mySRCdir)/l3time.c
@(pre)tl3time.o : $(mySRCdir)/l3time.c $(INCSdir)/atlas_misc.h \
                  $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) -DATL_USEPTHREADS=1 \
                 $(mySRCdir)/l3time.c
@(pre)latimeF.o : $(mySRCdir)/latime.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DTimeF77  -D@(typ) $(mySRCdir)/latime.c
@(pre)latimeC.o : $(mySRCdir)/latime.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DTimeC  -D@(typ) $(mySRCdir)/latime.c
@(pre)latime.o : $(mySRCdir)/latime.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) $(mySRCdir)/latime.c
@(pre)tlatimeF.o : $(mySRCdir)/latime.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATL_USEPTHREADS=1 -DTimeF77 \
              -D@(typ) $(mySRCdir)/latime.c
@(pre)tlatimeC.o : $(mySRCdir)/latime.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DTimeC  -DATL_USEPTHREADS=1 -D@(typ) \
                 $(mySRCdir)/latime.c
@(pre)tlatime.o : $(mySRCdir)/latime.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATL_USEPTHREADS=1 -D@(typ) \
                 $(mySRCdir)/latime.c
@(pre)tlatime_bcamm.o : $(mySRCdir)/latime.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DTimeBCAMM  -DATL_USEPTHREADS=1 -D@(typ) \
                 $(mySRCdir)/latime.c

@(pre)ammlp:
	cd $(BLDdir)/src/lapack/amm ; make ilib @(pre)lib
@(pre)tammlp:
	cd $(BLDdir)/src/threads/lapack/amm ; make ilib @(pre)lib
@(pre)swptst_amm.o : $(mySRCdir)/ammswptst.c $(INCSdir)/atlas_misc.h \
                    $(INCSdir)/atlas_lvl3.h
	$(KC) -o $@ -c $(KCFLAGS)  $(intf) -DAMMIDX=$(ammidx) -D@(typ) \
               $(mySRCdir)/ammswptst.c
x@(pre)swptst_amm : @(pre)swptst_amm.o @(pre)ammlp @(pre)tammlp
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)swptst_amm.o \
                   $(TESTlib) $(PTLAPACKlib) $(LAPACKlib) $(CBLASlib) \
                   $(F77BLASlib) $(UAMMlib) $(ATLASlib) $(LIBS)
@(pre)lutst_amm.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
                    $(INCSdir)/atlas_lvl3.h
	$(KC) -o $@ -c $(KCFLAGS)  $(intf) -DAMMIDX=$(ammidx) -D@(typ) \
               $(mySRCdir)/lutst.c
@(pre)lu_amm:
	cd $(BLDdir)/src/lapack ; make ATL_@(pre)getrf_amm.o 
x@(pre)lutst_amm : @(pre)lutst_amm.o @(pre)lapack @(pre)tstlib @(pre)l3lib \
                  @(pre)l2lib @(pre)l1lib @(pre)cblas @(pre)lu_amm 
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)lutst_amm.o \
                  $(BLDdir)/src/lapack/ATL_@(pre)getrf_amm.o \
                   $(TESTlib) $(LAPACKlib) $(CBLASlib) \
                   $(F77BLASlib) $(UAMMlib) $(ATLASlib) $(LIBS)
@(pre)cblas_sb : @(pre)cblas
@(pre)cblas_tb : @(pre)cblas_pt
@(pre)lapack_sl : @(pre)lapack
@(pre)lapack_al : @(pre)lapack_pt
   @define ptb @@
   @define ptb @PT@
   @whiledef bt sb tb
      @define suf @@
      @define suf @_pt@
      @define ptl @@
      @define ptl @PT@
      @whiledef lt sl tl
         @whiledef rt lu llt slv uum trtri inv qr orm
# All ATLAS libs, C interface to lapack
x@(pre)@(rt)tst_@(lt)_@(bt) : @(pre)@(rt)tstC@(suf).o @(pre)lapack_@(lt) @(pre)tstlib_@(bt) @(pre)l3lib_@(bt) \
                  @(pre)l2lib_@(bt) @(pre)l1lib_@(bt) @(pre)cblas_@(bt)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tstC@(suf).o \
                   $(TESTlib) $(@(ptl)LAPACKlib) $(@(ptb)CBLASlib) $(@(ptb)F77BLASlib) \
                   $(ATLASlib) $(LIBS)
         @endwhile
         @undef suf
         @undef ptl
      @endwhile
      @undef ptb
   @endwhile
   @define suf @@
   @define suf @_pt@
   @define pt @@
   @multidef blas $(SBLASlib) $(BLASlib)
   @multidef mm 83  517
   @multidef nn 167 477
   @whiledef pt PT
x@(pre)l1blastst@(suf) : @(pre)l1blastst@(suf).o @(pre)l1lib@(suf) @(pre)tstlib@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l1blastst@(suf).o \
                   $(TESTlib) @(blas) $(ATLASlib) $(LIBS)
x@(pre)l2blastst@(suf) : @(pre)l2blastst@(suf).o @(pre)l2lib@(suf) @(pre)tstlib@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l2blastst@(suf).o \
                   $(TESTlib) @(blas) $(ATLASlib) $(LIBS)
x@(pre)l3blastst@(suf) : $(INCAdir)/atlas_type.h @(pre)l3blastst@(suf).o \
                   @(pre)tstlib@(suf) @(pre)l3lib@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3blastst@(suf).o \
                   $(TESTlib) @(blas) $(ATLASlib) $(LIBS)
@declare "@(pre)sanity_test@(suf): " y y
   @whiledef rt slv uum trtri inv qr
      x@(pre)@(rt)tst@(suf)
   @endwhile
@enddeclare
	$(ATLRUN) $(BINdir) x@(pre)slvtst@(suf) -n @(nn) -r @(mm) -O 2 c r \
                  >> $(BINdir)/@low@(pt)sanity.out
	$(ATLRUN) $(BINdir) x@(pre)slvtst@(suf) -n @(nn) -r @(mm) -O 2 c r -U 2 u l \
                  >> $(BINdir)/@low@(pt)sanity.out
	$(ATLRUN) $(BINdir) x@(pre)qrtst@(suf) -n 1 @(nn) -m 1 @(mm) -U 2 u l \
                  -S 2 r l >> $(BINdir)/@low@(pt)sanity.out
	$(ATLRUN) $(BINdir) x@(pre)trtritst@(suf) -n @(nn)  -O 2 c r -U 2 u l \
                  -D 2 n u >> $(BINdir)/@low@(pt)sanity.out
	$(ATLRUN) $(BINdir) x@(pre)uumtst@(suf) -n @(nn) -O 2 c r -U 2 u l \
                  >> $(BINdir)/@low@(pt)sanity.out

   @whiledef rt lu llt slv uum trtri inv lanb qr orm
# All ATLAS libs, C interface only; link in f77 blas for F2C routs
x@(pre)@(rt)tst@(suf) : @(pre)@(rt)tst@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tst@(suf).o \
                   $(TESTlib) $(@(pt)LAPACKlib) $(@(pt)CBLASlib) $(@(pt)F77BLASlib) \
                   $(ATLASlib) $(LIBS)
# All ATLAS libs, C interface to lapack
x@(pre)@(rt)tstC@(suf) : @(pre)@(rt)tstC@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tstC@(suf).o \
                   $(TESTlib) $(@(pt)LAPACKlib) $(@(pt)CBLASlib) $(@(pt)F77BLASlib) \
                   $(ATLASlib) $(LIBS)
# All ATLAS libs, F77 interface to lapack
x@(pre)@(rt)tstF@(suf) : @(pre)@(rt)tstF@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tstF@(suf).o \
                   $(TESTlib) $(@(pt)LAPACKlib) $(@(pt)CBLASlib) $(@(pt)F77BLASlib) \
                   $(ATLASlib) $(LIBS)
# ATLAS lapack, system BLAS, C interface
x@(pre)@(rt)tst_sb@(suf) : @(pre)@(rt)tst@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tst@(suf).o \
                   $(TESTlib) $(@(pt)LAPACKlib) @(blas) \
                   $(@(pt)CBLASlib) $(ATLASlib) $(LIBS)
# ATLAS lapack, system BLAS, F77 interface to lapack
x@(pre)@(rt)tstF_sb@(suf) : @(pre)@(rt)tstF@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tstF@(suf).o \
                   $(TESTlib) $(@(pt)LAPACKlib) @(blas) \
                   $(@(pt)CBLASlib) $(ATLASlib) $(LIBS)
# System lapack, system BLAS, F77 interface to lapack
x@(pre)@(rt)tstF_sl_sb@(suf) : @(pre)@(rt)tstF@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tstF@(suf).o \
                   $(TESTlib) $(SLAPACKlib) @(blas) $(ATLASlib) $(LIBS)
# System lapack, ATLAS BLAS, F77 interface to lapack
x@(pre)@(rt)tstF_sl_ab@(suf) : @(pre)@(rt)tstF@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tstF@(suf).o \
                   $(TESTlib) $(SLAPACKlib) $(@(pt)F77BLASlib) \
                   $(@(pt)CBLASlib) $(ATLASlib) $(LIBS)
# F77lapack, ATLAS BLAS, F77 interface to lapack
x@(pre)@(rt)tstF_fl_ab@(suf) : @(pre)@(rt)tstF@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tstF@(suf).o \
                   $(TESTlib) $(FLAPACKlib) $(@(pt)F77BLASlib) \
                   $(@(pt)CBLASlib) $(ATLASlib) $(LIBS)
# F77lapack, system BLAS, F77 interface to lapack
x@(pre)@(rt)tstF_fl_sb@(suf) : @(pre)@(rt)tstF@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tstF@(suf).o \
                   $(TESTlib) $(FLAPACKlib) @(blas) $(ATLASlib) $(LIBS)
# F77lapack, F77BLAS, F77 interface to lapack
x@(pre)@(rt)tstF_fl_fb@(suf) : @(pre)@(rt)tstF@(suf).o @(pre)lapack@(suf) @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tstF@(suf).o \
                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
                   $(@(pt)CBLASlib) $(ATLASlib) $(LIBS)

x@(pre)@(rt)_all@(suf) : x@(pre)@(rt)tst@(suf) x@(pre)@(rt)tstF@(suf) \
                   x@(pre)@(rt)tst_sb@(suf) x@(pre)@(rt)tstF_sys@(suf) \
                   x@(pre)@(rt)tst_sb@(suf) x@(pre)@(rt)tstF_sl_sb@(suf) \
                   x@(pre)@(rt)tstF_fl_ab@(suf) x@(pre)@(rt)tstF_sl_ab@(suf) \
                   x@(pre)@(rt)tstF_fl_fb@(suf) x@(pre)@(rt)tstF_fl_sb@(suf)
   @endwhile
x@(pre)mmtst@(suf) : $(INCAdir)/atlas_type.h @(pre)gemmtst@(suf).o @(pre)mmlib@(suf) @(pre)tstlib@(suf)
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst@(suf).o \
              $(TESTlib) @(blas) $(@(pre)mmobj) $(ATLASlib) $(LIBS)

   @undef blas
   @undef mm
   @undef nn
   @undef suf
   @endwhile
#
#  These symbols are for timing, and time the same routine twice: atlas/sys
#
x@(pre)l3blastst_sys : $(INCAdir)/atlas_type.h @(pre)l3blastst_f77.o @(pre)tstlib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3blastst_f77.o $(TESTlib) \
                   $(SBLASlib) $(ATLASlib) $(LIBS)
x@(pre)l3blastst_sys_pt : $(INCAdir)/atlas_type.h @(pre)l3blastst_f77_pt.o \
   @(pre)tstlib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3blastst_f77.o $(TESTlib) \
                   $(BLASlib) $(ATLASlib) $(LIBS)
x@(pre)l3blastst_atl : $(INCAdir)/atlas_type.h @(pre)l3blastst_f77.o \
   @(pre)tstlib @(pre)l3lib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3blastst_f77.o $(TESTlib) \
                   $(F77BLASlib) $(ATLASlib) $(LIBS)
x@(pre)l3blastst_atl_pt : $(INCAdir)/atlas_type.h @(pre)l3blastst_f77_pt.o \
   @(pre)tstlib_pt @(pre)l3lib_pt
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3blastst_f77.o $(TESTlib) \
                   $(PTF77BLASlib) $(ATLASlib) $(LIBS)
x@(pre)l3blastst_at2 : $(INCAdir)/atlas_type.h @(pre)l3blastst_f77.o \
   @(pre)tstlib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3blastst_f77.o $(TESTlib) \
                   $(AT2dir)/libf77blas.a $(AT2dir)/libatlas.a $(LIBS)
x@(pre)l3blastst_at2_pt : $(INCAdir)/atlas_type.h @(pre)l3blastst_f77_pt.o \
   @(pre)tstlib_pt
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)l3blastst_f77.o $(TESTlib) \
                   $(AT2dir)/libptf77blas.a $(AT2dir)/libatlas.a $(LIBS)
x@(pre)mmtst_sys : $(INCAdir)/atlas_type.h @(pre)gemmtst_f77.o @(pre)tstlib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_f77.o $(TESTlib) \
                   $(SBLASlib) $(ATLASlib) $(LIBS)
x@(pre)mmtst_atl : $(INCAdir)/atlas_type.h @(pre)gemmtst_f77.o @(pre)mmlib @(pre)tstlib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_f77.o $(TESTlib) \
                   $(F77BLASlib) $(ATLASlib) $(LIBS)

x@(pre)mmtst_atl_pt : $(INCAdir)/atlas_type.h @(pre)gemmtst_f77_pt.o @(pre)mmlib_pt @(pre)tstlib_pt
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_f77_pt.o $(TESTlib) \
                   $(PTF77BLASlib) $(ATLASlib) $(LIBS)

x@(pre)mmtst_at2 : @(pre)gemmtst_f77_pt.o @(pre)tstlib_pt
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_f77_pt.o $(TESTlib) \
                   $(AT2dir)/libf77blas.a $(AT2dir)/libatlas.a $(LIBS)
x@(pre)mmtst_at2_pt : @(pre)gemmtst_f77_pt.o @(pre)tstlib_pt
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_f77_pt.o $(TESTlib) \
                   $(AT2dir)/libptf77blas.a $(AT2dir)/libatlas.a $(LIBS)
x@(pre)mmtst_sys_pt : $(INCAdir)/atlas_type.h @(pre)gemmtst_f77_pt.o @(pre)tstlib_pt
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_f77_pt.o $(TESTlib) \
                   $(BLASlib) $(ATLASlib) $(LIBS)

@whiledef rt gemmtst l3blastst
@(pre)@(rt)_f77.o : $(mySRCdir)/@(rt).c $(INCSdir)/atlas_misc.h \
                  $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h
	$(KC) -o $@ -c $(KCFLAGS) -DTEST_F77=1 -D@(typ) $(mySRCdir)/@(rt).c
@(pre)@(rt)_f77_pt.o : $(mySRCdir)/@(rt).c $(INCSdir)/atlas_misc.h \
                  $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h
	$(KC) -o $@ -c $(KCFLAGS) -DATL_USEPTHREADS -DTEST_F77=1 \
               -D@(typ) $(mySRCdir)/@(rt).c
@endwhile

noaffobj = ATL_goparallel_noaf.o ATL_dyntlaunch_noaf.o \
           ATL_log2tlaunch_noaf.o ATL_thread_start_noaf.o
noaffobjd = $(BLDdir)/tune/threads/ATL_goparallel_noaf.o \
            $(BLDdir)/tune/threads/ATL_dyntlaunch_noaf.o \
            $(BLDdir)/tune/threads/ATL_log2tlaunch_noaf.o \
            $(BLDdir)/tune/threads/ATL_thread_start_noaf.o 

x@(pre)mmtst_noaff : $(INCAdir)/atlas_type.h @(pre)gemmtst_noaff.o \
   @(pre)mmlib_pt @(pre)tstlib_pt noaff_pt
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_noaff.o $(noaffobjd) \
              $(TESTlib) $(BLASlib) $(@(pre)mmobj) $(ATLASlib) $(LIBS)
@(pre)gemmtst_noaff.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
                  $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h
	$(KC) -o $@ -c $(KCFLAGS) -DATL_USEPTHREADS -DATL_NOAFFINITY=1 \
               -D@(typ) $(mySRCdir)/gemmtst.c

x@(pre)mmtst_aff : $(INCAdir)/atlas_type.h @(pre)gemmtst_aff.o @(pre)mmlib_pt \
              @(pre)tstlib_pt
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_aff.o \
                   $(TESTlib) $(BLASlib) $(@(pre)mmobj) $(ATLASlib) $(LIBS)
IRun_@(pre)bigmm : x@(pre)sl3time_ab
	- rm -f ../big.out
	$(ATLRUN) $(BINdir) x@(pre)sl3time_ab -n 1 $(nb) > ../big.out
x@(pre)mmtst_big : $(INCAdir)/atlas_type.h @(pre)gemmtst_big.o @(pre)mmlib \
              @(pre)tstlib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_big.o \
                   $(TESTlib) $(BLASlib) $(@(pre)mmobj) $(ATLASlib) $(LIBS)
x@(pre)mmtst_amm2 : $(INCAdir)/atlas_type.h @(pre)gemmtst_amm2.o @(pre)mmlib \
              @(pre)tstlib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_amm2.o \
                   $(TESTlib) $(BLASlib) $(@(pre)mmobj) $(ATLASlib) $(LIBS)
x@(pre)mmtst_amm : $(INCAdir)/atlas_type.h @(pre)gemmtst_amm.o @(pre)mmlib \
              @(pre)tstlib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gemmtst_amm.o \
                   $(TESTlib) $(BLASlib) $(@(pre)mmobj) $(ATLASlib) $(LIBS)
$(MMTdir)/res/@(pre)vMMRES :
	cd $(MMTdir) ; make res/@(pre)vMMRES
	cd $(MMTdir) ; make vinstall pre=@(pre)
x@(pre)gpmmtst : $(INCAdir)/atlas_type.h @(pre)gpmmtst.o @(pre)mmlib @(pre)tstlib
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)gpmmtst.o \
              $(TESTlib) $(BLASlib) $(@(pre)mmobj) $(ATLASlib) $(LIBS)
@(pre)gpmmtst.o : $(mySRCdir)/gpmmtst.c $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_@(pre)amm_sum.h \
                  $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_pkblas.h
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) $(mySRCdir)/gpmmtst.c
	
@(pre)tstlib_pt : @(pre)tstlib
@(pre)tstlib :
	cd $(TSTdir) ; $(MAKE) @(pre)lib

@(pre)fblas_pt : @(pre)fblaslib_pt
@(pre)fblaslib_pt :
	cd $(FBLdir) ; $(MAKE) @(pre)ptlib
@(pre)fblas : @(pre)fblaslib
@(pre)fblaslib :
	cd $(FBLdir) ; $(MAKE) @(pre)lib
@(pre)cblas_pt : @(pre)cblaslib_pt
@(pre)cblaslib_pt :
	cd $(CBLdir) ; $(MAKE) @(pre)ptlib
@(pre)cblas : @(pre)cblaslib
@(pre)cblaslib :
	cd $(CBLdir) ; $(MAKE) @(pre)lib

@(pre)mmlib_pt : auxlib_pt
	cd $(AMMdir) ; $(MAKE) @(pre)lib
@skip	cd $(GMMdir) ; $(MAKE) @(pre)lib
	cd $(BLDdir)/src/threads ; $(MAKE) lib
	cd $(BLDdir)/src/threads/blas/level3 ; $(MAKE) @(pre)lib
@(pre)mmlib : auxlib
	cd $(AMMdir) ; $(MAKE) @(pre)lib
@skip	cd $(GMMdir) ; $(MAKE) @(pre)lib
@(pre)pklib : auxlib
@skip	cd $(BLDdir)/src/blas/pklevel3 ; $(MAKE) @(pre)lib

@(pre)l2lib_pt : @(pre)l2lib
	cd $(BLDdir)/src/threads/blas/level2 ; $(MAKE) @(pre)lib
	cd $(BLDdir)/src/threads ; $(MAKE) lib
@(pre)l2lib : @(pre)l1lib auxlib
	cd $(GMVdir) ; $(MAKE) @(pre)lib
	cd $(GR1dir) ; $(MAKE) @(pre)lib
	cd $(L2Bdir) ; $(MAKE) @(pre)lib

@(pre)l3lib_pt : @(pre)l3lib @(pre)mmlib_pt
	cd $(BLDdir)/src/threads ; $(MAKE) @(pre)lib3
@(pre)l3lib : @(pre)mmlib
	cd $(L3Bdir) ; $(MAKE) @(pre)lib

@(pre)l1lib_pt : auxlib_pt @(pre)l1lib
@(pre)l1lib : auxlib
	cd $(L1Bdir) ; $(MAKE) @(pre)lvl1

@(pre)lapack :
	cd $(BLDdir)/src/lapack ; $(MAKE) @(pre)lib
@(pre)lapack_pt : @(pre)tlapack
@(pre)tlapack :
	cd $(BLDdir)/src/lapack ; $(MAKE) @(pre)tlib
	cd $(BLDdir)/src/threads/lapack ; $(MAKE) @(pre)tlib

x@(pre)printblk : @(pre)printblk.o
	$(CLINKER) -o $@ @(pre)printblk.o $(ATLASlib)
@(pre)printblk.o : $(INCSdir)/atlas_mv.h $(INCSdir)/atlas_r1.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(mySRCdir)/printblk.c
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) $(mySRCdir)/printblk.c

  @define df @@
  @define df @-DATL_USEPTHREADS@
  @define df @-DATL_USEPTHREADS -DATL_MIKE@
  @define pt @@
  @whiledef pt _pt _mike
@(pre)l1blastst@(pt).o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) @(df) $(mySRCdir)/l1blastst.c
@(pre)l2blastst@(pt).o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) @(df) $(mySRCdir)/l2blastst.c

@(pre)l3blastst@(pt).o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h
	$(KC) -o $@ -c $(KCFLAGS) -DATLCINT @(df) -D@(typ) \
               $(mySRCdir)/l3blastst.c
@(pre)lanbtime@(pt).o : $(mySRCdir)/lanbtst.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATLCINT $(intf) @(df) -D@(typ) \
           -DATL_USE_ATL_ILAENV $(mySRCdir)/lanbtst.c
@(pre)lanbtimeC@(pt).o : $(mySRCdir)/lanbtst.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATLCINT -DTimeC @(df) -D@(typ) \
               $(mySRCdir)/lanbtst.c
@(pre)lanbtimeF@(pt).o : $(mySRCdir)/lanbtst.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATLCINT -DTimeF77 @(df) -D@(typ) \
               $(mySRCdir)/lanbtst.c
      @whiledef rt uum llt lu slv trtri inv lanb qr orm
@(pre)@(rt)tst@(pt).o : $(mySRCdir)/@(rt)tst.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATLCINT $(intf) @(df) -D@(typ) \
               $(mySRCdir)/@(rt)tst.c
@(pre)@(rt)tstC@(pt).o : $(mySRCdir)/@(rt)tst.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATLCINT -DTimeC @(df) -D@(typ) \
               $(mySRCdir)/@(rt)tst.c
@(pre)@(rt)tstF@(pt).o : $(mySRCdir)/@(rt)tst.c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATLCINT -DTimeF77 @(df) -D@(typ) \
               $(mySRCdir)/@(rt)tst.c
      @endwhile

@(pre)scaltst@(pt).o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
                  $(INCSdir)/atlas_f77.h 
	$(KC) -o $@ -c $(KCFLAGS) @(df) -D@(typ) $(mySRCdir)/scaltst.c

@(pre)gemmtst@(pt).o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
                  $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h
	$(KC) -o $@ -c $(KCFLAGS) @(df) -D@(typ) $(mySRCdir)/gemmtst.c

      @undef df
   @endwhile
   @multidef dep  @(pre)ammmlib @(pre)ammmlib  @^  @^           @(pre)kbmmlib @^
   @multidef def  -DTEST_AMM2 -DTEST_AMMM=1 @^ -DTEST_RANKK -DATL_RKXOVER -DATL_AFFINITY
   @whiledef suff amm2 amm big rk rkX aff
@(pre)gemmtst_@(suff).o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
                 $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h @(dep)
	$(KC) -o $@ -c $(KCFLAGS) -D@(typ) -DTRUST_BIG @(def) \
               $(mySRCdir)/gemmtst.c
      @undef def
      @undef dep
   @endwhile
@(pre)ammmlib:
	cd $(AMMdir) ; $(PMAKE) @(pre)lib
   @undef upr
   @undef typ
@endwhile
noaff_pt : 
	cd $(BLDdir)/tune/threads ; $(MAKE) $(noaffobj)
@whiledef pre d s
c_@(pre)blas3.o : $(mySRCdir)/c_rblas3.c $(INCSdir)/cblas.h $(INCSdir)/cblas_test.h
	$(KC) -o $@ -c $(KCFLAGS) -D@up@(pre)REAL -DF77INT_ \
               $(mySRCdir)/c_rblas3.c

@endwhile
cblas_xerbla.o : $(mySRCdir)/cblas_xerbla.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/cblas_xerbla.c

force_build:


$(INCAdir)/atlas_type.h : 
	cd $(SYSdir) ; $(MAKE) RunTyp
clean:
	rm -f *.o *.grd
@ROUT Make.EXtst
include Make.inc
mySRCdir = $(SRCdir)/EXtest
SBINdir = $(SRCdir)/bin

@declare "scripts : " y y
   @whiledef rt RUN_ormtst.sh RUN_qrtest_pt.sh
      @(rt)
   @endwhile
@enddeclare
@whiledef rt RUN_ormtst.sh RUN_qrtest_pt.sh
@(rt) : $(mySRCdir)/@(rt)
	cp $(mySRCdir)/@(rt) .
@endwhile
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @define tdef @@
   @define tdef @ -DUSE_PTHREADS=1@
   @whiledef tt s t
x@(pre)@(tt)mmnantest : @(pre)@(tt)mmnantest.o 
	$(FLINKER) $(FCLINKFLAGS) -o $@  @(pre)@(tt)mmnantest.o \
        $(TESTlib) $(ATLASlib) $(LIBS)
      @undef tdef
   @endwhile
@(pre)smmnantest.o : $(SBINdir)/gemmtst.c @(pre)smmlib
	$(KC) $(KCFLAGS) -D@(typ)=1 -DATL_NANC -DTEST_BIG -DTRUST_SMALL \
               -o $@ -c $(SBINdir)/gemmtst.c
@(pre)tmmnantest.o : $(SBINdir)/gemmtst.c @(pre)tmmlib
	$(KC) $(KCFLAGS) -D@(typ)=1 -DATL_NANC -DATL_USEPTHREADS \
               -o $@ -c $(SBINdir)/gemmtst.c
   @whiledef rt r1 r2 mvn mvt
x@(pre)@(rt)test : @(pre)@(rt)test.o @(pre)sl2lib
	$(FLINKER) $(FCLINKFLAGS) -o $@  @(pre)@(rt)test.o \
                   $(TESTlib) $(ATLASlib) $(LIBS)
@(pre)@(rt)test.o : $(mySRCdir)/@(rt)test.c
	$(KC) $(KCFLAGS) -D@(typ)=1 -o $@ -c $(mySRCdir)/@(rt)test.c
   @endwhile
   @whiledef rt l2 mm l3
@(pre)t@(rt)lib : 
	cd $(BINdir) ; $(MAKE) @(pre)@(rt)lib_pt
@(pre)s@(rt)lib : 
	cd $(BINdir) ; $(MAKE) @(pre)@(rt)lib
   @endwhile
   @undef typ
@endwhile

@ROUT Make.plinc
include ../Make.inc
mySRCdir = $(SRCdir)/results
PLOT = ploticus
RK=168
sep=0.17
#
# Set this path to a 2nd ATLAS install you want to compare against
#
AT2dir=/home/whaley/TEST/ATLAS3.9.39.0/obj64/lib
ext = $(BINdir)/xextract
cmp=MKL

$(ext) :
	cd $(BINdir) ; make xextract

@whiledef rt stattime atl2tvec atlcat2tvec
x@(rt) : $(mySRCdir)/@(rt).c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/@(rt).c -lm
@endwhile
@whiledef rt mergetvecs reducetvec tvec2plp cattvecs perctvecs renametvecs
x@(rt) : $(mySRCdir)/@(rt).c $(INCSdir)/atlas_tvec.h
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/@(rt).c -lm
@endwhile
alltools : xmergetvecs xreducetvec xtvec2plp xcattvecs xperctvecs xrenametvecs \
           xatl2tvec xatlcat2tvec
eps2pdf :
	epstopdf $fin $fout
clx=1
cl1=2
cl2=3
cl3=4
cl4=5
cl5=6
cl6=7
cl7=8
cl8=9
cl9=10
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, ylab
#
plot2lines_perc:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=$(clx) y=$(cl1) \
           y2=$(cl2) title="$(title)" name=$(nm1) name2=$(nm2) yinc=10 \
           xlbl="Problem Order" ylbl="$(ylab)" xlbldistance=0.6 ygrid=yes \
           legend="2.6 2.2" "yrange=0 100" legendfmt=across -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, ylab
#
plot3lines_perc:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=$(clx) y=$(cl1) \
           y2=$(cl2) y3=$(cl3) \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) yinc=10 \
           xlbl="Problem Order" ylbl="$(ylab)" xlbldistance=0.6 ygrid=yes \
           legend="2.4 2.2" "yrange=0 100" legendfmt=across -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, nm4, ylab
#
plot4lines_perc:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=$(clx) y=$(cl1) \
           y2=$(cl2) y3=$(cl3) y4=$(cl4) \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) name4=$(nm4) \
           yinc=10 xlbl="Problem Order" ylbl="$(ylab)" xlbldistance=0.6 \
           ygrid=yes legend="1.0 1.2" "yrange=0 100" legendfmt=across \
           -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, nm4
#
plot4lines:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab  x=$(clx) y=$(cl1) \
           y2=$(cl2) y3=$(cl3) y4=$(cl4) \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) name4=$(nm4) \
           xlbl="Problem Order" ylbl="MFLOPS" xlbldistance=0.6 ygrid=yes \
           ylbldistance=0.6 legend="2.0 max" yrange=0 legendfmt=across \
           -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, nm4, nm5
#
plot5lines:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=$(clx) y=$(cl1) \
           y2=$(cl2) y3=$(cl3) y4=$(cl4) y5=$(cl5) \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) \
           name4=$(nm4) name5=$(nm5) \
           xlbl="Problem Order" ylbl="MFLOPS" xlbldistance=0.6 ygrid=yes \
           ylbldistance=0.6 legend="2.0 max" yrange=0 legendfmt=across \
           -eps -o $(outf)
#MUST DEFINE: dataf, title, outf, nm1, nm2
#CAN DEFINED: sep
plot2bars :
	$(PLOT) -prefab vbars data=$(dataf) delim=tab x=$(clx) y=$(cl1) \
           y2=3 barwidth=0.1 title="$(title)" name=$(nm1) name2=$(nm2) \
           stubvert=yes ygrid=yes sep=$(sep) yrange=0 legframe=yes \
           xlbl="Problem Order" ylbl="MFLOPS" legendfmt=across \
           ylbldistance=0.6 xlbldistance=0.6 legend="2.7 max" \
           -eps -o $(outf)
force_build :
#
# General targets to change mflops to percentages of first column
#
pcmm4 : xperctvecs
	./xperctvecs -i $(inf) -b MFLOP_avg -C 1 N -o $(outf) \
           -R 4 MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg_4
pcmm8 : xperctvecs
	./xperctvecs -i $(inf) -b MFLOP_avg -C 1 N -o $(outf) \
           -R 8 MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg_4 \
                MFLOP_avg_5 MFLOP_avg_6 MFLOP_avg_7 MFLOP_avg_8 \
	
@ROUT Make.res_raw Make.res_tvec Make.res_chart
include ../Make.plinc
#
# List of macros that we need
#
pre=d#          # precision [s,d,c,z]
l3=trsm#        # l3 routine [symm,hemm,syrk,herk,syr2k,her2k,trmm,trsm]
la=getrf#       # lapack routine [getrf,geqrf,potrf]
@ROUT Make.res_tvec Make.res_chart
rt=$(l3)#       # l3blas routine [symm,hemm,syrk,herk,syr2k,her2k,trmm,trsm]
                # or lapack routine [getrf,geqrf,potrf]
@ROUT Make.res_raw Make.res_tvec Make.res_chart
sd=L#           # side [L,R]
up=U#           # uplo [U,L]
ta=N#           # transA [N,T,C]
tb=N#           # transB [N,T,C]
sz=med#         # size [tin,med,lrg,mlr,cmb]
pt=#            # if _pt, then do threaded, if blank do serial
lib=atl#        # library [atl,at2,sys,f77]
AT2dir=/home/whaley/TEST/ATLAS3.9.45/obj64/lib#        # path to 2nd ATLAS install to compare against

@ROUT Make.res_raw
#
# Timer targets for L3BLAS and GEMM
#
$(BINdir)/x$(pre)l3blastst_$(lib)$(pt) :
	cd $(BINdir) ; $(MAKE) x$(pre)l3blastst_$(lib)$(pt) AT2dir=$(AT2dir)
$(BINdir)/x$(pre)mmtst_$(lib)$(pt) :
	cd $(BINdir) ; $(MAKE) x$(pre)mmtst_$(lib)$(pt) AT2dir=$(AT2dir)
#
# Timer targets for LAPACK
#
@multidef lpr a   s   f   2
@whiledef lib atl sys f77 at2
$(BINdir)/x$(pre)slatime_@(lpr)l_@(lpr)b :
	cd $(BINdir) ; make x$(pre)slatime_@(lpr)l_@(lpr)b AT2dir=$(AT2dir)
$(BINdir)/x$(pre)tlatime_@(lpr)l_@(lpr)b :
	cd $(BINdir) ; make x$(pre)tlatime_@(lpr)l_@(lpr)b AT2dir=$(AT2dir)
x$(pre)latime_@(lib) : $(BINdir)/x$(pre)slatime_@(lpr)l_@(lpr)b
	- rm -f $@
	ln -s $(BINdir)/x$(pre)slatime_@(lpr)l_@(lpr)b $@
x$(pre)latime_@(lib)_pt : $(BINdir)/x$(pre)tlatime_@(lpr)l_@(lpr)b
	- rm -f $@
	ln -s $(BINdir)/x$(pre)tlatime_@(lpr)l_@(lpr)b $@
   @undef lpr
@endwhile
#
# targets to run various timings, leaving raw output in .out
#
@multidef szargs -N@^10@^100@^10 -N@^200@^2000@^200 -N@^2400@^4000@^400
@multidef rp 9   6   1
@whiledef sz tin med lrg
$(pre)mmsq_$(ta)$(tb)_@(sz)_$(lib)$(pt).out : $(BINdir)/x$(pre)mmtst_$(lib)$(pt)
	$(BINdir)/x$(pre)mmtst_$(lib)$(pt) -F 120 -T 0 -A 1 $(ta) -B 1 $(tb) \
           @(szargs) -# @(rp) > $@
$(pre)mmrk_$(ta)$(tb)_@(sz)_$(lib)$(pt).out : $(BINdir)/x$(pre)mmtst_$(lib)$(pt)
	$(BINdir)/x$(pre)mmtst_$(lib)$(pt) -F 120 -T 0 -k $(RK) \
           -A 1 $(ta) -B 1 $(tb) @(szargs) -# @(rp) > $@
$(pre)$(l3)_$(sd)$(up)$(ta)_@(sz)_$(lib)$(pt).out : \
   $(BINdir)/x$(pre)l3blastst_$(lib)$(pt)
	$(BINdir)/x$(pre)l3blastst_$(lib)$(pt) -F 120 -T 0 -R $(l3) -S 1 $(sd) \
           -U 1 $(up) -A 1 $(ta) @(szargs) -# @(rp) > $@
$(pre)$(la)_$(sd)$(up)_@(sz)_$(lib)$(pt).out : x$(pre)latime_$(lib)$(pt) 
	./x$(pre)latime_$(lib)$(pt) -F 40 -R 1 $(la) -S 1 $(sd) \
           -U 1 $(up) @(szargs) -# @(rp) > $@
   @undef szargs
   @undef rp
@endwhile

@ROUT Make.res_tvec
@SKIP
@SKIP This function defines the macro nl, which consist of nm_#, 1 <= # <= n
@SKIP names are separated only by spaces
@SKIP
@BEGINPROC NumSuffix n nm
   @iexp n_ @(n) 1 +
   @define nl @@
   @iexp i_ 0 1 +
   @iwhile i_ < @(n_)
      @define tmp @@(nl) @(nm)_@(i_)@
      @undef nl
      @define nl @@(tmp)@
      @undef tmp
      @iexp i_ 1 @(i_) +
   @endiwhile
   @undef n_
   @undef i_
@ENDPROC
#
# Build initial tvecs from raw output files.  BLAS and LAPACK targets are
# separate, because BLAS targets have twice as many reps
# BLAS targets use rt macro, and lapack don't to keep them distinct
#
@multidef rp 9   6   1
@whiledef sz tin med lrg
   @iexp dr @(rp) @(rp) +
../raw/$(pre)$(l3)_$(sd)$(up)$(ta)_@(sz)_$(lib)$(pt).out :
	cd ../raw ; $(MAKE) $(pre)$(rt)_$(sd)$(up)$(ta)_@(sz)_$(lib)$(pt).out \
           pre=$(pre) l3=$(rt) sd=$(sd) up=$(up) ta=$(ta) sz=$(sz) \
           lib=$(lib) pt="$(pt)"
$(pre)$(l3)_$(sd)$(up)$(ta)_@(sz)_$(lib)$(pt).tvec : xatl2tvec \
   xreducetvec ../raw/$(pre)$(rt)_$(sd)$(up)$(ta)_@(sz)_$(lib)$(pt).out
	./xatl2tvec -# @(dr) -H 2 N MFLOP \
           -i ../raw/$(pre)$(rt)_$(sd)$(up)$(ta)_@(sz)_$(lib)$(pt).out | \
        ./xreducetvec -o $@ -R 1 N -C 1 MFLOP
   @whiledef sh sq rk
../raw/$(pre)mm@(sh)_$(ta)$(tb)_@(sz)_$(lib)$(pt).out :
	cd ../raw ; $(MAKE) $(pre)mm@(sh)_$(ta)$(tb)_@(sz)_$(lib)$(pt).out \
           pre=$(pre) ta=$(ta) tb=$(tb) lib=$(lib) pt="$(pt)"
$(pre)mm@(sh)_$(ta)$(tb)_@(sz)_$(lib)$(pt).tvec : xatl2tvec xreducetvec \
   ../raw/$(pre)mm@(sh)_$(ta)$(tb)_@(sz)_$(lib)$(pt).out
	./xatl2tvec -# @(dr) -H 2 N MFLOP  \
           -i ../raw/$(pre)mm@(sh)_$(ta)$(tb)_@(sz)_$(lib)$(pt).out | \
        ./xreducetvec -o $@ -R 1 N -C 1 MFLOP
   @endwhile
../raw/$(pre)$(la)_$(sd)$(up)_@(sz)_$(lib)$(pt).out : 
	cd ../raw ; $(MAKE) $(pre)$(la)_$(sd)$(up)_@(sz)_$(lib)$(pt).out \
           la=$(la) sd=$(sd) up=$(up) ta=N lib=$(lib) pt="$(pt)"
$(pre)$(la)_$(sd)$(up)N_@(sz)_$(lib)$(pt).tvec : xatl2tvec \
   xreducetvec ../raw/$(pre)$(la)_$(sd)$(up)_@(sz)_$(lib)$(pt).out
	./xatl2tvec -# @(rp) -H 2 N MFLOP \
           -i ../raw/$(pre)$(la)_$(sd)$(up)_@(sz)_$(lib)$(pt).out | \
        ./xreducetvec -o $@ -R 1 N -C 1 MFLOP
   @undef rp
@endwhile
#
# Merge medium and large runs into one combined range
#
$(pre)$(rt)_$(sd)$(up)$(ta)_mlr_$(lib)$(pt).tvec : xmergetvecs \
   $(pre)$(rt)_$(sd)$(up)$(ta)_med_$(lib)$(pt).tvec \
   $(pre)$(rt)_$(sd)$(up)$(ta)_lrg_$(lib)$(pt).tvec 
	./xmergetvecs -r N -C 2 N MFLOP_avg -o $@ \
           -i1 $(pre)$(rt)_$(sd)$(up)$(ta)_med_$(lib)$(pt).tvec \
           -i2 $(pre)$(rt)_$(sd)$(up)$(ta)_lrg_$(lib)$(pt).tvec 
@whiledef sh sq rk
$(pre)mm@(sh)_$(ta)$(tb)_mlr_$(lib)$(pt).tvec : xmergetvecs \
   $(pre)mm@(sh)_$(ta)$(tb)_med_$(lib)$(pt).tvec \
   $(pre)mm@(sh)_$(ta)$(tb)_lrg_$(lib)$(pt).tvec 
	./xmergetvecs -r N -C 2 N MFLOP_avg -o $@ \
           -i1 $(pre)mm@(sh)_$(ta)$(tb)_med_$(lib)$(pt).tvec \
           -i2 $(pre)mm@(sh)_$(ta)$(tb)_lrg_$(lib)$(pt).tvec
$(pre)mm@(sh)_$(ta)$(tb)_cmb_$(lib)$(pt).tvec : xmergetvecs \
   $(pre)mm@(sh)_$(ta)$(tb)_tin_$(lib)$(pt).tvec \
   $(pre)mm@(sh)_$(ta)$(tb)_med_$(lib)$(pt).tvec \
   $(pre)mm@(sh)_$(ta)$(tb)_lrg_$(lib)$(pt).tvec 
	./xmergetvecs -r N -C 2 N MFLOP_avg \
           -i1 $(pre)mm@(sh)_$(ta)$(tb)_tin_$(lib)$(pt).tvec \
           -i2 $(pre)mm@(sh)_$(ta)$(tb)_med_$(lib)$(pt).tvec | \
        ./xmergetvecs -r N -C 2 N MFLOP_avg -o $@ \
           -i2 $(pre)mm@(sh)_$(ta)$(tb)_lrg_$(lib)$(pt).tvec
@endwhile
#
# Merge tiny, medium, and large runs into one combined range
#
$(pre)$(rt)_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec : xmergetvecs \
   $(pre)$(rt)_$(sd)$(up)$(ta)_tin_$(lib)$(pt).tvec \
   $(pre)$(rt)_$(sd)$(up)$(ta)_med_$(lib)$(pt).tvec \
   $(pre)$(rt)_$(sd)$(up)$(ta)_lrg_$(lib)$(pt).tvec 
	./xmergetvecs -r N -C 2 N MFLOP_avg \
           -i1 $(pre)$(rt)_$(sd)$(up)$(ta)_tin_$(lib)$(pt).tvec \
           -i2 $(pre)$(rt)_$(sd)$(up)$(ta)_med_$(lib)$(pt).tvec | \
        ./xmergetvecs -r N -C 2 N MFLOP_avg -o $@ \
           -i2 $(pre)$(rt)_$(sd)$(up)$(ta)_lrg_$(lib)$(pt).tvec
#
# Direct comparison tvecs
#
   @multidef c a s
   @whiledef cmp at2 sys
      @whiledef sz tin med lrg cmb mlr
$(pre)$(rt)_$(sd)$(up)$(ta)_@(sz)_av@(c)$(pt).tvec : xcattvecs force_build
	$(MAKE) $(pre)$(rt)_$(sd)$(up)$(ta)_@(sz)_@(cmp)$(pt).tvec pre=$(pre) \
                rt=$(rt) sd=$(sd) up=$(up) ta=$(ta) lib=@(cmp) pt="$(pt)" \
                sz=@(sz)
	$(MAKE) $(pre)$(rt)_$(sd)$(up)$(ta)_@(sz)_atl$(pt).tvec pre=$(pre) \
                rt=$(rt) sd=$(sd) up=$(up) ta=$(ta) lib=atl pt="$(pt)" sz=@(sz)
	cat $(pre)$(rt)_$(sd)$(up)$(ta)_@(sz)_atl$(pt).tvec \
            $(pre)$(rt)_$(sd)$(up)$(ta)_@(sz)_@(cmp)$(pt).tvec | \
        ./xcattvecs -# 2 -o $@ -C 2 N MFLOP_avg
$(pre)$(rt)_$(ta)$(tb)_@(sz)_av@(c)$(pt).tvec : xcattvecs force_build
	$(MAKE) $(pre)$(rt)_$(ta)$(tb)_@(sz)_@(cmp)$(pt).tvec pre=$(pre) \
                rt=$(rt) ta=$(ta) tb=$(tb) lib=@(cmp) pt="$(pt)" sz=@(sz)
	$(MAKE) $(pre)$(rt)_$(ta)$(tb)_@(sz)_atl$(pt).tvec pre=$(pre) \
                rt=$(rt) ta=$(ta) tb=$(tb) lib=atl pt="$(pt)" sz=@(sz)
	cat $(pre)$(rt)_$(ta)$(tb)_@(sz)_atl$(pt).tvec \
            $(pre)$(rt)_$(ta)$(tb)_@(sz)_@(cmp)$(pt).tvec | \
        ./xcattvecs -# 2 -o $@ -C 2 N MFLOP_avg
      @endwhile
      @undef c
   @endwhile
#
# Cat combined Side&Uplo variants together with sqmm
#
$(pre)$(rt)_SdUp_cmb_$(lib)$(pt).tvec : xcattvecs force_build \
   $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec
	$(MAKE) $(pre)$(rt)_LUN_cmb_$(lib)$(pt).tvec sd=L up=U \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_LLN_cmb_$(lib)$(pt).tvec sd=L up=L \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_RUN_cmb_$(lib)$(pt).tvec sd=R up=U \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_RLN_cmb_$(lib)$(pt).tvec sd=R up=L \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	cat $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LUN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LLN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_RUN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_RLN_cmb_$(lib)$(pt).tvec | \
        ./xcattvecs -# 5 -o $@ -C 2 N MFLOP_avg
#
# Cat combined Uplo&Trans variants together with sqmm for
#
$(pre)$(rt)_UpTr_cmb_$(lib)$(pt).tvec : xcattvecs force_build \
   $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec
	$(MAKE) $(pre)$(rt)_LUN_cmb_$(lib)$(pt).tvec up=U ta=N \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_LUT_cmb_$(lib)$(pt).tvec up=U ta=T \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_LLN_cmb_$(lib)$(pt).tvec up=L ta=N \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_LLT_cmb_$(lib)$(pt).tvec up=L ta=T \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	cat $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LUN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LUT_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LLN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LLT_cmb_$(lib)$(pt).tvec | \
        ./xcattvecs -# 5 -o $@ -C 2 N MFLOP_avg
#
# Cat combined Side,Uplo,Trans, variants together with sqmm
#
$(pre)$(rt)_SdUpTr_cmb_$(lib)$(pt).tvec : xcattvecs force_build \
   $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec
	$(MAKE) $(pre)$(rt)_LUN_cmb_$(lib)$(pt).tvec sd=L up=U ta=N \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_LUT_cmb_$(lib)$(pt).tvec sd=L up=U ta=T \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_LLN_cmb_$(lib)$(pt).tvec sd=L up=L ta=N \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_LLT_cmb_$(lib)$(pt).tvec sd=L up=L ta=T \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_RUN_cmb_$(lib)$(pt).tvec sd=R up=U ta=N \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_RUT_cmb_$(lib)$(pt).tvec sd=R up=U ta=T \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_RLN_cmb_$(lib)$(pt).tvec sd=R up=L ta=N \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)$(rt)_RLT_cmb_$(lib)$(pt).tvec sd=R up=L ta=T \
                la=$(la) rt=$(rt) pre=$(pre) pt="$(pt)" lib=$(lib)
	cat $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LUN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LUT_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LLN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_LLT_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_RUN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_RUT_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_RLN_cmb_$(lib)$(pt).tvec \
            $(pre)$(rt)_RLT_cmb_$(lib)$(pt).tvec | \
        ./xcattvecs -# 9 -o $@ -C 2 N MFLOP_avg
#
# Change to percentage of GEMM speed
#
$(pre)pcmm_$(rt)_SdUp_cmb_$(lib)$(pt).tvec : \
   $(pre)$(rt)_SdUp_cmb_$(lib)$(pt).tvec
	$(MAKE) pcmm4 inf=$(pre)$(rt)_SdUp_cmb_$(lib)$(pt).tvec outf=$@
$(pre)pcmm_$(rt)_UpTr_cmb_$(lib)$(pt).tvec : \
   $(pre)$(rt)_UpTr_cmb_$(lib)$(pt).tvec
	$(MAKE) pcmm4 inf=$(pre)$(rt)_UpTr_cmb_$(lib)$(pt).tvec outf=$@
$(pre)pcmm_$(rt)_SdUpTr_cmb_$(lib)$(pt).tvec : \
   $(pre)$(rt)_SdUpTr_cmb_$(lib)$(pt).tvec
	$(MAKE) pcmm8 inf=$(pre)$(rt)_UpTr_cmb_$(lib)$(pt).tvec outf=$@
#
# symmetric routs (SYMM, SYRK & SYR2K) compared to square GEMM
#
$(pre)mmvsy_$(sd)$(up)$(ta)_$(lib)$(pt).tvec : xcattvecs force_build \
   $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec
	$(MAKE) $(pre)symm_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec pre=$(pre) \
           l3=symm rt=symm sd=$(sd) up=$(up) ta=$(ta) lib=$(lib) pt="$(pt)"
	$(MAKE) $(pre)syrk_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec pre=$(pre) \
           l3=syrk rt=syrk up=$(up) ta=$(ta) lib=$(lib) pt="$(pt)"
	$(MAKE) $(pre)syr2k_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec pre=$(pre) \
           l3=syr2k rt=syr2k sd=$(sd) up=$(up) ta=$(ta) lib=$(lib) pt="$(pt)"
	cat $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec \
            $(pre)symm_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec \
            $(pre)syrk_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec \
            $(pre)syr2k_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec | \
        ./xcattvecs -# 4 -o $@ -C 2 N MFLOP_avg
#
# Triangular routs (TRMM, TRSM) compared to square GEMM
#
$(pre)mmvtr_$(sd)$(up)$(ta)_$(lib)$(pt).tvec : xcattvecs force_build \
   $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec
	$(MAKE) $(pre)trmm_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec pre=$(pre) \
           l3=trmm rt=trmm sd=$(sd) up=$(up) ta=$(ta) lib=$(lib) pt="$(pt)"
	$(MAKE) $(pre)trsm_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec pre=$(pre) \
           l3=trsm rt=trsm sd=$(sd) up=$(up) ta=$(ta) lib=$(lib) pt="$(pt)"
	cat $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec \
            $(pre)trmm_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec \
            $(pre)trsm_$(sd)$(up)$(ta)_cmb_$(lib)$(pt).tvec | \
        ./xcattvecs -# 3 -o $@ -C 2 N MFLOP_avg

#
# Create master file with all factorizations, in this order: 
#    MM,LU,LL,UU,QR,QL,RQ,LQ
#
$(pre)factor_cmb_$(lib)$(pt).tvec : xcattvecs force_build \
   $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec
	$(MAKE) $(pre)getrf_LUN_cmb_$(lib)$(pt).tvec sd=L up=U \
                rt=getrf la=getrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)potrf_LUN_cmb_$(lib)$(pt).tvec sd=L up=U \
                rt=potrf la=potrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)potrf_LLN_cmb_$(lib)$(pt).tvec sd=L up=L \
                rt=potrf la=potrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)geqrf_RUN_cmb_$(lib)$(pt).tvec sd=R up=U \
                rt=geqrf la=geqrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)geqrf_RLN_cmb_$(lib)$(pt).tvec sd=R up=L \
                rt=geqrf la=geqrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)geqrf_LUN_cmb_$(lib)$(pt).tvec sd=L up=U \
                rt=geqrf la=geqrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)geqrf_LLN_cmb_$(lib)$(pt).tvec sd=L up=L \
                rt=geqrf la=geqrf pre=$(pre) pt="$(pt)" lib=$(lib)
	cat $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec \
            $(pre)getrf_LUN_cmb_$(lib)$(pt).tvec \
            $(pre)potrf_LUN_cmb_$(lib)$(pt).tvec \
            $(pre)potrf_LLN_cmb_$(lib)$(pt).tvec \
            $(pre)geqrf_RUN_cmb_$(lib)$(pt).tvec \
            $(pre)geqrf_RLN_cmb_$(lib)$(pt).tvec \
            $(pre)geqrf_LUN_cmb_$(lib)$(pt).tvec \
            $(pre)geqrf_LLN_cmb_$(lib)$(pt).tvec | \
        ./xcattvecs -# 8 -o $@ -C 2 N MFLOP_avg
# 
# Create Triangular lapack variant file with mmsq
#
$(pre)trvar_cmb_$(lib)$(pt).tvec : xcattvecs force_build \
   $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec
	$(MAKE) $(pre)getrf_LUN_cmb_$(lib)$(pt).tvec sd=L up=U \
                rt=getrf la=getrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)potrf_LUN_cmb_$(lib)$(pt).tvec sd=L up=U \
                rt=potrf la=potrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)potrf_LLN_cmb_$(lib)$(pt).tvec sd=L up=L \
                rt=potrf la=potrf pre=$(pre) pt="$(pt)" lib=$(lib)
	cat $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec \
            $(pre)getrf_LUN_cmb_$(lib)$(pt).tvec \
            $(pre)potrf_LUN_cmb_$(lib)$(pt).tvec \
            $(pre)potrf_LLN_cmb_$(lib)$(pt).tvec | \
        ./xcattvecs -# 4 -o $@ -C 2 N MFLOP_avg

#
# Create QR variant combined file
#
$(pre)qrvar_cmb_$(lib)$(pt).tvec : xcattvecs force_build \
   $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec
	$(MAKE) $(pre)geqrf_RUN_cmb_$(lib)$(pt).tvec sd=R up=U \
                rt=geqrf la=geqrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)geqrf_RLN_cmb_$(lib)$(pt).tvec sd=R up=L \
                rt=geqrf la=geqrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)geqrf_LUN_cmb_$(lib)$(pt).tvec sd=L up=U \
                rt=geqrf la=geqrf pre=$(pre) pt="$(pt)" lib=$(lib)
	$(MAKE) $(pre)geqrf_LLN_cmb_$(lib)$(pt).tvec sd=L up=L \
                rt=geqrf la=geqrf pre=$(pre) pt="$(pt)" lib=$(lib)
	cat $(pre)mmsq_NN_cmb_$(lib)$(pt).tvec \
            $(pre)geqrf_RUN_cmb_$(lib)$(pt).tvec \
            $(pre)geqrf_RLN_cmb_$(lib)$(pt).tvec \
            $(pre)geqrf_LUN_cmb_$(lib)$(pt).tvec \
            $(pre)geqrf_LLN_cmb_$(lib)$(pt).tvec | \
        ./xcattvecs -# 5 -o $@ -C 2 N MFLOP_avg

.SUFFIXES:
@declare ".SUFFIXES: " y y
   .tvec 
   @iexp i 1 0 +
   @iwhile i < 9
      .pl@(i)
      .pc@(i)
      .pl@(i)s
      .pl@(i)p
      @iexp i @(i) 1 +
   @endiwhile
@enddeclare
@iexp i 1 0 +
@iwhile i < 9
   @callproc NumSuffix @(i) MFLOP_avg 
.tvec.pc@(i) :
	$(MAKE) xperctvecs
	./xperctvecs -i $< -o $@ -b MFLOP_avg -C 1 N -R @(i) @(nl)
   @iexp i @(i) 1 +
@endiwhile
@iexp i 1 0 +
@iwhile i < 9
   @iexp j @(i) 1 +
   @callproc NumSuffix @(i) MFLOP_avg 
.tvec.pl@(i)s:
	$(MAKE) xtvec2plp
	./xtvec2plp -i $< -o $@ -C @(j) N @(nl)
.tvec.pl@(i) :
   @iexp j @(i) 2 +
	$(MAKE) xtvec2plp
	./xtvec2plp -i $< -o $@ -C @(j) N MFLOP_avg @(nl)
.tvec.pl@(i)p:
	$(MAKE) xtvec2plp xperctvecs
	./xperctvecs -i $< -C 1 N -b MFLOP_avg -R @(i) @(nl) | \
   @iexp i @(i) 1 +
        ./xtvec2plp -o $@ -C @(i) N @(nl)
@endiwhile
@ROUT Make.res_chart

@whiledef sf a s f
$(pre)$(rt)_$(sd)$(up)_$(sz)_av@(sf)$(pt).eps : force_build $(ext)
	cd ../tvecs ; \
           $(MAKE) $(pre)$(rt)_$(sd)$(up)N_$(sz)_$(lib)$(pt).pl2 \
           pre=$(pre) lib=atl pt="$(pt)" rt=$(rt) la=$(rt) sd=$(sd) \
           up=$(up) sz=$(sz)
	$(MAKE) plot2bars nm1="atl" nm2=$(cmp) outf=$@ \
           title="$(pre)$(rt): ATLAS$(pt) vs. $(cmp)$(pt)" \
           dataf=../tvecs/$(pre)$(rt)_$(sd)$(up)_$(sz)_$(lib)$(pt).pl2
$(pre)$(rt)_$(sd)$(up)$(ta)_$(sz)_av@(sf)$(pt).eps : force_build $(ext)
	cd ../tvecs ; \
           $(MAKE) $(pre)$(rt)_$(sd)$(up)$(ta)_$(sz)_$(lib)$(pt).pl2 \
           pre=$(pre) lib=atl pt="$(pt)" rt=$(rt) sd=$(sd) up=$(up) \
           ta=$(ta) sz=$(sz)
	$(MAKE) plot2bars nm1="atl" nm2=$(cmp) outf=$@ \
           title="$(pre)$(rt): ATLAS$(pt) vs. $(cmp)$(pt)" \
           dataf=../tvecs/$(pre)$(rt)_$(sd)$(up)$(ta)_$(sz)_$(lib)$(pt).pl2
$(pre)$(rt)_$(ta)$(tb)_$(sz)_av@(sf)$(pt).eps : force_build $(ext)
	cd ../tvecs ; \
           $(MAKE) $(pre)$(rt)_$(ta)$(tb)_$(sz)_$(lib)$(pt).pl2 \
           pre=$(pre) lib=atl pt="$(pt)" rt=$(rt) ta=$(ta) tb=$(tb) sz=$(sz)
	$(MAKE) plot2bars nm1="atl" nm2=$(cmp) outf=$@ \
           title="$(pre)$(rt): ATLAS$(pt) vs. $(cmp)$(pt)" \
           dataf=../tvecs/$(pre)$(rt)_$(ta)$(tb)_$(sz)_$(lib)$(pt).pl2
@endwhile

$(pre)pcmm_l3sy_$(sd)$(up)$(ta)_$(lib)$(pt).eps : force_build
	cd ../tvecs ; $(MAKE) $(pre)mmvsy_$(sd)$(up)$(ta)_$(lib)$(pt).pl3p \
           pre=$(pre) lib=$(lib) pt="$(pt)" sd=$(sd) up=$(up) ta=$(ta)
	$(ext) -b $(mySRCdir)/report.base -o tmp.pls rout=pclinechart \
           -def datf "../tvecs/$(pre)mmvsy_$(sd)$(up)$(ta)_$(lib)$(pt).pl3p" \
           -def nlines "3" -def labs "SYMM SYRK SYR2K"
	$(PLOT) tmp.pls -eps -o $@

$(pre)pcmm_l3tr_$(sd)$(up)$(ta)_$(lib)$(pt).eps : force_build
	cd ../tvecs ; $(MAKE) $(pre)mmvtr_$(sd)$(up)$(ta)_$(lib)$(pt).pl2p \
           pre=$(pre) lib=$(lib) pt="$(pt)" sd=$(sd) up=$(up) ta=$(ta)
	$(ext) -b $(mySRCdir)/report.base -o tmp.pls rout=pclinechart \
           -def datf "../tvecs/$(pre)mmvtr_$(sd)$(up)$(ta)_$(lib)$(pt).pl2p" \
           -def nlines "2" -def labs "TRMM TRSM"
	$(PLOT) tmp.pls -eps -o $@

$(pre)qrvar_cmb_$(lib)$(pt).eps :  force_build
	cd ../tvecs ; $(MAKE) $(pre)qrvar_cmb_$(lib).pl4s pre=$(pre) \
           lib=$(lib) pt="$(pt)"
	$(MAKE) plot4lines dataf=../tvecs/$(pre)qrvar_cmb_$(lib).pl4s outf=$@ \
        title="$(lib) QR variant performance" \
        nm1="QR" nm2="QL" nm3="RQ" nm4="LQ" 
$(pre)factor_cmb_$(lib)$(pt).eps : $(ext) force_build
	cd ../tvecs ; $(MAKE) $(pre)factor_cmb_$(lib)$(pt).pl8 pre=$(pre) \
           lib=$(lib) pt="$(pt)"
	$(ext) -b $(mySRCdir)/report.base -o tmp.pls rout=linechart \
               -def datf "../tvecs/$(pre)factor_cmb_$(lib)$(pt).pl8" \
               -def nlines "8" -def labs "MM LU LL UU QR QL RQ LQ"
	$(PLOT) tmp.pls -eps -o $@
$(pre)pcmm_factor_cmb_$(lib)$(pt).eps : $(ext) force_build
	cd ../tvecs ; $(MAKE) $(pre)factor_cmb_$(lib)$(pt).pl7p pre=$(pre) \
           lib=$(lib) pt="$(pt)"
	$(ext) -b $(mySRCdir)/report.base -o tmp.pls rout=pclinechart \
               -def datf "../tvecs/$(pre)factor_cmb_$(lib)$(pt).pl7p" \
               -def nlines "7" -def labs "LU LL UU QR QL RQ LQ"
	$(PLOT) tmp.pls -eps -o $@
@ROUT Make.res_new
include Make.plinc
ext = $(BINdir)/xextract
cmp=MKL

@multidef cpv avs ava avf
@whiledef cmp sys at2 f77
atlv@(cmp).pdf : atlv@(cmp)_pdf.ps
	ps2pdf atlv@(cmp)_pdf.ps $@
atlv@(cmp)_pdf.ps : atlv@(cmp).dvi
	dvips -P pdf -t letter -o $@ atlv@(cmp)
atlv@(cmp).ps : atlv@(cmp).dvi
	dvips -t letter -o $@ atlv@(cmp)
atlv@(cmp).tex : $(ext) $(mySRCdir)/report.base
	$(ext) -langC -b $(mySRCdir)/report.base -o $@ rout=rep@(cmp).tex \
               -define sys $(cmp)

   @declare "atlv@(cmp).dvi: " y y
      atlv@(cmp).tex 
      @whiledef pre s d c z
         @define pt @@
         @whiledef pt _pt
            @multidef rt qrvar_cmb
            @whiledef rt factor_cmb pcmm_l3tr_LLN pcmm_l3sy_LLN pcmm_factor_cmb
               charts/@(pre)@(rt)_atl@(pt).eps
               charts/@(pre)@(rt)_@(cmp)@(pt).eps
            @endwhile
            @whiledef rt getrf_LLN  geqrf_LLN  geqrf_RUN potrf_LUN potrf_LLN
               charts/@(pre)@(rt)_mlr_@(cpv)@(pt).eps
               charts/@(pre)@(rt)_tin_@(cpv)@(pt).eps
            @endwhile
            @whiledef rt trsm trmm symm syrk syr2k
               charts/@(pre)@(rt)_LLN_mlr_@(cpv)@(pt).eps
               charts/@(pre)@(rt)_LLN_tin_@(cpv)@(pt).eps
            @endwhile
            @whiledef rt mmsq mmrk
               charts/@(pre)@(rt)_NN_tin_@(cpv)@(pt).eps
               charts/@(pre)@(rt)_NN_mlr_@(cpv)@(pt).eps
            @endwhile
         @endwhile
      @endwhile
   @enddeclare
	latex atlv@(cmp)
	latex atlv@(cmp)
   @undef cpv
@endwhile
#
# Charts where all timings are for one library
#
@whiledef lib sys atl at2
   @whiledef pre s d c z
      @define pt @@
      @whiledef pt _pt
         @whiledef rt factor_cmb pcmm_factor_cmb qrvar_cmb
charts/@(pre)@(rt)_@(lib)@(pt).eps :
	cd charts ; $(MAKE) @(pre)@(rt)_@(lib)@(pt).eps pre=@(pre) \
           lib=@(lib) pt="@(pt)"
         @endwhile
         @whiledef rt pcmm_l3tr pcmm_l3sy
            @whiledef sd L R
               @whiledef up U L
                  @whiledef ta T N
charts/@(pre)@(rt)_@(sd)@(up)@(ta)_@(lib)@(pt).eps :
	cd charts ; $(MAKE) @(pre)@(rt)_@(sd)@(up)@(ta)_@(lib)@(pt).eps \
           pre=@(pre) lib=@(lib) sd=@(sd) up=@(up) ta=@(ta) pt="@(pt)"
                  @endwhile
               @endwhile
            @endwhile
         @endwhile
      @endwhile
   @endwhile
@endwhile
#
# Charts comparing present ATLAS to another system head-to-head
#
@whiledef cmp avs ava sys atl at2
   @whiledef pre s d c z
      @whiledef sz tin med lrg mlr cmb
         @define pt @@
         @whiledef pt _pt
            @whiledef rt mmsq mmrk
               @whiledef ta T N C
                  @whiledef tb T N C
charts/@(pre)@(rt)_@(ta)@(tb)_@(sz)_@(cmp)@(pt).eps : 
	cd charts ; $(MAKE) @(pre)@(rt)_@(ta)@(tb)_@(sz)_@(cmp)@(pt).eps \
           pre=@(pre) sz=@(sz) lib=@(cmp) rt=@(rt) pt="@(pt)" ta=@(ta) tb=@(tb)
                  @endwhile
               @endwhile
            @endwhile
@define rt @getrf@
charts/@(pre)@(rt)_LLN_@(sz)_@(cmp)@(pt).eps : 
	cd charts ; $(MAKE) @(pre)@(rt)_LLN_@(sz)_@(cmp)@(pt).eps \
           pre=@(pre) sz=@(sz) lib=@(cmp) la=@(rt) rt=@(rt) pt="@(pt)" \
           sd=L up=L ta=N
@undef rt
            @whiledef rt potrf 
               @whiledef up U L
charts/@(pre)@(rt)_L@(up)N_@(sz)_@(cmp)@(pt).eps : 
	cd charts ; $(MAKE) @(pre)@(rt)_L@(up)N_@(sz)_@(cmp)@(pt).eps \
           pre=@(pre) sz=@(sz) lib=@(cmp) la=@(rt) rt=@(rt) pt="@(pt)" \
           sd=L up=@(up) ta=N
               @endwhile
            @endwhile
            @whiledef rt geqrf 
               @whiledef sd L R
                  @whiledef up U L
charts/@(pre)@(rt)_@(sd)@(up)N_@(sz)_@(cmp)@(pt).eps : 
	cd charts ; $(MAKE) @(pre)@(rt)_@(sd)@(up)N_@(sz)_@(cmp)@(pt).eps \
           pre=@(pre) sz=@(sz) lib=@(cmp) la=@(rt) rt=@(rt) pt="@(pt)" \
           sd=@(sd) up=@(up) ta=N
                  @endwhile
               @endwhile
            @endwhile
            @whiledef rt symm syrk syr2k hemm herk her2k trmm trsm
               @whiledef sd L R
                  @whiledef up U L
                     @whiledef ta T N
charts/@(pre)@(rt)_@(sd)@(up)@(ta)_@(sz)_@(cmp)@(pt).eps : 
	cd charts ; $(MAKE) @(pre)@(rt)_@(sd)@(up)@(ta)_@(sz)_@(cmp)@(pt).eps \
           pre=@(pre) sz=@(sz) lib=@(cmp) l3=@(rt) pt="@(pt)" \
           sd=@(sd) up=@(up) ta=@(ta) 
                     @endwhile
                  @endwhile
               @endwhile
            @endwhile
         @endwhile
      @endwhile
   @endwhile
@endwhile
@beginskip
eps2pdf :
	epstopdf $fin $fout
# =================
# Plotting commands
# =================
#MUST DEFINE: dataf, title, outf, nm1, nm2
#CAN DEFINED: sep
plot2bars :
	$(PLOT) -prefab vbars data=$(dataf) delim=tab x=1 y=2 \
           y2=3 barwidth=0.1 title="$(title)" name=$(nm1) name2=$(nm2) \
           stubvert=yes ygrid=yes sep=$(sep) yrange=0 legframe=yes \
           xlbl="Problem Order" ylbl="MFLOPS" legendfmt=across \
           ylbldistance=0.6 xlbldistance=0.6 legend="2.7 max" \
           -eps -o $(outf)

#
#MUST DEFINE: dataf, title, outf, nm1, nm2, ylab
#
plot2lines_perc:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 \
           title="$(title)" name=$(nm1) name2=$(nm2) yinc=10 \
           xlbl="Problem Order" ylbl="$(ylab)" xlbldistance=0.6 ygrid=yes \
           legend="2.6 2.2" "yrange=0 100" legendfmt=across -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, ylab
#
plot3lines_perc:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 y3=4 \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) yinc=10 \
           xlbl="Problem Order" ylbl="$(ylab)" xlbldistance=0.6 ygrid=yes \
           legend="2.4 2.2" "yrange=0 100" legendfmt=across -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, nm4, ylab
#
plot4lines_perc:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 y3=4 y4=5 \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) name4=$(nm4) \
           yinc=10 xlbl="Problem Order" ylbl="$(ylab)" xlbldistance=0.6 \
           ygrid=yes legend="1.0 1.2" "yrange=0 100" legendfmt=across \
           -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, nm4
#
plot4lines:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 y3=4 y4=5 \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) name4=$(nm4) \
           xlbl="Problem Order" ylbl="MFLOPS" xlbldistance=0.6 ygrid=yes \
           ylbldistance=0.6 legend="2.0 max" yrange=0 legendfmt=across \
           -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, nm4, nm5
#
plot5lines:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 y3=4 y4=5 \
           y5=6, title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) \
           name4=$(nm4) name5=$(nm5) \
           xlbl="Problem Order" ylbl="MFLOPS" xlbldistance=0.6 ygrid=yes \
           ylbldistance=0.6 legend="2.0 max" yrange=0 legendfmt=across \
           -eps -o $(outf)
@endskip
vpath %.tvec tvecs/
vpath %.plp charts/
.SUFFIXES:
.SUFFIXES: .pl2 .tvec
.tvec.pl2 : xtvec2plp
	./xtvec2plp -i $< -o charts/$@ -C 3 N MFLOP_avg MFLOP_avg_1
@ROUT Make.res
include Make.inc
mySRCdir = $(SRCdir)/results
PLOT = ploticus
RK=168
sep=0.10
#
# Set this path to a 2nd ATLAS install you want to compare against
#
AT2dir=/home/whaley/TEST/ATLAS3.9.39.0/obj64/lib
ext = $(BINdir)/xextract
cmp=MKL

$(ext) :
	cd $(BINdir) ; make xextract
@whiledef cmp sys at2
atlv@(cmp).pdf : atlv@(cmp)_pdf.ps
	ps2pdf atlv@(cmp)_pdf.ps $@
atlv@(cmp)_pdf.ps : atlv@(cmp).dvi
	dvips -P pdf -t letter -o $@ atlv@(cmp)
atlv@(cmp).ps : atlv@(cmp).dvi
	dvips -t letter -o $@ atlv@(cmp)
atlv@(cmp).tex : $(ext) $(mySRCdir)/report.base
	$(ext) -langC -b $(mySRCdir)/report.base -o $@ rout=repcmp.tex \
               -define sys $(cmp)

   @declare "atlv@(cmp).dvi: " y y
      atlv@(cmp).tex mmla_atl mmla_atl_pt mmla_@(cmp) mmla_@(cmp)_pt
      pcmm_atl pcmm_atl_pt pcmm_@(cmp) pcmm_@(cmp)_pt
      @whiledef pre s d c z
         @define pt @@
         @whiledef pt _pt
            charts/@(pre)laqrs_@(cmp)@(pt).eps
            charts/@(pre)laqrs_atl@(pt).eps
            @whiledef rt trsm trmm
               charts/@(pre)pcmm_@(rt)_N_atl@(pt).eps
               charts/@(pre)pcmm_@(rt)_T_atl@(pt).eps
               charts/@(pre)pcmm_@(rt)_N_sys@(pt).eps
               charts/@(pre)pcmm_@(rt)_T_sys@(pt).eps
            @endwhile
            @whiledef rt symm syrk syr2k
               charts/@(pre)pcmm_@(rt)_atl@(pt).eps
               charts/@(pre)pcmm_@(rt)_sys@(pt).eps
            @endwhile
            @whiledef rt symm syrk syr2k trmm trsm
               charts/@(pre)@(rt)_@(cmp)@(pt).eps
            @endwhile
            charts/@(pre)pcmm_tr_sys.eps charts/@(pre)pcmm_sy_sys.eps
            charts/@(pre)pcmm_tr_atl.eps charts/@(pre)pcmm_sy_atl.eps
            charts/@(pre)pcmm_tr_sys_pt.eps charts/@(pre)pcmm_sy_sys_pt.eps
            charts/@(pre)pcmm_tr_atl_pt.eps charts/@(pre)pcmm_sy_atl_pt.eps
            @whiledef rt mmsq mmrk laqr laql larq lalq lalu lalt laut
               charts/@(pre)@(rt)@(cmp)_tiny@(pt).eps
               charts/@(pre)@(rt)@(cmp)_med@(pt).eps
               charts/@(pre)@(rt)@(cmp)_lrg@(pt).eps
               charts/@(pre)@(rt)_@(cmp)@(pt).eps
            @endwhile
         @endwhile
      @endwhile
   @enddeclare
	latex atlv@(cmp)
	latex atlv@(cmp)
@endwhile

@define pt @@
@whiledef pt _pt
   @whiledef lib atl at2 sys
      @whiledef bs mmla pcmm mmqr
         @declare "@(bs)_@(lib)@(pt) : " y y
            @whiledef pre z c d s
               charts/@(pre)@(bs)_@(lib)@(pt).eps
            @endwhile
         @enddeclare
      @endwhile
   @endwhile
@endwhile

@whiledef pre z c d s
   @whiledef lib atl at2 sys
      @define pt @@
      @define pt @_pt@
      @whiledef st s t
         @declare "@(pre)@(st)atlv@(lib)_all: " y y
            @whiledef sz tiny med lrg
               charts/@(pre)mmsq@(lib)_@(sz)@(pt).eps
               charts/@(pre)mmrk@(lib)_@(sz)@(pt).eps
               @whiledef rt qr lu lt
                  charts/@(pre)la@(rt)@(lib)_@(sz)@(pt).eps
               @endwhile
            @endwhile
         @enddeclare
         @declare "@(pre)@(st)@(lib)_all: " y y
            charts/@(pre)mmla_@(lib)@(pt).eps
            charts/@(pre)pcmm_@(lib)@(pt).eps
         @enddeclare
         @undef pt
      @endwhile
   @endwhile

$(BINdir)/x@(pre)slatime_2l_2b :
	cd $(BINdir) ; $(MAKE) x@(pre)slatime_2l_2b AT2dir=$(AT2dir)
$(BINdir)/x@(pre)tlatime_2l_2b :
	cd $(BINdir) ; $(MAKE) x@(pre)tlatime_2l_2b AT2dir=$(AT2dir)
$(BINdir)/x@(pre)slatime_al_ab :
	cd $(BINdir) ; $(MAKE) x@(pre)slatime_al_ab
$(BINdir)/x@(pre)tlatime_al_ab :
	cd $(BINdir) ; $(MAKE) x@(pre)tlatime_al_ab
$(BINdir)/x@(pre)slatime_sl_sb :
	cd $(BINdir) ; $(MAKE) x@(pre)slatime_sl_sb
$(BINdir)/x@(pre)tlatime_sl_sb :
	cd $(BINdir) ; $(MAKE) x@(pre)tlatime_sl_sb
@whiledef lib sys at2
   @whiledef st s t
@(st)atlv@(lib)_all : s@(st)atlv@(lib)_all d@(st)atlv@(lib)_all c@(st)atlv@(lib)_all z@(st)atlv@(lib)_all
   @endwhile
@endwhile
   @define pt @@
   @multidef latm x@(pre)slatime x@(pre)tlatime
   @multidef tb 1 3
   @whiledef pt _pt
      @multidef tms _2l_2b _al_ab _sl_sb
      @whiledef bl at2 atl sys
         @iexp irk 3 @(tb) *
         @iexp ism 3 @(tb) *
         @iexp ime 2 @(tb) *
         @iexp ilr 1 @(tb) *
         @define usf @-S 1 r -U 1 l@
         @define usf @-S 1 l -U 1 l@
         @define usf @-S 1 l -U 1 u@
         @define usf @-S 1 r -U 1 u@
         @define usf @@
         @define usf @-U 1 l@
         @define usf @-U 1 u@
         @multidef frt gelqf geqlf gerqf geqrf getrf potrf potrf
         @whiledef rt lq ql rq qr lu lt ut
raw/@(pre)la@(rt)_tiny_@(bl)@(pt).out : $(BINdir)/@(latm)@(tms)
	- rm -f $@
	$(BINdir)/@(latm)@(tms) -F 40 -N 10 100 10 -# @(ism) -R 1 @(frt) \
           @(usf) > $@
raw/@(pre)la@(rt)_med_@(bl)@(pt).out : $(BINdir)/@(latm)@(tms)
	- rm -f $@
	$(BINdir)/@(latm)@(tms) -N 200 2000 200 -# @(ime) \
           @(usf) -R 1 @(frt) > $@
raw/@(pre)la@(rt)_lrg_@(bl)@(pt).out : $(BINdir)/@(latm)@(tms)
	- rm -f $@
	$(BINdir)/@(latm)@(tms) -N 2400 4000 400 -# @(ilr) -R 1 @(frt) \
           @(usf) > $@
            @undef usf
            @undef frt
         @endwhile

$(BINdir)/x@(pre)l3blastst_@(bl)@(pt) :
	cd $(BINdir) ; $(MAKE) x@(pre)l3blastst_@(bl)@(pt) AT2dir=$(AT2dir)
$(BINdir)/x@(pre)mmtst_@(bl)@(pt) :
	cd $(BINdir) ; $(MAKE) x@(pre)mmtst_@(bl)@(pt) AT2dir=$(AT2dir)
raw/@(pre)mmrk_tiny_@(bl)@(pt).out : $(BINdir)/x@(pre)mmtst_@(bl)@(pt)
	- rm -f $@
	$(BINdir)/x@(pre)mmtst_@(bl)@(pt) -F 120 -N 10 100 10 -k 8 -T 0 \
           -# @(irk) > $@
raw/@(pre)mmrk_med_@(bl)@(pt).out : $(BINdir)/x@(pre)mmtst_@(bl)@(pt)
	- rm -f $@
	$(BINdir)/x@(pre)mmtst_@(bl)@(pt) -F 120 -N 200 2000 200 -T 0 -k $(RK) \
           -# @(irk) > $@
raw/@(pre)mmrk_lrg_@(bl)@(pt).out : $(BINdir)/x@(pre)mmtst_@(bl)@(pt)
	- rm -f $@
	$(BINdir)/x@(pre)mmtst_@(bl)@(pt) -N 2400 4000 400 -T 0 -k $(RK) \
           -# @(irk) > $@
raw/@(pre)mmsq_tiny_@(bl)@(pt).out : $(BINdir)/x@(pre)mmtst_@(bl)@(pt)
	- rm -f $@
	$(BINdir)/x@(pre)mmtst_@(bl)@(pt) -F 120 -N 10 100 10 -T 0 \
           -# @(ism) > $@
raw/@(pre)mmsq_med_@(bl)@(pt).out : $(BINdir)/x@(pre)mmtst_@(bl)@(pt)
	- rm -f $@
	$(BINdir)/x@(pre)mmtst_@(bl)@(pt) -F 120 -N 200 2000 200 -T 0 \
           -# @(ime) > $@
raw/@(pre)mmsq_lrg_@(bl)@(pt).out : $(BINdir)/x@(pre)mmtst_@(bl)@(pt)
	- rm -f $@
	$(BINdir)/x@(pre)mmtst_@(bl)@(pt) -N 2400 4000 400 -T 0 -# 1 > $@
        @whiledef l3 symm hemm syrk herk syr2k her2k trmm trsm
           @whiledef sd L R
              @whiledef up U L
                 @whiledef ta N T C
raw/@(pre)@(l3)_@(sd)@(up)@(ta)_tiny_@(bl)@(pt).out : \
   $(BINdir)/x@(pre)l3blastst_@(bl)@(pt)
	$(BINdir)/x@(pre)l3blastst_@(bl)@(pt) -R @(l3) -S 1 @(sd) -U 1 @(up) \
           -A 1 @(ta) -F 120 -N 10 100 10 -T 0 -# @(ism) > $@
raw/@(pre)@(l3)_@(sd)@(up)@(ta)_med_@(bl)@(pt).out : \
   $(BINdir)/x@(pre)l3blastst_@(bl)@(pt)
	$(BINdir)/x@(pre)l3blastst_@(bl)@(pt) -R @(l3) -S 1 @(sd) -U 1 @(up) \
           -A 1 @(ta) -F 120 -N 200 2000 200 -T 0 -# @(ime) > $@
raw/@(pre)@(l3)_@(sd)@(up)@(ta)_lrg_@(bl)@(pt).out : \
   $(BINdir)/x@(pre)l3blastst_@(bl)@(pt)
	$(BINdir)/x@(pre)l3blastst_@(bl)@(pt) -R @(l3) -S 1 @(sd) -U 1 @(up) \
           -A 1 @(ta) -N 2400 4000 400 -T 0 -# 1 > $@
                 @endwhile
              @endwhile
           @endwhile
        @endwhile
	
         @multidef nr @(ism) @(ime) @(ilr)
         @whiledef sz tiny med lrg
            @whiledef rt lq ql rq qr lu lt ut
tvecs/@(pre)la@(rt)_@(sz)_@(bl)@(pt).tvec : raw/@(pre)la@(rt)_@(sz)_@(bl)@(pt).out xatl2tvec xreducetvec
	./xatl2tvec -# @(nr) -i raw/@(pre)la@(rt)_@(sz)_@(bl)@(pt).out \
           -H 2 N MFLOP | ./xreducetvec -o $@ -R 1 N -C 1 MFLOP
            @endwhile
            @undef nr
         @endwhile
         @iexp ii @(ism) 2 *
         @define nr @@(ii)@
         @iexp ii @(ime) 2 *
         @define nr @@(ii)@
         @define nr @2@
         @iexp irk @(irk) 2 *
         @whiledef sz tiny med lrg
            @whiledef rt symm hemm syrk herk syr2k her2k trmm trsm
               @whiledef sd L R
                  @whiledef up U L
                     @whiledef ta N T C
tvecs/@(pre)@(rt)_@(sd)@(up)@(ta)_@(sz)_@(bl)@(pt).tvec : xatl2tvec \
   xreducetvec raw/@(pre)@(rt)_@(sd)@(up)@(ta)_@(sz)_@(bl)@(pt).out
	./xatl2tvec -# @(nr) -H 2 N MFLOP \
           -i raw/@(pre)@(rt)_@(sd)@(up)@(ta)_@(sz)_@(bl)@(pt).out | \
             ./xreducetvec -o $@ -R 1 N -C 1 MFLOP
                     @endwhile
                  @endwhile
               @endwhile
tvecs/@(pre)@(rt)_@(sz)_@(bl)@(pt).tvec : xatl2tvec xreducetvec \
   raw/@(pre)@(rt)_LLN_@(sz)_@(bl)@(pt).out
	./xatl2tvec -# @(nr) -i raw/@(pre)@(rt)_LLN_@(sz)_@(bl)@(pt).out \
           -H 2 N MFLOP | ./xreducetvec -o $@ -R 1 N -C 1 MFLOP
            @endwhile
tvecs/@(pre)mmsq_@(sz)_@(bl)@(pt).tvec : raw/@(pre)mmsq_@(sz)_@(bl)@(pt).out xatl2tvec xreducetvec
	./xatl2tvec -# @(nr) -i raw/@(pre)mmsq_@(sz)_@(bl)@(pt).out \
           -H 2 N Mflop | ./xreducetvec -o $@ -R 1 N -C 1 MFLOP
tvecs/@(pre)mmrk_@(sz)_@(bl)@(pt).tvec : raw/@(pre)mmrk_@(sz)_@(bl)@(pt).out \
   xatl2tvec xreducetvec
	./xatl2tvec -# @(irk) -i raw/@(pre)mmrk_@(sz)_@(bl)@(pt).out \
           -H 2 N Mflop | ./xreducetvec -o $@ -R 1 N -C 1 MFLOP
            @undef nr
         @endwhile
         @undef tms
      @endwhile

      @multidef exp System ATLAS2
      @whiledef cmp sys at2
         @whiledef sz tiny med lrg
            @multidef frt gelqf geqlf gerqf geqrf getrf potrf potrf
            @whiledef sh lq ql rq qr lu lt ut
charts/@(pre)la@(sh)@(cmp)_@(sz)@(pt).dat : tvecs/@(pre)la@(sh)_@(sz)_atl@(pt).tvec \
   tvecs/@(pre)la@(sh)_@(sz)_@(cmp)@(pt).tvec xtvec2plp xcattvecs
	cat tvecs/@(pre)la@(sh)_@(sz)_atl@(pt).tvec \
            tvecs/@(pre)la@(sh)_@(sz)_@(cmp)@(pt).tvec | \
        ./xcattvecs -# 2 -c 1 N -C 1 MFLOP_avg | \
        ./xtvec2plp -o $@ -C 3 N MFLOP_avg MFLOP_avg_1
charts/@(pre)la@(sh)@(cmp)_@(sz)@(pt).eps : charts/@(pre)la@(sh)@(cmp)_@(sz)@(pt).dat
	$(MAKE) plotbars dataf=charts/@(pre)la@(sh)@(cmp)_@(sz)@(pt).dat \
           title="ATLAS vs. @(exp): @up@(pre)@up@(frt) @up@(sz)@(pt)" \
           nm1=atl nm2=@(cmp) outf=$@ 
               @undef frt
            @endwhile

            @whiledef sh sq rk
charts/@(pre)mm@(sh)@(cmp)_@(sz)@(pt).dat : tvecs/@(pre)mm@(sh)_@(sz)_atl@(pt).tvec \
   tvecs/@(pre)mm@(sh)_@(sz)_@(cmp)@(pt).tvec xtvec2plp xcattvecs
	cat tvecs/@(pre)mm@(sh)_@(sz)_atl@(pt).tvec \
            tvecs/@(pre)mm@(sh)_@(sz)_@(cmp)@(pt).tvec | \
        ./xcattvecs -# 2 -c 1 N -C 1 MFLOP_avg | \
        ./xtvec2plp -o $@ -C 3 N MFLOP_avg MFLOP_avg_1
charts/@(pre)mm@(sh)@(cmp)_@(sz)@(pt).eps : charts/@(pre)mm@(sh)@(cmp)_@(sz)@(pt).dat
	$(MAKE) plotbars dataf=charts/@(pre)mm@(sh)@(cmp)_@(sz)@(pt).dat \
           title="ATLAS vs. @(exp): @up@(pre)GEMM_@(sh) @up@(sz)@(pt)" \
           nm1=atl nm2=@(cmp) outf=$@ 
            @endwhile
         @endwhile
         @undef exp
      @endwhile
      @undef tb
      @undef latm
      @whiledef lib atl sys at2
         @whiledef sh lalq laql larq laqr lalu lalt laut mmsq mmrk
tvecs/@(pre)@(sh)_@(lib)@(pt).tvec: tvecs/@(pre)@(sh)_tiny_@(lib)@(pt).tvec \
   tvecs/@(pre)@(sh)_med_@(lib)@(pt).tvec tvecs/@(pre)@(sh)_lrg_@(lib)@(pt).tvec \
   xmergetvecs
	./xmergetvecs -r N -C 2 N MFLOP_avg \
           -i1 tvecs/@(pre)@(sh)_tiny_@(lib)@(pt).tvec \
           -i2 tvecs/@(pre)@(sh)_med_@(lib)@(pt).tvec | \
	./xmergetvecs -r N -C 2 N MFLOP_avg -o $@ \
           -i2 tvecs/@(pre)@(sh)_lrg_@(lib)@(pt).tvec 
         @endwhile
tvecs/@(pre)laqrs_@(lib)@(pt).tvec : xcattvecs \
   tvecs/@(pre)laqr_@(lib)@(pt).tvec tvecs/@(pre)larq_@(lib)@(pt).tvec \
   tvecs/@(pre)lalq_@(lib)@(pt).tvec tvecs/@(pre)laql_@(lib)@(pt).tvec 
	cat tvecs/@(pre)laqr_@(lib)@(pt).tvec \
            tvecs/@(pre)larq_@(lib)@(pt).tvec tvecs/@(pre)lalq_@(lib)@(pt).tvec \
            tvecs/@(pre)laql_@(lib)@(pt).tvec | \
        ./xcattvecs -# 4 -o $@ -C 2 N MFLOP_avg
tvecs/@(pre)mmlqs_@(lib)@(pt).tvec : xcattvecs \
   tvecs/@(pre)mmsq_@(lib)@(pt).tvec tvecs/@(pre)lalu_@(lib)@(pt).tvec \
   tvecs/@(pre)laqr_@(lib)@(pt).tvec tvecs/@(pre)larq_@(lib)@(pt).tvec \
   tvecs/@(pre)lalq_@(lib)@(pt).tvec tvecs/@(pre)laql_@(lib)@(pt).tvec 
	cat tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
           tvecs/@(pre)lalu_@(lib)@(pt).tvec \
           tvecs/@(pre)laqr_@(lib)@(pt).tvec tvecs/@(pre)larq_@(lib)@(pt).tvec \
           tvecs/@(pre)lalq_@(lib)@(pt).tvec tvecs/@(pre)laql_@(lib)@(pt).tvec \
           | ./xcattvecs -# 6 -o $@ -C 2 N MFLOP_avg
tvecs/@(pre)mmqr_@(lib)@(pt).tvec : xcattvecs \
   tvecs/@(pre)mmrk_@(lib)@(pt).tvec \
   tvecs/@(pre)laqr_@(lib)@(pt).tvec tvecs/@(pre)larq_@(lib)@(pt).tvec \
   tvecs/@(pre)lalq_@(lib)@(pt).tvec tvecs/@(pre)laql_@(lib)@(pt).tvec 
	cat tvecs/@(pre)mmrk_@(lib)@(pt).tvec \
           tvecs/@(pre)laqr_@(lib)@(pt).tvec \
           tvecs/@(pre)larq_@(lib)@(pt).tvec tvecs/@(pre)lalq_@(lib)@(pt).tvec \
           tvecs/@(pre)laql_@(lib)@(pt).tvec | \
        ./xcattvecs -# 5 -o $@ -C 2 N MFLOP_avg
tvecs/@(pre)mmla_@(lib)@(pt).tvec : xcattvecs \
   tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
   tvecs/@(pre)lalu_@(lib)@(pt).tvec tvecs/@(pre)laqr_@(lib)@(pt).tvec \
   tvecs/@(pre)lalt_@(lib)@(pt).tvec 
	cat tvecs/@(pre)mmsq_@(lib)@(pt).tvec tvecs/@(pre)lalu_@(lib)@(pt).tvec \
            tvecs/@(pre)laqr_@(lib)@(pt).tvec tvecs/@(pre)lalt_@(lib)@(pt).tvec | \
        ./xcattvecs -# 4 -o $@ -C 2 N MFLOP_avg
tvecs/@(pre)pclqs_@(lib)@(pt).tvec : xperctvecs \
   tvecs/@(pre)mmlqs_@(lib)@(pt).tvec
	./xperctvecs -i tvecs/@(pre)mmlqs_@(lib)@(pt).tvec -b MFLOP_avg -C 1 N \
           -R 5 MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg_4 MFLOP_avg_5 \
           -o $@
tvecs/@(pre)pcmm_@(lib)@(pt).tvec : tvecs/@(pre)mmla_@(lib)@(pt).tvec xperctvecs
	./xperctvecs -i tvecs/@(pre)mmla_@(lib)@(pt).tvec -b MFLOP_avg -C 1 N \
           -R 3 MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 -o $@
charts/@(pre)pcmm_@(lib)@(pt).dat : tvecs/@(pre)pcmm_@(lib)@(pt).tvec xtvec2plp
	./xtvec2plp -i tvecs/@(pre)pcmm_@(lib)@(pt).tvec -o $@ \
           -C 5 N MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg
charts/@(pre)mmqr_@(lib)@(pt).dat : tvecs/@(pre)mmqr_@(lib)@(pt).tvec xtvec2plp
	./xtvec2plp -i tvecs/@(pre)mmqr_@(lib)@(pt).tvec -o $@ \
           -C 6 N MFLOP_avg MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg_4
tvecs/@(pre)pcqrs_@(lib)@(pt).tvec : xperctvecs \
   tvecs/@(pre)mmqr_@(lib)@(pt).tvec
	./xperctvecs -i tvecs/@(pre)mmqr_@(lib)@(pt).tvec -b MFLOP_avg -C 1 N \
           -R 4 MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg_4 -o $@
charts/@(pre)laqrs_@(lib)@(pt).dat : xtvec2plp \
   tvecs/@(pre)laqrs_@(lib)@(pt).tvec xtvec2plp
	./xtvec2plp -i tvecs/@(pre)laqrs_@(lib)@(pt).tvec -o $@ \
           -C 5 N MFLOP_avg MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3
charts/@(pre)pclqs_@(lib)@(pt).dat : xtvec2plp \
   tvecs/@(pre)pclqs_@(lib)@(pt).tvec
	./xtvec2plp -i tvecs/@(pre)pclqs_@(lib)@(pt).tvec -o $@ \
           -C 7 N MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg_4 MFLOP_avg_5 \
                  MFLOP_avg
charts/@(pre)pclqs_@(lib)@(pt).eps : charts/@(pre)pclqs_@(lib)@(pt).dat \
   $(ext) $(mySRCdir)/report.base
	$(ext) -b $(mySRCdir)/report.base -o tmp.pls rout=pclinechart \
               -def datf "charts/@(pre)pclqs_@(lib)@(pt).dat" \
               -def nlines "5" -def labs "LU QR RQ LQ QL"
	$(PLOT) tmp.pls -eps -o $@
charts/@(pre)pcqrs_@(lib)@(pt).dat : xtvec2plp \
   tvecs/@(pre)pcqrs_@(lib)@(pt).tvec
	./xtvec2plp -i tvecs/@(pre)pcqrs_@(lib)@(pt).tvec -o $@ \
           -C 5 N MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg
charts/@(pre)pcqrs_@(lib)@(pt).eps : charts/@(pre)pcqrs_@(lib)@(pt).dat
	$(MAKE) plot4lines_perc dataf=charts/@(pre)pcqrs_@(lib)@(pt).dat \
           outf=$@ nm1=QR nm2=RQ nm3=LQ nm4=QL \
           title="@(lib)@(pt) @up@(pre)QR Variant Performance as a % of @(lib)-@(pre)rk$(RK)@(pt) of same size"
charts/@(pre)laqrs_@(lib)@(pt).eps : charts/@(pre)laqrs_@(lib)@(pt).dat
	$(MAKE) plot4lines dataf=charts/@(pre)laqrs_@(lib)@(pt).dat outf=$@ \
           nm1=QR nm2=RQ nm3=LQ nm4=QL \
           title="@(lib)@(pt) @up@(pre)QR Variant Performance"
charts/@(pre)mmla_@(lib)@(pt).dat : tvecs/@(pre)mmla_@(lib)@(pt).tvec xtvec2plp
	./xtvec2plp -i tvecs/@(pre)mmla_@(lib)@(pt).tvec -o $@ \
           -C 5 N MFLOP_avg MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3
charts/@(pre)mmla_@(lib)@(pt).eps : charts/@(pre)mmla_@(lib)@(pt).dat
	$(MAKE) plot4lines dataf=charts/@(pre)mmla_@(lib)@(pt).dat outf=$@ \
           nm1=GEMM nm2=LU nm3=QR nm4=LLT \
           title="@(lib)@(pt) @up@(pre)GEMM & Factorization Performance"
charts/@(pre)pcmm_@(lib)@(pt).eps : charts/@(pre)pcmm_@(lib)@(pt).dat
	$(MAKE) plot3lines_perc dataf=charts/@(pre)pcmm_@(lib)@(pt).dat \
           outf=$@ nm1=LU nm2=QR nm3=LLT ylab="% of @(pre)GEMM" \
title="Factorization performance as a % of @(lib)-@(pre)GEMM@(pt) of same size"

@whiledef rt symm syrk syr2k trsm trmm hemm her2k
tvecs/@(pre)@(rt)_@(lib)@(pt).tvec : xmergetvecs \
   tvecs/@(pre)@(rt)_tiny_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_med_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_lrg_@(lib)@(pt).tvec 
	./xmergetvecs -r N -C 2 N MFLOP_avg \
           -i1 tvecs/@(pre)@(rt)_tiny_@(lib)@(pt).tvec \
           -i2 tvecs/@(pre)@(rt)_med_@(lib)@(pt).tvec | \
        ./xmergetvecs -r N -C 2 N MFLOP_avg -o $@ \
           -i2 tvecs/@(pre)@(rt)_lrg_@(lib)@(pt).tvec 
@endwhile
tvecs/@(pre)mmtr_@(lib)@(pt).tvec : xcattvecs \
   tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
   tvecs/@(pre)trmm_@(lib)@(pt).tvec tvecs/@(pre)trsm_@(lib)@(pt).tvec 
	cat tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
            tvecs/@(pre)trmm_@(lib)@(pt).tvec \
            tvecs/@(pre)trsm_@(lib)@(pt).tvec | \
            ./xcattvecs -# 3 -o $@ -C 2 N MFLOP_avg
tvecs/@(pre)mmsy_@(lib)@(pt).tvec : xcattvecs \
   tvecs/@(pre)mmsq_@(lib)@(pt).tvec tvecs/@(pre)symm_@(lib)@(pt).tvec \
   tvecs/@(pre)syrk_@(lib)@(pt).tvec tvecs/@(pre)syr2k_@(lib)@(pt).tvec 
	cat tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
            tvecs/@(pre)symm_@(lib)@(pt).tvec \
            tvecs/@(pre)syrk_@(lib)@(pt).tvec \
            tvecs/@(pre)syr2k_@(lib)@(pt).tvec | \
            ./xcattvecs -# 4 -o $@ -C 2 N MFLOP_avg
tvecs/@(pre)pcsy_@(lib)@(pt).tvec : xperctvecs tvecs/@(pre)mmsy_@(lib)@(pt).tvec
	./xperctvecs -i tvecs/@(pre)mmsy_@(lib)@(pt).tvec -b MFLOP_avg -C 1 N \
           -R 3 MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3  -o $@
tvecs/@(pre)pctr_@(lib)@(pt).tvec : xperctvecs tvecs/@(pre)mmtr_@(lib)@(pt).tvec
	./xperctvecs -i tvecs/@(pre)mmtr_@(lib)@(pt).tvec -b MFLOP_avg -C 1 N \
           -R 2 MFLOP_avg_1 MFLOP_avg_2 -o $@
charts/@(pre)pcmm_tr_@(lib)@(pt).dat : tvecs/@(pre)pctr_@(lib)@(pt).tvec \
   xtvec2plp
	./xtvec2plp -i tvecs/@(pre)pctr_@(lib)@(pt).tvec -o $@ \
           -C 4 N MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg
charts/@(pre)pcmm_sy_@(lib)@(pt).dat : tvecs/@(pre)pcsy_@(lib)@(pt).tvec \
   xtvec2plp
	./xtvec2plp -i tvecs/@(pre)pcsy_@(lib)@(pt).tvec -o $@ \
           -C 5 N MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg
charts/@(pre)pcmm_tr_@(lib)@(pt).eps : charts/@(pre)pcmm_tr_@(lib)@(pt).dat
	$(MAKE) plot2lines_perc dataf=charts/@(pre)pcmm_tr_@(lib)@(pt).dat \
           outf=$@ nm1=TRMM nm2=TRSM ylab="% of @(pre)GEMM" \
title="Triangular performance as a % of @(lib)-@(pre)GEMM@(pt) of same size"
charts/@(pre)pcmm_sy_@(lib)@(pt).eps : charts/@(pre)pcmm_sy_@(lib)@(pt).dat
	$(MAKE) plot3lines_perc dataf=charts/@(pre)pcmm_sy_@(lib)@(pt).dat \
           outf=$@ nm1=SYMM nm2=SYRK nm3=SYR2K ylab="% of @(pre)GEMM" \
title="Symmetric performance as a % of @(lib)-@(pre)GEMM@(pt) of same size"

@whiledef rt symm syrk syr2k trsm trmm hemm her2k
   @whiledef sd L R
      @whiledef up U L
         @whiledef ta N T C
tvecs/@(pre)@(rt)_@(sd)@(up)@(ta)_@(lib)@(pt).tvec : xmergetvecs \
   tvecs/@(pre)@(rt)_@(sd)@(up)@(ta)_tiny_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_@(sd)@(up)@(ta)_med_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_@(sd)@(up)@(ta)_lrg_@(lib)@(pt).tvec 
	./xmergetvecs -r N -C 2 N MFLOP_avg \
           -i1 tvecs/@(pre)@(rt)_@(sd)@(up)@(ta)_tiny_@(lib)@(pt).tvec \
           -i2 tvecs/@(pre)@(rt)_@(sd)@(up)@(ta)_med_@(lib)@(pt).tvec | \
        ./xmergetvecs -r N -C 2 N MFLOP_avg -o $@ \
           -i2 tvecs/@(pre)@(rt)_@(sd)@(up)@(ta)_lrg_@(lib)@(pt).tvec 
         @endwhile
      @endwhile
   @endwhile
@endwhile
@whiledef rt trsm trmm
   @whiledef ta N T C
tvecs/@(pre)mm@(rt)_@(ta)_@(lib)@(pt).tvec : xcattvecs \
   tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_LU@(ta)_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_LL@(ta)_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_RU@(ta)_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_RL@(ta)_@(lib)@(pt).tvec 
	cat tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_LU@(ta)_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_LL@(ta)_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_RU@(ta)_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_RL@(ta)_@(lib)@(pt).tvec \
            | ./xcattvecs -# 5 -o $@ -C 2 N MFLOP_avg
tvecs/@(pre)pc@(rt)_@(ta)_@(lib)@(pt).tvec : xperctvecs \
   tvecs/@(pre)mm@(rt)_@(ta)_@(lib)@(pt).tvec
	./xperctvecs -i tvecs/@(pre)mm@(rt)_@(ta)_@(lib)@(pt).tvec \
           -R 4 MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3  MFLOP_avg_4 \
           -b MFLOP_avg -C 1 N -o $@
charts/@(pre)pcmm_@(rt)_@(ta)_@(lib)@(pt).dat : xtvec2plp \
   tvecs/@(pre)pc@(rt)_@(ta)_@(lib)@(pt).tvec 
	./xtvec2plp -i tvecs/@(pre)pc@(rt)_@(ta)_@(lib)@(pt).tvec -o $@ \
           -C 6 N MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg_4 MFLOP_avg
charts/@(pre)pcmm_@(rt)_@(ta)_@(lib)@(pt).eps : \
   charts/@(pre)pcmm_@(rt)_@(ta)_@(lib)@(pt).dat
	$(MAKE) plot4lines_perc \
           dataf=charts/@(pre)pcmm_@(rt)_@(ta)_@(lib)@(pt).dat \
           outf=$@ nm1='Left,Upper' nm2='Left,Lower' nm3='Right,Upper' \
           nm4='Right,Lower' ylab="% of @(pre)GEMM" \
title="@up@(rt)_@(ta) variant performance as a % of @(lib)-@(pre)GEMM@(pt) of same size"
   @endwhile
@endwhile
@whiledef rt symm hemm
tvecs/@(pre)mm@(rt)_@(lib)@(pt).tvec : xcattvecs \
   tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_LUN_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_LLN_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_RUN_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_RLN_@(lib)@(pt).tvec 
	cat tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_LUN_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_LLN_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_RUN_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_RLN_@(lib)@(pt).tvec \
            | ./xcattvecs -# 5 -o $@ -C 2 N MFLOP_avg
tvecs/@(pre)pc@(rt)_@(lib)@(pt).tvec : xperctvecs \
   tvecs/@(pre)mm@(rt)_@(lib)@(pt).tvec
	./xperctvecs -i tvecs/@(pre)mm@(rt)_@(lib)@(pt).tvec -b MFLOP_avg \
           -C 1 N -R 4 MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3  MFLOP_avg_4 -o $@
charts/@(pre)pcmm_@(rt)_@(lib)@(pt).dat : xtvec2plp \
   tvecs/@(pre)pc@(rt)_@(lib)@(pt).tvec 
	./xtvec2plp -i tvecs/@(pre)pc@(rt)_@(lib)@(pt).tvec -o $@ \
           -C 6 N MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg_4 MFLOP_avg
charts/@(pre)pcmm_@(rt)_@(lib)@(pt).eps : \
   charts/@(pre)pcmm_@(rt)_@(lib)@(pt).dat
	$(MAKE) plot4lines_perc dataf=charts/@(pre)pcmm_@(rt)_@(lib)@(pt).dat \
           outf=$@ nm1='Left,Upper' nm2='Left,Lower' nm3='Right,Upper' \
           nm4='Right,Lower' ylab="% of @(pre)GEMM" \
title="@up@(rt) variant performance as a % of @(lib)-@(pre)GEMM@(pt) of same size"
@endwhile
@whiledef rt syrk herk syr2k her2k
tvecs/@(pre)mm@(rt)_@(lib)@(pt).tvec : xcattvecs \
   tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_LUN_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_LLN_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_LUT_@(lib)@(pt).tvec \
   tvecs/@(pre)@(rt)_LLT_@(lib)@(pt).tvec 
	cat tvecs/@(pre)mmsq_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_LUN_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_LLN_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_LUT_@(lib)@(pt).tvec \
            tvecs/@(pre)@(rt)_LLT_@(lib)@(pt).tvec \
            | ./xcattvecs -# 5 -o $@ -C 2 N MFLOP_avg
tvecs/@(pre)pc@(rt)_@(lib)@(pt).tvec : xperctvecs \
   tvecs/@(pre)mm@(rt)_@(lib)@(pt).tvec
	./xperctvecs -i tvecs/@(pre)mm@(rt)_@(lib)@(pt).tvec -b MFLOP_avg \
           -C 1 N -R 4 MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3  MFLOP_avg_4 -o $@
charts/@(pre)pcmm_@(rt)_@(lib)@(pt).dat : xtvec2plp \
   tvecs/@(pre)pc@(rt)_@(lib)@(pt).tvec 
	./xtvec2plp -i tvecs/@(pre)pc@(rt)_@(lib)@(pt).tvec -o $@ \
           -C 6 N MFLOP_avg_1 MFLOP_avg_2 MFLOP_avg_3 MFLOP_avg_4 MFLOP_avg
charts/@(pre)pcmm_@(rt)_@(lib)@(pt).eps : \
   charts/@(pre)pcmm_@(rt)_@(lib)@(pt).dat
	$(MAKE) plot4lines_perc dataf=charts/@(pre)pcmm_@(rt)_@(lib)@(pt).dat \
           outf=$@ nm1='Upper,NoTr' nm2='Lower,NoTr' nm3='Upper,Trans' \
           nm4='Lower,Trans' ylab="% of @(pre)GEMM" \
title="@up@(rt) variant performance as a % of @(lib)-@(pre)GEMM@(pt) of same size"
@endwhile
      @endwhile
   @endwhile
   @multidef rtt 
      gemm RK$(RK) geqrf gerqf gelqf geqlf getrf potrfL potrfU
      symm hemm syrk herk syr2k her2k trmm trsm
   @endmultidef
   @multidef rt
      mmsq mmrk    laqr  larq  lalq  laql  lalu  lalt   laut
      symm hemm syrk herk syr2k her2k trmm trsm
   @endmultidef
   @whiledef rt
      @define pt @@
      @whiledef pt _pt
tvecs/@(pre)@(rt)_atl_ml@(pt).tvec : xmergetvecs \
   tvecs/@(pre)@(rt)_med_atl@(pt).tvec \
   tvecs/@(pre)@(rt)_lrg_atl@(pt).tvec
	./xmergetvecs -r N -C 2 N MFLOP_avg \
           -i1 tvecs/@(pre)@(rt)_med_atl@(pt).tvec \
           -i2 tvecs/@(pre)@(rt)_lrg_atl@(pt).tvec -o $@
         @whiledef cmp sys at2
tvecs/@(pre)@(rt)_@(cmp)_ml@(pt).tvec : xmergetvecs \
   tvecs/@(pre)@(rt)_med_@(cmp)@(pt).tvec \
   tvecs/@(pre)@(rt)_lrg_@(cmp)@(pt).tvec
	./xmergetvecs -r N -C 2 N MFLOP_avg \
           -i1 tvecs/@(pre)@(rt)_med_@(cmp)@(pt).tvec \
           -i2 tvecs/@(pre)@(rt)_lrg_@(cmp)@(pt).tvec -o $@
charts/@(pre)@(rt)_@(cmp)@(pt).dat: tvecs/@(pre)@(rt)_@(cmp)_ml@(pt).tvec \
   tvecs/@(pre)@(rt)_atl_ml@(pt).tvec xcattvecs xtvec2plp
	cat tvecs tvecs/@(pre)@(rt)_atl_ml@(pt).tvec \
           tvecs/@(pre)@(rt)_@(cmp)_ml@(pt).tvec | \
           ./xcattvecs -# 2 -c 1 N -C 1 MFLOP_avg | \
           ./xtvec2plp -o $@ -C 3 N MFLOP_avg MFLOP_avg_1
charts/@(pre)@(rt)_@(cmp)@(pt).eps : charts/@(pre)@(rt)_@(cmp)@(pt).dat
	$(MAKE) plotbars dataf=charts/@(pre)@(rt)_@(cmp)@(pt).dat \
        title="ATLAS vs. System: @up@(pre)@up@(rtt)@(pt)" \
        nm1=atl nm2=sys sep=0.13 outf=$@
         @endwhile
      @endwhile
      @undef rtt
   @endwhile
@endwhile

eps2pdf :
	epstopdf $fin $fout
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, ylab
#
plot2lines_perc:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 \
           title="$(title)" name=$(nm1) name2=$(nm2) yinc=10 \
           xlbl="Problem Order" ylbl="$(ylab)" xlbldistance=0.6 ygrid=yes \
           legend="2.6 2.2" "yrange=0 100" legendfmt=across -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, ylab
#
plot3lines_perc:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 y3=4 \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) yinc=10 \
           xlbl="Problem Order" ylbl="$(ylab)" xlbldistance=0.6 ygrid=yes \
           legend="2.4 2.2" "yrange=0 100" legendfmt=across -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, nm4, ylab
#
plot4lines_perc:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 y3=4 y4=5 \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) name4=$(nm4) \
           yinc=10 xlbl="Problem Order" ylbl="$(ylab)" xlbldistance=0.6 \
           ygrid=yes legend="1.0 1.2" "yrange=0 100" legendfmt=across \
           -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, nm4
#
plot4lines:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 y3=4 y4=5 \
           title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) name4=$(nm4) \
           xlbl="Problem Order" ylbl="MFLOPS" xlbldistance=0.6 ygrid=yes \
           ylbldistance=0.6 legend="2.0 max" yrange=0 legendfmt=across \
           -eps -o $(outf)
#
#MUST DEFINE: dataf, title, outf, nm1, nm2, nm3, nm4, nm5
#
plot5lines:
	$(PLOT) -prefab lines data=$(dataf) dilim=tab x=1 y=2 y2=3 y3=4 y4=5 \
           y5=6, title="$(title)" name=$(nm1) name2=$(nm2) name3=$(nm3) \
           name4=$(nm4) name5=$(nm5) \
           xlbl="Problem Order" ylbl="MFLOPS" xlbldistance=0.6 ygrid=yes \
           ylbldistance=0.6 legend="2.0 max" yrange=0 legendfmt=across \
           -eps -o $(outf)
#MUST DEFINE: dataf, title, outf, nm1, nm2
#CAN DEFINED: sep
plotbars :
	$(PLOT) -prefab vbars data=$(dataf) delim=tab x=1 y=2 \
           y2=3 barwidth=0.1 title="$(title)" name=$(nm1) name2=$(nm2) \
           stubvert=yes ygrid=yes sep=$(sep) yrange=0 legframe=yes \
           xlbl="Problem Order" ylbl="MFLOPS" legendfmt=across \
           ylbldistance=0.6 xlbldistance=0.6 legend="2.7 max" \
           -eps -o $(outf)

@whiledef rt stattime atl2tvec
x@(rt) : $(mySRCdir)/@(rt).c
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/@(rt).c -lm
@endwhile
@whiledef rt mergetvecs reducetvec tvec2plp cattvecs perctvecs
x@(rt) : $(mySRCdir)/@(rt).c $(INCSdir)/atlas_tvec.h
	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/@(rt).c -lm
@endwhile
@ROUT Make.empty Make.l1src-cplx Make.mvsrc-real Make.mvsrc-cplx Make.l3src-real Make.l3src-cplx
@ROUT Make.empty Make.l1src-cplx Make.mvsrc-real Make.mvsrc-cplx Make.l3src-real Make.l3src-cplx
@multidef typ complex16 complex double single
@whiledef pre z c d s
@(typ) : @(pre)lib
@(pre)lib:
   @undef typ
@endwhile
startup:
clean:
kill:
@ROUT Make.kbmm
include Make.inc
mySRCdir = $(SRCdir)/src/blas/kbmm

@whiledef pre s d c z
   @declare "@(pre)obj = " y y
      @whiledef rout mat2blkT mat2blk
         @whiledef al 1 X
            ATL_@(pre)@(rout)_a@(al).o
         @endwhile
      @endwhile
      @whiledef rout GetMMBlockings rankK
         ATL_@(pre)@(rout).o
      @endwhile
   @enddeclare
@endwhile

all : lib
lib : dlib slib clib zlib

@whiledef pre s d c z
@(pre)lib :
	cd KBMMS ; make -f @(pre)Make.vKB @(pre)lib
	$(MAKE) @(pre)lib.grd
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd

@endwhile

@multidef typ SREAL DREAL SCPLX DCPLX
@whiledef pre s d c z
@(pre)INCdep = $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_type.h \
          $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_prefetch.h \
          $(INCAdir)/atlas_@(pre)vkbmms.h

   @whiledef rout mat2blkT mat2blk 
      @whiledef al 1 X
ATL_@(pre)@(rout)_a@(al).o : $(mySRCdir)/ATL_@(rout).c $(@(pre)INCdep)
	$(SKC) -o $@ $(@(pre)KCFLAGS) -c -D@(typ) -DALPHA@(al) \
               $(mySRCdir)/ATL_@(rout).c
      @endwhile
   @endwhile
   @whiledef rout GetMMBlockings
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(@(pre)INCdep) \
                      $(INCAdir)/atlas_@(pre)vkbmms_nbs.h
	$(SKC) -o $@ $(@(pre)KCFLAGS) -c -D@(typ) $(mySRCdir)/ATL_@(rout).c
   @endwhile
   @whiledef rout rankK
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(@(pre)INCdep)
	$(SKC) -o $@ $(@(pre)KCFLAGS) -c -D@(typ) $(mySRCdir)/ATL_@(rout).c
   @endwhile
   @undef typ
@endwhile

@ROUT Make.src Make.mmsrc0 Make.l1srcO

all : lib
lib : dlib slib clib zlib
double    : dlib
single    : slib
complex   : clib
complex16 : zlib

slib :
	$(MAKE) -f Make.real slib pre=s typ=SREAL
dlib :
	$(MAKE) -f Make.real dlib pre=d typ=DREAL
clib :
	$(MAKE) -f Make.cplx clib pre=c typ=SCPLX
zlib :
	$(MAKE) -f Make.cplx zlib pre=z typ=DCPLX

clean :
	$(MAKE) -f Make.real clean pre=s
	$(MAKE) -f Make.real clean pre=d
	$(MAKE) -f Make.cplx clean pre=s
	$(MAKE) -f Make.cplx clean pre=d

@ROUT Make.l1src-real Make.mmsrc-real Make.mmsrc-cplx
include Make.inc

$(INCAdir)/atlas_type.h : 
	cd $(SYSdir) ; $(MAKE) RunTyp

@ROUT Make.l1src-real
INCdep = $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_type.h \
         $(INCAdir)/atlas_archinfo.h

obj = $(pre)scal.o ATL_$(pre)scal.o

lib : $(obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(obj)
	$(RANLIB) $(ATLASlib)

@declare "ATL_$(pre)scal.o : " y n
 $(mySRCdir)/scal.c $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_f77.h 
                   $(INCAdir)/atlas_type.h
$(L1Bdir)/ATL_$(pre)scal_a0_1.c 
$(L1Bdir)/ATL_$(pre)scal_a0_2.c $(L1Bdir)/ATL_$(pre)scal_a0_X.c
$(L1Bdir)/ATL_$(pre)scal_aX_1.c 
$(L1Bdir)/ATL_$(pre)scal_aX_2.c $(L1Bdir)/ATL_$(pre)scal_aX_X.c
$(L1Bdir)/ATL_$(pre)scal_an1_1.c 
$(L1Bdir)/ATL_$(pre)scal_an1_2.c $(L1Bdir)/ATL_$(pre)scal_an1_X.c
@enddeclare
	$(KC) -o $@ -c $(CDEFS) $(M0MFLAGS) -DATLSCAL -D$(typ) $(mySRCdir)/scal.c -I$(L1Bdir)

@declare "$(pre)scal.o : " y n
 $(mySRCdir)/scal.c $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_f77.h 
                   $(INCAdir)/atlas_type.h
$(L1Bdir)/ATL_$(pre)scal_a0_1.c 
$(L1Bdir)/ATL_$(pre)scal_a0_2.c $(L1Bdir)/ATL_$(pre)scal_a0_X.c
$(L1Bdir)/ATL_$(pre)scal_aX_1.c 
$(L1Bdir)/ATL_$(pre)scal_aX_2.c $(L1Bdir)/ATL_$(pre)scal_aX_X.c
$(L1Bdir)/ATL_$(pre)scal_an1_1.c 
$(L1Bdir)/ATL_$(pre)scal_an1_2.c $(L1Bdir)/ATL_$(pre)scal_an1_X.c
@enddeclare
	$(KC) -o $@ -c $(CDEFS) $(M0MFLAGS) -D$(typ) $(mySRCdir)/scal.c -I$(L1Bdir)

@skip $(pre)scal.o : $(mySRCdir)/scal.c $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_f77.h \
@skip 	$(KC) -o $@ -c $(CDEFS) $(MM0FLAGS) -D$(typ) $(mySRCdir)/scal.c -I$(L1Bdir)


@ROUT Make.L3KERN
include Make.inc
mySRCdir = $(SRCdir)/src/blas/level3/kernel

@whiledef pre z c d s
   @addkeys ptyp=@(pre)
   @declare "@(pre)obj = " y y
      @PTYP D S
@skip         ATL_@(pre)trsmK_LLNU_a1.o
         ATL_@(pre)trsmKL_rk4.o ATL_@(pre)trsmKR_rk4.o ATL_@(pre)trsmKL_amm.o
         ATL_@(pre)trsmK_L2blk.o ATL_@(pre)trsmKLU_rk4.o
         @whiledef a X 1
            ATL_@(pre)sycopyU_a@(a).o ATL_@(pre)sycopyL_a@(a).o
            ATL_@(pre)trcopyL2U_N_a@(a).o ATL_@(pre)trcopyL2L_N_a@(a).o
            ATL_@(pre)trcopyU2U_N_a@(a).o ATL_@(pre)trcopyU2L_N_a@(a).o
            ATL_@(pre)trcopyL2U_U_a@(a).o ATL_@(pre)trcopyL2L_U_a@(a).o
            ATL_@(pre)trcopyU2U_U_a@(a).o ATL_@(pre)trcopyU2L_U_a@(a).o
         @endwhile
	 ATL_@(pre)trsmKRUNN.o ATL_@(pre)trsmKRUNU.o
	 ATL_@(pre)trsmKRLNN.o ATL_@(pre)trsmKRLNU.o
	 ATL_@(pre)trsmKLUNN.o ATL_@(pre)trsmKLUNU.o
	 ATL_@(pre)trsmKLLNN.o ATL_@(pre)trsmKLLNU.o
      @PTYP C Z 
         ATL_@(pre)ctrsmKL_rk2.o ATL_@(pre)ctrsmKR_rk2.o
         ATL_@(pre)hecopyL.o ATL_@(pre)hecopyU.o
         ATL_@(pre)sycopyU.o ATL_@(pre)sycopyL.o
         ATL_@(pre)trcopyL2U_N.o ATL_@(pre)trcopyL2L_N.o
         ATL_@(pre)trcopyU2U_N.o ATL_@(pre)trcopyU2L_N.o
         ATL_@(pre)trcopyL2U_U.o ATL_@(pre)trcopyL2L_U.o
         ATL_@(pre)trcopyU2U_U.o ATL_@(pre)trcopyU2L_U.o
         ATL_@(pre)trcopyL2Uc_N.o ATL_@(pre)trcopyL2Lc_N.o
         ATL_@(pre)trcopyU2Uc_N.o ATL_@(pre)trcopyU2Lc_N.o
         ATL_@(pre)trcopyL2Uc_U.o ATL_@(pre)trcopyL2Lc_U.o
         ATL_@(pre)trcopyU2Uc_U.o ATL_@(pre)trcopyU2Lc_U.o
         ATL_@(pre)CtrsmKL.o ATL_@(pre)CtrsmKR.o
      @PTYP !
      @whiledef side R L
	 @whiledef uplo L U
            @PTYP C Z `ATL_@(pre)hemm@(side)@(uplo).o`
	    ATL_@(pre)symm@(side)@(uplo).o
            @PTYP C Z `@define tran @C@`
	    @whiledef tran N T
	       @whiledef diag N U
	          ATL_@(pre)trmm@(side)@(uplo)@(tran)@(diag).o
	          ATL_@(pre)trsm@(side)@(uplo)@(tran)@(diag).o
	       @endwhile
	    @endwhile
	 @endwhile
      @endwhile
      ATL_@(pre)trinvertUU.o ATL_@(pre)trinvertUN.o
      ATL_@(pre)trinvertLU.o ATL_@(pre)trinvertLN.o
      @PTYP C Z
         @whiledef be 1 0 Xi0
            ATL_@(pre)her2k_putL_b@(be).o ATL_@(pre)her2k_putU_b@(be).o
            ATL_@(pre)heputL_b@(be).o ATL_@(pre)heputU_b@(be).o
         @endwhile
      @PTYP !
      @whiledef be 1 0 X
         ATL_@(pre)trputL_b@(be).o ATL_@(pre)trputU_b@(be).o
	 ATL_@(pre)syr2k_putL_b@(be).o ATL_@(pre)syr2k_putU_b@(be).o
      @endwhile
      @PTYP C Z
         ATL_@(pre)trmv_scalUNU_an1.o ATL_@(pre)trmv_scalUNN_aX.o
         ATL_@(pre)trmv_scalLNU_an1.o ATL_@(pre)trmv_scalLNN_aX.o
         ATL_@(pre)trputL_bn1.o ATL_@(pre)trputU_bn1.o
         ATL_@(pre)trputL_bXi0.o ATL_@(pre)trputU_bXi0.o
	 ATL_@(pre)syr2k_putL_bn1.o ATL_@(pre)syr2k_putU_bn1.o 
         ATL_@(pre)syr2k_putL_bXi0.o ATL_@(pre)syr2k_putU_bXi0.o
      @PTYP !
      @whiledef trans T N
         @whiledef uplo U L
            @PTYP C Z
	       ATL_@(pre)herk@(uplo)@(trans).o ATL_@(pre)her2k@(uplo)@(trans).o
            @PTYP !
	    ATL_@(pre)syrk@(uplo)@(trans).o
	    ATL_@(pre)syr2k@(uplo)@(trans).o
	 @endwhile
      @endwhile
   @enddeclare

   @killkeys ptyp
@endwhile

all : lib
lvl3 : lib
lib : dlib slib clib zlib
double    : dlib
single    : slib
complex   : clib
complex16 : zlib
slvl3 : slib
dlvl3 : dlib
clvl3 : clib
zlvl3 : zlib

dep = $(INCSdir)/atlas_kern3.h

@whiledef pre z c d s
@(pre)l3ref :
	cd $(BLDdir)/src/blas/reference/level3 ; $(MAKE) @(pre)lib
@(pre)lib : 
	$(PMAKE) @(pre)lib.grd
	$(MAKE) @(pre)l3ref
@(pre)lib.grd: $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd

@endwhile
@multidef typ DCPLX SCPLX
@whiledef pre z c
   @multidef upl2 Upper_ Lower_
   @whiledef uplo U L
ATL_@(pre)trmv_scal@(uplo)NN_an1.o : $(mySRCdir)/ATL_trmv_scal.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upl2) -DALPHAN1 -DNonUnitDiag_\
                 $(mySRCdir)/ATL_trmv_scal.c
ATL_@(pre)trmv_scal@(uplo)NU_an1.o : $(mySRCdir)/ATL_trmv_scal.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upl2) -DALPHAN1 -DUnitDiag_\
                 $(mySRCdir)/ATL_trmv_scal.c
ATL_@(pre)trmv_scal@(uplo)NN_aX.o : $(mySRCdir)/ATL_trmv_scal.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upl2) -DALPHAX -DNonUnitDiag_\
                 $(mySRCdir)/ATL_trmv_scal.c
ATL_@(pre)trmv_scal@(uplo)NU_aX.o : $(mySRCdir)/ATL_trmv_scal.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upl2) -DALPHAX -DUnitDiag_\
                 $(mySRCdir)/ATL_trmv_scal.c
      @whiledef side L R
ATL_@(pre)hemm@(side)@(uplo).o : $(mySRCdir)/ATL_hemm@(side).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upl2) $(mySRCdir)/ATL_hemm@(side).c
      @endwhile
ATL_@(pre)her2k@(uplo)N.o : $(mySRCdir)/ATL_her2k.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upl2) $(mySRCdir)/ATL_her2k.c
ATL_@(pre)her2k@(uplo)T.o : $(mySRCdir)/ATL_her2k.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upl2) -DTranspose_ $(mySRCdir)/ATL_her2k.c
      @whiledef trans N T
ATL_@(pre)herk@(uplo)@(trans).o : $(mySRCdir)/ATL_herk_@(trans).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upl2) $(mySRCdir)/ATL_herk_@(trans).c
      @endwhile
ATL_@(pre)hecopy@(uplo).o : $(mySRCdir)/ATL_sycopy@(uplo).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DHerm_ $(mySRCdir)/ATL_sycopy@(uplo).c
      @whiledef be 1 0 Xi0
ATL_@(pre)heput@(uplo)_b@(be).o : $(mySRCdir)/ATL_trput@(uplo).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DBETA@up@(be) -DHerm_ \
                    $(mySRCdir)/ATL_trput@(uplo).c
ATL_@(pre)her2k_put@(uplo)_b@(be).o : $(mySRCdir)/ATL_syr2k_put@(uplo).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DBETA@up@(be) -DHerm_ \
                    $(mySRCdir)/ATL_syr2k_put@(uplo).c
      @endwhile
      @undef upl2
   @endwhile
ATL_@(pre)CtrsmKL.o : $(mySRCdir)/ATL_CtrsmK.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DLeft_ $(mySRCdir)/ATL_CtrsmK.c
ATL_@(pre)CtrsmKR.o : $(mySRCdir)/ATL_CtrsmK.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DRight_ $(mySRCdir)/ATL_CtrsmK.c
   @undef typ
@endwhile
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @addkeys PTYP=@(pre)
   @PTYP D S
ATL_@(pre)trsmKR_rk4.o : $(mySRCdir)/ATL_trsmKR_rk4.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DLeft_ $(mySRCdir)/ATL_trsmKR_rk4.c
ATL_@(pre)trsmK_LLNU_a1.o : $(mySRCdir)/ATL_trsmK_LLNU_a1.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_trsmK_LLNU_a1.c
ATL_@(pre)trsmK_L2blk.o : $(mySRCdir)/ATL_trsmK_L2blk.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_trsmK_L2blk.c
ATL_@(pre)trsmKL_amm.o : $(mySRCdir)/ATL_trsmKL_amm.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DLeft_ $(mySRCdir)/ATL_trsmKL_amm.c
ATL_@(pre)trsmKL_rk4.o : $(mySRCdir)/ATL_trsmKL_rk4.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DLeft_ $(mySRCdir)/ATL_trsmKL_rk4.c
ATL_@(pre)trsmKLU_rk4.o : $(mySRCdir)/ATL_trsmKL_rk4.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DLeft_ -DATL_KERN_L4U $(mySRCdir)/ATL_trsmKL_rk4.c
      @whiledef al 1 X
         @whiledef rout sycopyL sycopyU
ATL_@(pre)@(rout)_a@(al).o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DALPHA@up@(al) $(mySRCdir)/ATL_@(rout).c
         @endwhile

         @multidef pdia U N
         @whiledef diag UnitDiag_ NonUnitDiag_
         @whiledef rout trcopyU2L trcopyU2U trcopyL2L trcopyL2U
ATL_@(pre)@(rout)_@(pdia)_a@(al).o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DALPHA@up@(al) -D@(diag) \
	         $(mySRCdir)/ATL_@(rout).c
            @endwhile
            @undef pdia
         @endwhile
      @endwhile
   @PTYP C Z
ATL_@(pre)ctrsmKR_rk2.o : $(mySRCdir)/ATL_ctrsmKR_rk2.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DLeft_ $(mySRCdir)/ATL_ctrsmKR_rk2.c
ATL_@(pre)ctrsmKL_rk2.o : $(mySRCdir)/ATL_ctrsmKL_rk2.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DLeft_ $(mySRCdir)/ATL_ctrsmKL_rk2.c
      @whiledef rout sycopyL sycopyU
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rout).c
      @endwhile

      @multidef pdia U N
      @whiledef diag UnitDiag_ NonUnitDiag_
      @whiledef rout trcopyU2L trcopyU2U trcopyL2L trcopyL2U
ATL_@(pre)@(rout)_@(pdia).o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(diag) $(mySRCdir)/ATL_@(rout).c
ATL_@(pre)@(rout)c_@(pdia).o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(diag) -DConjTrans_ \
              $(mySRCdir)/ATL_@(rout).c
         @endwhile
         @undef pdia
      @endwhile
   @PTYP !

   @multidef uppl U L
   @whiledef uplo Upper_ Lower_
      @whiledef rout symmL symmR
ATL_@(pre)@(rout)@(uppl).o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) $(mySRCdir)/ATL_@(rout).c
      @endwhile

ATL_@(pre)syrk@(uppl)N.o : $(mySRCdir)/ATL_syrk_N.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) $(mySRCdir)/ATL_syrk_N.c
ATL_@(pre)syrk@(uppl)T.o : $(mySRCdir)/ATL_syrk_T.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) $(mySRCdir)/ATL_syrk_T.c

ATL_@(pre)syr2k@(uppl)N.o : $(mySRCdir)/ATL_syr2k_N.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) $(mySRCdir)/ATL_syr2k_N.c
ATL_@(pre)syr2k@(uppl)T.o : $(mySRCdir)/ATL_syr2k_T.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) $(mySRCdir)/ATL_syr2k_T.c

      @multidef pdia U N
      @whiledef diag UnitDiag_ NonUnitDiag_
ATL_@(pre)trsmKR@(uppl)N@(pdia).o : $(mySRCdir)/ATL_trsmKR.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) \
	         -D@(diag) -DRight_ $(mySRCdir)/ATL_trsmKR.c
ATL_@(pre)trsmKL@(uppl)N@(pdia).o : $(mySRCdir)/ATL_trsmKL.c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) \
	         -D@(diag) -DLeft_ $(mySRCdir)/ATL_trsmKL.c
         @PTYP C Z
            @define ptr @C@
            @define trans @ConjTrans_@
         @PTYP !
         @multidef ptr N T
         @whiledef trans Notranspose_ Transpose_
            @whiledef rout trmmL trmmR trsmR
ATL_@(pre)@(rout)@(uppl)@(ptr)@(pdia).o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) \
	         -D@(trans) -D@(diag) $(mySRCdir)/ATL_@(rout).c
	    @endwhile
ATL_@(pre)trsmL@(uppl)@(ptr)@(pdia).o : $(mySRCdir)/ATL_trsmL.c $(INCAdir)/atlas_@(pre)trsmXover.h $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) \
	         -D@(trans) -D@(diag) $(mySRCdir)/ATL_trsmL.c
	    @undef ptr
	 @endwhile
	 @whiledef rout trinvert
ATL_@(pre)@(rout)@(uppl)@(pdia).o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(uplo) \
	         -D@(diag) $(mySRCdir)/ATL_@(rout).c
	 @endwhile
         @undef pdia
      @endwhile
      @undef uppl
   @endwhile
   
   @whiledef be 1 0 X
      @whiledef rout trputL trputU syr2k_putL syr2k_putU
ATL_@(pre)@(rout)_b@(be).o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DBETA@up@(be) $(mySRCdir)/ATL_@(rout).c
      @endwhile
   @endwhile
   @PTYP Z C
      @whiledef rout trputL trputU syr2k_putL syr2k_putU
ATL_@(pre)@(rout)_bn1.o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DBETAN1 $(mySRCdir)/ATL_@(rout).c
ATL_@(pre)@(rout)_bXi0.o : $(mySRCdir)/ATL_@(rout).c $(dep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DBETAXI0 $(mySRCdir)/ATL_@(rout).c
      @endwhile
   @PTYP !

$(INCAdir)/atlas_@(pre)trsmXover.h :
	touch $(INCAdir)/atlas_@(pre)trsmXover.h

   @undef typ
   @killkeys PTYP
@endwhile

sclean :
	rm -f $(sobj) s*.grd
dclean :
	rm -f $(dobj) d*.grd
cclean :
	rm -f $(cobj) c*.grd
zclean :
	rm -f $(zobj) z*.grd
clean : sclean dclean cclean zclean

@ROUT Make.l3ptblas
include Make.inc
mySRCdir = $(SRCdir)/src/pthreads/blas/level3

@whiledef pre d s
   @declare "@(pre)obj = " y y
      @whiledef rout gemm symm syrk syr2k trmm trsm
         ATL_@(pre)pt@(rout).o
      @endwhile
   @enddeclare
@endwhile
@whiledef pre z c
   @declare "@(pre)obj = " y y
      @whiledef rout gemm symm hemm syrk herk syr2k her2k trmm trsm
         ATL_@(pre)pt@(rout).o
      @endwhile
   @enddeclare
@endwhile

lib : dlib slib zlib clib
@whiledef pre z c d s
@(pre)lib : 
	$(PMAKE) @(pre)lib.grd
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd

@endwhile

@multidef typ DREAL SREAL
@whiledef pre d s
   @whiledef rout gemm symm syrk syr2k trmm trsm
ATL_@(pre)pt@(rout).o : $(mySRCdir)/ATL_pt@(rout).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_pt@(rout).c
   @endwhile

   @undef typ
@endwhile
@multidef typ DCPLX SCPLX
@whiledef pre z c
   @whiledef rout gemm symm hemm syrk herk syr2k her2k trmm trsm
ATL_@(pre)pt@(rout).o : $(mySRCdir)/ATL_pt@(rout).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_pt@(rout).c
   @endwhile

   @undef typ
@endwhile
@ROUT Make.l1src
include Make.inc
mySRCdir = $(SRCdir)/src/blas/level1

@multidef upr d s d s
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
   @declare "@(pre)obj = " y y
      @whiledef rout rotg
         ATL_@(pre)@(rout).o
      @endwhile
      @PTYP S
         ATL_sdsdot.o ATL_dsdot.o
      @PTYP D S
         @whiledef rout rotmg rotm
            ATL_@(pre)@(rout).o
         @endwhile
      @PTYP Z C
@skip         @whiledef rout rot
@skip            ATL_@(upr)@(pre)@(rout).o
@skip         @endwhile
@skip         @whiledef rout dotu dotc
@skip            ATL_@(pre)@(rout).o
@skip         @endwhile
      @PTYP !
   @enddeclare

   @killkeys ptyp
   @undef upr
@endwhile

all : lvl1
lib : lvl1
lvl1 : dlvl1 slvl1 zlvl1 clvl1
clean : sclean dclean cclean zclean

@multidef dep dlib slib @^ @^
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
@(pre)gen :
   @whiledef rt iamax axpy copy scal swap dot asum nrm2 set cpsc axpby rot
	$(MAKE) Make_@(pre)@(rt)
	$(MAKE) -f Make_@(pre)@(rt) lib
   @endwhile
   @PTYP Z C
	$(MAKE) Make_@(pre)dotc
	$(MAKE) -f Make_@(pre)dotc lib
   @PTYP !
@(pre)lvl1 : @(pre)lib
@(pre)lib : @(dep) @(pre)lib.grd
	$(MAKE) @(pre)gen
	$(PMAKE) @(pre)lib.grd
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
   @undef dep
@(pre)clean :
	rm -f $(@(pre)obj) @(pre)*.grd
   @killkeys ptyp
@endwhile
#
# Routines with regular real & complex
#
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @whiledef rt axpy iamax copy scal dot swap asum nrm2 set cpsc axpby rot
Make_@(pre)@(rt) :
	cd $(L1Tdir) ; $(MAKE) @(pre)install_@(rt)
   @endwhile
ATL_@(pre)rotg.o : $(mySRCdir)/ATL_rotg.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_rotg.c
ATL_@(pre)swap.o : $(mySRCdir)/ATL_swap.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_swap.c

   @undef typ
@endwhile
#
# Real routines
#
@whiledef rout sdsdot dsdot
ATL_@(rout).o : $(mySRCdir)/ATL_@(rout).c
	$(DKC) -o $@ -c $(dKCFLAGS) -DSREAL $(mySRCdir)/ATL_@(rout).c
@endwhile

@multidef typ DREAL SREAL
@whiledef pre d s
   @whiledef rout rotmg rot rotm dot nrm2 asum
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rout).c
   @endwhile

   @undef typ
@endwhile
#
# Complex routines
#
@multidef typ DCPLX SCPLX
@multidef upr d s
@whiledef pre z c
Make_@(pre)dotc :
	cd $(L1Tdir) ; $(MAKE) @(pre)install_dotc
   @whiledef rout nrm2 asum rot
ATL_@(upr)@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rout).c
   @endwhile
   @whiledef rout dotu dotc
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rout).c
   @endwhile

   @undef typ
   @undef upr
@endwhile
@ROUT Make.l2aux
@whiledef pre z c d s
@(pre)lib :
@endwhile
@ROUT Make.l2src
include Make.inc

@multidef upr d s d s
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
   @declare "@(pre)obj = " y y
      @whiledef rout trmv
         ATL_@(pre)@(rout).o
      @endwhile
      @whiledef up U L
         @PTYP Z C
            @multidef tr C Nc
         @PTYP !
         @whiledef tr T N
            ATL_@(pre)trmv@(up)@(tr).o
            @whiledef di N U
               ATL_@(pre)ktrmv@(up)@(tr)@(di).o
            @endwhile
         @endwhile
      @endwhile
   @enddeclare

   @killkeys ptyp
   @undef upr
@endwhile

all : slib dlib clib zlib
clean : sclean dclean cclean zclean

@whiledef pre z c d s
@(pre)lvl2 : @(pre)lib
@(pre)lib : 
	$(PMAKE) @(pre)lib.grd
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
@(pre)clean :
	rm -f $(@(pre)obj) @(pre)*.grd
@endwhile

@multidef typ DREAL SREAL
@whiledef pre d s
   @whiledef rout trmv
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rout).c
   @endwhile
   @multidef rout trmvUN trmvUT trmvLN trmvLT
   @multidef rout ktrmvLNN ktrmvLNU ktrmvLTN ktrmvLTU
   @whiledef rout ktrmvUNN ktrmvUNU ktrmvUTN ktrmvUTU
ATL_@(pre)@(rout).o : $(mySRCdir)/kernel/ATL_@(rout).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/kernel/ATL_@(rout).c
   @endwhile

@beginskip
   @multidef upd Upper_ Lower_
   @whiledef up U L
      @multidef trd Transpose_ NoTranspose_
      @whiledef tr T N
         @multidef did UnitDiag_ NonUnitDiag_
         @whiledef di N U
ATL_@(pre)ktrmv@(up)@(tr)@(di).o : $(mySRCdir)/kernel/ATL_ktrmv.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upd) -D@(trd) \
              -D@(did) $(mySRCdir)/kernel/ATL_ktrmv.c
            @undef did
         @endwhile
         @undef trd
      @endwhile
      @undef upd
   @endwhile
@endskip

   @undef typ
@endwhile
@multidef typ DCPLX SCPLX
@multidef upr d s
@whiledef pre z c
   @whiledef rout trmv
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rout).c
   @endwhile

   @multidef rout trmvUN trmvUT trmvLN trmvLT
   @multidef rout ktrmvLCN ktrmvLCU ktrmvLNcN ktrmvLNcU
   @multidef rout ktrmvUCN ktrmvUCU ktrmvUNcN ktrmvUNcU
   @multidef rout ktrmvLNN ktrmvLNU ktrmvLTN ktrmvLTU
   @whiledef rout ktrmvUNN ktrmvUNU ktrmvUTN ktrmvUTU
ATL_@(pre)@(rout).o : $(mySRCdir)/kernel/ATL_@(rout).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/kernel/ATL_@(rout).c
   @endwhile
   @whiledef rout trmvU trmvL
      @multidef uta T N
      @whiledef ta  C Nc
ATL_@(pre)@(rout)@(ta).o : $(mySRCdir)/kernel/ATL_@(rout)@(uta).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -DConj_ -D@(typ) \
              $(mySRCdir)/kernel/ATL_@(rout)@(uta).c
         @undef uta
      @endwhile
   @endwhile

@beginskip
   @multidef upd Upper_ Lower_
   @whiledef up U L
      @multidef trd ConjTrans_ Conj_ Transpose_ NoTranspose_
      @whiledef tr C Nc T N
         @multidef did UnitDiag_ NonUnitDiag_
         @whiledef di N U
ATL_@(pre)ktrmv@(up)@(tr)@(di).o : $(mySRCdir)/kernel/ATL_ktrmv.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@(upd) -D@(trd) \
              -D@(did) $(mySRCdir)/kernel/ATL_ktrmv.c
            @undef did
         @endwhile
         @undef trd
      @endwhile
      @undef upd
   @endwhile
@endskip

   @undef typ
   @undef upr
@endwhile
@ROUT Make.r1src
# =========================================================================
# Note that this Makefile compiles only the GER driver routines.  The 
# empirically tuned kernel files are compiled by the generated Make_<pre>r1
# helper makefiles
# =========================================================================
include Make.inc
mySRCdir = $(SRCdir)/src/blas/ger

@whiledef pre d s
@(pre)obj = ATL_@(pre)ger.o ATL_@(pre)ger_L1.o ATL_@(pre)ger_L2.o \
       ATL_@(pre)ger_OOC.o ATL_@(pre)gerk_Mlt16.o ATL_@(pre)gerk_axpy.o \
       ATL_@(pre)ger2.o ATL_@(pre)ger2_L1.o ATL_@(pre)ger2_L2.o \
       ATL_@(pre)ger2_OOC.o ATL_@(pre)ger2k_Mlt16.o ATL_@(pre)ger2k_Nlt8.o 
@endwhile
@whiledef pre z c
@(pre)obj = ATL_@(pre)geru.o ATL_@(pre)gerc.o \
       ATL_@(pre)geru_L1.o ATL_@(pre)gerc_L1.o \
       ATL_@(pre)geru_L2.o ATL_@(pre)gerc_L2.o \
       ATL_@(pre)geru_OOC.o ATL_@(pre)gerc_OOC.o \
       ATL_@(pre)gerk_Mlt16.o ATL_@(pre)gerk_axpy.o \
       ATL_@(pre)ger2u.o ATL_@(pre)ger2c.o \
       ATL_@(pre)ger2u_OOC.o ATL_@(pre)ger2c_OOC.o \
       ATL_@(pre)ger2u_L1.o ATL_@(pre)ger2c_L1.o \
       ATL_@(pre)ger2u_L2.o ATL_@(pre)ger2c_L2.o \
       ATL_@(pre)gerck_Mlt16.o ATL_@(pre)gerck_axpy.o \
       ATL_@(pre)ger2k_Mlt16.o ATL_@(pre)ger2k_Nlt8.o \
       ATL_@(pre)ger2ck_Mlt16.o ATL_@(pre)ger2ck_Nlt8.o 
@endwhile

lib : all
all : slib dlib clib zlib
lvl2 : all
dlvl2 : dlib
slvl2 : slib
clvl2 : clib
zlvl2 : zlib
clean : sclean dclean cclean zclean

@whiledef pre z c s d
@(pre)lib :
	$(PMAKE) @(pre)lib.grd
	$(PMAKE) -f Make_@(pre)r1 lib
	$(PMAKE) -f Make_@(pre)r2 lib
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
@(pre)clean : 
	rm -f $(@(pre)obj) @(pre)*.grd
@endwhile

@multidef rk 1 2
@whiledef rt ger ger2
   @whiledef pre d s
      @multidef sfi _L1.h _L2.h .h
      @whiledef suf L1 L2 OOC
ATL_@(pre)@(rt)_@(suf).o : $(mySRCdir)/ATL_@(rt).c $(INCAdir)/atlas_@(pre)r@(rk)@(sfi)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@up@(pre)REAL -DATL_IN@(suf) $(mySRCdir)/ATL_@(rt).c
      @endwhile
ATL_@(pre)@(rt).o : $(mySRCdir)/ATL_@(rt).c $(INCSdir)/atlas_r@(rk).h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@up@(pre)REAL $(mySRCdir)/ATL_@(rt).c
      @undef sfi
   @endwhile

   @multidef upr d s
   @whiledef pre z c
      @multidef sfi _L1.h _L2.h .h
      @whiledef suf L1 L2 OOC
ATL_@(pre)@(rt)u_@(suf).o : $(mySRCdir)/ATL_@(rt).c $(INCAdir)/atlas_@(pre)r@(rk)@(sfi)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@up@(upr)CPLX -DATL_IN@(suf) $(mySRCdir)/ATL_@(rt).c
ATL_@(pre)@(rt)c_@(suf).o : $(mySRCdir)/ATL_@(rt).c $(INCAdir)/atlas_@(pre)r@(rk)@(sfi)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@up@(upr)CPLX -DATL_IN@(suf) \
        -DConj_ $(mySRCdir)/ATL_@(rt).c
         @undef sfi
      @endwhile
ATL_@(pre)@(rt)u.o : $(mySRCdir)/ATL_@(rt).c $(INCSdir)/atlas_r@(rk).h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@up@(upr)CPLX $(mySRCdir)/ATL_@(rt).c
ATL_@(pre)@(rt)c.o : $(mySRCdir)/ATL_@(rt).c $(INCSdir)/atlas_r@(rk).h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@up@(upr)CPLX -DConj_ $(mySRCdir)/ATL_@(rt).c
      @undef upr
   @endwhile
   @undef rk
@endwhile

@multidef typ SREAL DREAL SCPLX DCPLX
@whiledef pre s d c z
   @whiledef suf Mlt16 axpy
ATL_@(pre)gerk_@(suf).o : $(mySRCdir)/ATL_gerk_@(suf).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_gerk_@(suf).c
   @endwhile
   @whiledef suf Mlt16 Nlt8
ATL_@(pre)ger2k_@(suf).o : $(mySRCdir)/ATL_ger2k_@(suf).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_ger2k_@(suf).c
   @endwhile
   @undef typ
@endwhile
@multidef typ SCPLX DCPLX
@whiledef pre c z
   @whiledef suf Mlt16 axpy
ATL_@(pre)gerck_@(suf).o : $(mySRCdir)/ATL_gerk_@(suf).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DConj_ $(mySRCdir)/ATL_gerk_@(suf).c
   @endwhile
   @whiledef suf Mlt16 Nlt8
ATL_@(pre)ger2ck_@(suf).o : $(mySRCdir)/ATL_ger2k_@(suf).c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DConj_ $(mySRCdir)/ATL_ger2k_@(suf).c
   @endwhile
   @undef typ
@endwhile
@ROUT Make.mvsrc
include Make.inc
mySRCdir = $(SRCdir)/src/blas/gemv

@whiledef pre z c d s
   @addkeys ptyp=@(pre)
   @declare "@(pre)obj = " y y
      ATL_@(pre)gemv.o 
      ATL_@(pre)gemvN.o ATL_@(pre)gemvT.o 
      ATL_@(pre)gemvN_L1.o ATL_@(pre)gemvT_L1.o
      ATL_@(pre)gemvN_L2.o ATL_@(pre)gemvT_L2.o
      @ptyp z c 
         ATL_@(pre)gemvCN.o ATL_@(pre)gemvCT.o 
         ATL_@(pre)gemvCN_L1.o ATL_@(pre)gemvCT_L1.o
         ATL_@(pre)gemvCN_L2.o ATL_@(pre)gemvCT_L2.o
      @ptyp !
      ATL_@(pre)mvnk_smallN.o ATL_@(pre)mvnk_Mlt16.o
      ATL_@(pre)mvtk_smallN.o ATL_@(pre)mvtk_Mlt16.o
   @enddeclare
   @killkeys ptyp

@endwhile
lib : all
all : slib dlib clib zlib
lvl2 : all
dlvl2 : dlib
slvl2 : slib
clvl2 : clib
zlvl2 : zlib
clean : sclean dclean cclean zclean

@whiledef pre z c s d
@(pre)lib : 
	$(PMAKE) -f Make_@(pre)mvt @(pre)lib
	$(PMAKE) -f Make_@(pre)mvn @(pre)lib
	$(PMAKE) @(pre)lib.grd
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
@(pre)clean : 
	rm -f $(@(pre)obj) @(pre)*.grd
@endwhile

@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @multidef rt gemvCN gemvCT
   @whiledef rt gemv gemvN gemvT mvnk_Mlt16 mvnk_smallN mvtk_Mlt16 mvtk_smallN
ATL_@(pre)@(rt).o : $(mySRCdir)/ATL_@(rt).c \
                   $(INCAdir)/atlas_@(pre)mvn.h $(INCAdir)/atlas_@(pre)mvt.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rt).c
   @endwhile
   @whiledef rt gemvT gemvN gemvCT gemvCN
      @whiledef lvl 1 2
ATL_@(pre)@(rt)_L@(lvl).o : $(mySRCdir)/ATL_@(rt).c  \
                   $(INCAdir)/atlas_@(pre)mvn.h $(INCAdir)/atlas_@(pre)mvt.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DATL_INL@(lvl) $(mySRCdir)/ATL_@(rt).c
      @endwhile
   @endwhile
   @undef typ
@endwhile
@ROUT Make.cblas
include Make.inc
mySRCdir = $(SRCdir)/interfaces/blas/C/src/

aobj = cblas_xerbla.o cblas_errprn.o
@define pt @@
@whiledef pt pt
   @whiledef pre d s
      @declare "@(pre)@(pt)lvl3obj = " y y
         @whiledef rout symm syrk syr2k trmm trsm gemm
            cblas_@(pre)@(pt)@(rout).o
         @endwhile
      @enddeclare
   @endwhile

   @whiledef pre z c
      @declare "@(pre)@(pt)lvl3obj = " y y
         @whiledef rout hemm herk her2k symm syrk syr2k trmm trsm gemm
            cblas_@(pre)@(pt)@(rout).o
         @endwhile
      @enddeclare
   @endwhile

   @whiledef pre d s
      @declare "@(pre)@(pt)lvl2obj = " y y
         @multidef rout ger syr spr syr2 spr2 ger2
         @whiledef rout gemv gbmv symv sbmv spmv trmv tbmv tpmv trsv tbsv tpsv
            cblas_@(pre)@(pt)@(rout).o
         @endwhile
      @enddeclare
   @endwhile
   @whiledef pre z c
      @declare "@(pre)@(pt)lvl2obj = " y y
         @multidef rout geru gerc her hpr her2 hpr2 ger2u ger2c
         @whiledef rout gemv gbmv hemv hbmv hpmv trmv tbmv tpmv trsv tbsv tpsv
            cblas_@(pre)@(pt)@(rout).o
         @endwhile
      @enddeclare
   @endwhile

   @whiledef pre d s
      @addkeys ptyp=@(pre)
      @declare "@(pre)@(pt)lvl1obj = " y y
         @PTYP S
            cblas_sds@(pt)dot.o cblas_ds@(pt)dot.o
         @PTYP !
            cblas_i@(pre)@(pt)amax.o
         @whiledef rout rotg rotmg rot rotm swap scal copy axpy dot nrm2 asum
            cblas_@(pre)@(pt)@(rout).o
         @endwhile
         catlas_@(pre)@(pt)axpby.o catlas_@(pre)@(pt)set.o
      @enddeclare
      @killkeys ptyp
   @endwhile

   @multidef upr d s
   @whiledef pre z c
      @declare "@(pre)@(pt)lvl1obj = " y y
         cblas_i@(pre)@(pt)amax.o
         @whiledef rout scal rot
            cblas_@(pre)@(upr)@(pt)@(rout).o
         @endwhile
         @whiledef rout nrm2 asum
            cblas_@(upr)@(pre)@(pt)@(rout).o
         @endwhile
         @whiledef rout rotg swap scal copy axpy dotc dotu
            cblas_@(pre)@(pt)@(rout).o
         @endwhile
         catlas_@(pre)@(pt)axpby.o catlas_@(pre)@(pt)set.o
      @enddeclare
      @undef upr
   @endwhile
@endwhile

@define pt @@
@whiledef pt pt
@(pt)all : @(pt)lib
@(pt)lib : d@(pt)lib s@(pt)lib z@(pt)lib c@(pt)lib

@(pt)lvl3 : d@(pt)lvl3 s@(pt)lvl3 c@(pt)lvl3 z@(pt)lvl3
@(pt)lvl2 : d@(pt)lvl2 s@(pt)lvl2 c@(pt)lvl2 z@(pt)lvl2
@(pt)lvl1 : d@(pt)lvl1 s@(pt)lvl1 c@(pt)lvl1 z@(pt)lvl1
d@(pt)lib : d@(pt)lvl3 d@(pt)lvl2 d@(pt)lvl1
s@(pt)lib : s@(pt)lvl3 s@(pt)lvl2 s@(pt)lvl1
c@(pt)lib : c@(pt)lvl3 c@(pt)lvl2 c@(pt)lvl1
z@(pt)lib : z@(pt)lvl3 z@(pt)lvl2 z@(pt)lvl1
@(pt)clean : s@(pt)clean d@(pt)clean c@(pt)clean z@(pt)clean
	rm -f $(aobj)

   @whiledef pre z c d s
      @whiledef lvl 3 2 1
@(pre)@(pt)lvl@(lvl) : 
	$(PMAKE) @(pre)@(pt)lvl@(lvl).grd
@(pre)@(pt)lvl@(lvl).grd : $(@(pre)@(pt)lvl@(lvl)obj) $(aobj)
	$(ARCHIVER) $(ARFLAGS) $(@up@(pt)CBLASlib) $(@(pre)@(pt)lvl@(lvl)obj) $(aobj) 
	$(RANLIB) $(@up@(pt)CBLASlib)
	touch @(pre)@(pt)lvl@(lvl).grd
      @endwhile
@(pre)@(pt)clean :
	rm -f $(@(pre)@(pt)lvl1obj) $(@(pre)@(pt)lvl2obj) $(@(pre)@(pt)lvl3obj) @(pre)?@(pt)lvl?.grd
   @endwhile
@endwhile

INCdep = $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_lvl3.h \
         $(INCSdir)/cblas.h $(INCSdir)/atlas_level1.h 
INCPTdep = $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_lvl3.h \
           $(INCSdir)/cblas.h $(INCSdir)/atlas_level1.h \
           $(INCSdir)/atlas_refalias1.h $(INCSdir)/atlas_refalias2.h \
           $(INCSdir)/atlas_refalias3.h $(INCSdir)/atlas_ptalias3.h

@define ptf @@
@define ptf @-DATL_USEPTHREADS@
@define pt @@
@whiledef pt pt
   @whiledef pre d s 
      @multidef rout
         rotg rotmg rot rotm swap scal copy axpy dot nrm2 asum
         ger syr spr syr2 spr2 ger2
         gemv gbmv symv sbmv spmv trmv tbmv tpmv trsv tbsv tpsv
         symm syrk syr2k trmm trsm gemm
      @endmultidef
      @whiledef rout
cblas_@(pre)@(pt)@(rout).o : $(mySRCdir)/cblas_@(pre)@(rout).c $(INC@up@(pt)dep)
	$(KC) -o $@ -c $(KCFLAGS) @(ptf) $(mySRCdir)/cblas_@(pre)@(rout).c
      @endwhile
      @whiledef rout axpby set
catlas_@(pre)@(pt)@(rout).o : $(mySRCdir)/catlas_@(pre)@(rout).c $(INC@up@(pt)dep)
	$(KC) -o $@ -c $(KCFLAGS) @(ptf) $(mySRCdir)/catlas_@(pre)@(rout).c
      @endwhile
cblas_i@(pre)@(pt)amax.o : $(mySRCdir)/cblas_i@(pre)amax.c $(INC@up@(pt)dep)
	$(KC) -o $@ -c $(KCFLAGS) @(ptf) $(mySRCdir)/cblas_i@(pre)amax.c
   @endwhile

   @multidef upr d s
   @whiledef pre z c 
      @multidef rout
         rotg swap scal copy axpy dotc dotu
         geru gerc her hpr her2 hpr2 ger2u ger2c
         gemv gbmv hemv hbmv hpmv trmv tbmv tpmv trsv tbsv tpsv
         hemm herk her2k symm syrk syr2k trmm trsm gemm
      @endmultidef
      @whiledef rout
cblas_@(pre)@(pt)@(rout).o : $(mySRCdir)/cblas_@(pre)@(rout).c $(INC@up@(pt)dep)
	$(ICC) -o $@ -c $(ICCFLAGS) @(ptf) $(mySRCdir)/cblas_@(pre)@(rout).c
      @endwhile
      @whiledef rout axpby set
catlas_@(pre)@(pt)@(rout).o : $(mySRCdir)/catlas_@(pre)@(rout).c $(INC@up@(pt)dep)
	$(ICC) -o $@ -c $(ICCFLAGS) @(ptf) $(mySRCdir)/catlas_@(pre)@(rout).c
      @endwhile
cblas_i@(pre)@(pt)amax.o : $(mySRCdir)/cblas_i@(pre)amax.c $(INC@up@(pt)dep)
	$(ICC) -o $@ -c $(ICCFLAGS) @(ptf) $(mySRCdir)/cblas_i@(pre)amax.c
      @whiledef rout nrm2 asum
cblas_@(upr)@(pre)@(pt)@(rout).o : $(mySRCdir)/cblas_@(upr)@(pre)@(rout).c $(INC@up@(pt)dep)
	$(ICC) -o $@ -c $(ICCFLAGS) @(ptf) $(mySRCdir)/cblas_@(upr)@(pre)@(rout).c
      @endwhile
      @whiledef rout scal rot
cblas_@(pre)@(upr)@(pt)@(rout).o : $(mySRCdir)/cblas_@(pre)@(upr)@(rout).c $(INC@up@(pt)dep)
	$(ICC) -o $@ -c $(ICCFLAGS) @(ptf) $(mySRCdir)/cblas_@(pre)@(upr)@(rout).c
      @endwhile
      @undef upr
   @endwhile

cblas_sds@(pt)dot.o : $(mySRCdir)/cblas_sdsdot.c $(INC@up@(pt)dep)
	$(ICC) -o $@ -c $(ICCFLAGS) @(ptf) $(mySRCdir)/cblas_sdsdot.c
cblas_ds@(pt)dot.o : $(mySRCdir)/cblas_dsdot.c $(INC@up@(pt)dep)
	$(ICC) -o $@ -c $(ICCFLAGS) @(ptf) $(mySRCdir)/cblas_dsdot.c
   @undef ptf
@endwhile

@whiledef rout xerbla errprn
cblas_@(rout).o : $(mySRCdir)/cblas_@(rout).c $(INCdep)
	$(ICC) -o $@ -c $(ICCFLAGS) $(mySRCdir)/cblas_@(rout).c
@endwhile
@ROUT Make.tstsrc
include Make.inc
mySRCdir = $(SRCdir)/src/testing

INCdep = $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_f77.h \
         $(INCSdir)/atlas_tst.h
INCdep1 = $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_tst.h

obj = ATL_rand.o ATL_print2dBV.o ATL_print1dBV.o ATL_getIpiv.o

@whiledef pre z c d s
   @(pre)f77wobjs = ATL_@(pre)f77wrap.o
@endwhile

@whiledef pre d s
   @addkeys ptyp=@(pre)
   @declare "@(pre)blas = " y y
      @PTYP S
         ATL_dsf77dot.o
         ATL_sdsf77dot.o
      @PTYP !
      @multidef rout
         getrf potrf geqrf gerqf geqlf gelqf posv gesv gels lauum trtri getri
         rotg rotmg nrm2 asum amax scal axpy copy swap rot rotm dot
         gbmv sbmv spmv spr spr2 symv syr syr2 tbmv tbsv tpmv tpsv trsv
         trmv gemv ger 
         symm syrk syr2k trmm trsm gemm
      @endmultidef
      @whiledef rout
         ATL_@(pre)f77@(rout).o
      @endwhile
   @enddeclare

   @killkeys ptyp
@endwhile

@multidef upr d s
@whiledef pre z c
   @declare "@(pre)blas = " y y
      ATL_@(pre)@(upr)f77scal.o
      @multidef rout geqrf gerqf gelqf geqlf
      @multidef rout getri getrf potrf trtri lauum posv gels gesv
      @multidef rout rotg nrm2 asum amax scal axpy copy swap rot 
      @multidef rout dotc_sub dotu_sub
      @multidef rout gbmv hbmv hemv her her2 hpmv hpr hpr2 tbmv
      @multidef rout tbsv tpmv tpsv trsv
      @multidef rout trmv gemv gerc geru
      @whiledef rout hemm herk her2k symm syrk syr2k trmm trsm gemm
         ATL_@(pre)f77@(rout).o
      @endwhile
   @enddeclare

   @undef upr
@endwhile

all : lib
lib : dlib slib zlib clib
clean : dclean sclean zclean cclean
	rm -f $(obj)

@whiledef pre z c d s
   @addkeys ptyp=@(pre)
@(pre)obj = $(@(pre)blas) ATL_@(pre)gegen.o ATL_@(pre)geprint.o \
            ATL_@(pre)epsilon.o ATL_@(pre)gediff.o ATL_@(pre)genrm1.o \
            ATL_@(pre)gediffnrm1.o ATL_@(pre)infnrm.o ATL_@(pre)vdiff.o \
            ATL_@(pre)trgen.o ATL_@(pre)trnrm1.o ATL_@(pre)gbnrm1.o \
            ATL_@(pre)cmpmatBV.o \
@PTYP Z C
            ATL_@(pre)hbnrm.o ATL_@(pre)hpnrm.o ATL_@(pre)henrm.o \
@PTYP !
            ATL_@(pre)sbnrm.o ATL_@(pre)spnrm.o ATL_@(pre)synrm.o \
            ATL_@(pre)tbnrm1.o ATL_@(pre)tpnrm1.o ATL_@(pre)tstsqtran.o \
            ATL_@(pre)hediffnrm.o

@(pre)lib : 
	$(PMAKE) @(pre)lib.grd
@(pre)lib.grd : $(@(pre)obj) $(obj) $(@(pre)f77wobjs)
	$(ARCHIVER) $(ARFLAGS) $(TESTlib) $(@(pre)obj) $(obj)
	- $(ARCHIVER) $(ARFLAGS) $(TESTlib) $(@(pre)f77wobjs)
	$(RANLIB) $(TESTlib)
	touch @(pre)lib.grd

@(pre)clean : 
	rm -f $(@(pre)obj) $(@(pre)f77wobjs) @(pre)*.grd
   @killkeys ptyp
@endwhile

@whiledef pre z c d s
ATL_@(pre)f77wrap.o : $(mySRCdir)/ATL_@(pre)f77wrap.f
	- $(F77) -o $@ -c $(F77FLAGS) $(mySRCdir)/ATL_@(pre)f77wrap.f
@endwhile

@whiledef pre d s
   @multidef rout geqrf gerqf gelqf geqlf
   @multidef rout getri getrf potrf trtri lauum posv gels gesv
   @multidef rout rotg rotmg nrm2 asum amax scal axpy copy swap rot rotm dot
   @multidef rout gbmv sbmv spmv spr spr2 symv syr syr2 tbmv tpmv tbsv tpsv
   @multidef rout trsv
   @multidef rout trmv gemv ger
   @whiledef rout symm syrk syr2k trmm trsm gemm
ATL_@(pre)f77@(rout).o : $(mySRCdir)/ATL_f77@(rout).c $(INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@up@(pre)REAL $(mySRCdir)/ATL_f77@(rout).c
   @endwhile
   @multidef rout 
      trgen trnrm1 gbnrm1 tbnrm1 tpnrm1 sbnrm spnrm synrm tstsqtran
      gegen geprint gediff epsilon genrm1 gediffnrm1 infnrm vdiff
      hediffnrm
      cmpmatBV
   @endmultidef
   @whiledef rout
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(INCSdir)/atlas_misc.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@up@(pre)REAL $(mySRCdir)/ATL_@(rout).c
   @endwhile
@endwhile

@beginskip
ATL_dsf77dot.o        : $(mySRCdir)/ATL_f77dsdot.c $(INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -DSREAL $(mySRCdir)/ATL_f77dsdot.c
ATL_sdsf77dot.o       : $(mySRCdir)/ATL_f77sdsdot.c $(INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -DSREAL $(mySRCdir)/ATL_f77sdsdot.c
@endskip
@whiledef rout  getIpiv print2dBV print1dBV rand dsf77dot sdsf77dot
ATL_@(rout).o : $(mySRCdir)/ATL_@(rout).c $(INCSdir)/atlas_misc.h
	$(DKC) -o $@ -c $(dKCFLAGS) -DSREAL $(mySRCdir)/ATL_@(rout).c
@endwhile

@multidef typ DCPLX SCPLX
@multidef upr d s
@whiledef pre z c
   @multidef rout geqrf gerqf gelqf geqlf
   @multidef rout getri getrf potrf trtri lauum posv gels gesv
   @multidef rout rotg nrm2 asum amax scal axpy copy swap rot 
   @multidef rout dotc_sub dotu_sub
   @multidef rout gbmv hbmv hemv her her2 hpmv hpr hpr2 tbmv
   @multidef rout tbsv tpmv tpsv trsv
   @multidef rout trmv gemv gerc geru
   @whiledef rout hemm herk her2k symm syrk syr2k trmm trsm gemm
ATL_@(pre)f77@(rout).o : $(mySRCdir)/ATL_f77@(rout).c $(INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_f77@(rout).c
   @endwhile
      
   @multidef rout sbnrm spnrm synrm hbnrm hpnrm henrm tstsqtran cmpmatBV
   @multidef rout trnrm1 gbnrm1 tbnrm1 tpnrm1 trgen hediffnrm
   @whiledef rout gegen geprint gediff epsilon genrm1 gediffnrm1 infnrm vdiff
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(INCdep1)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rout).c
   @endwhile
ATL_@(pre)@(upr)f77scal.o : $(mySRCdir)/ATL_f77rscal.c $(INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_f77rscal.c
   @undef typ
   @undef upr
@endwhile
@ROUT Make.cblastst
include Make.inc
mySRCdir = $(SRCdir)/interfaces/blas/C/testing

MYDIR = $(BLDdir)/interfaces/blas/C/testing/
sanity_test :
	rm -f sanity.out
	$(MAKE) ssanity_test dsanity_test csanity_test zsanity_test
ptsanity_test :
	rm -f ptsanity.out
	$(MAKE) sptsanity_test dptsanity_test cptsanity_test zptsanity_test
@define pt @pt@
@define pt @@
@whiledef pt

@(pt)all : @(pt)lvl1 @(pt)lvl2 @(pt)lvl3
@(pt)lvl3 : d@(pt)lvl3 s@(pt)lvl3 z@(pt)lvl3 c@(pt)lvl3
@(pt)lvl2 : d@(pt)lvl2 s@(pt)lvl2 z@(pt)lvl2 c@(pt)lvl2
@(pt)lvl1 : d@(pt)lvl1 s@(pt)lvl1 z@(pt)lvl1 c@(pt)lvl1


   @whiledef pre z c d s
@(pre)@(pt)sanity_test : x@(pre)@(pt)cblat1 x@(pre)@(pt)cblat2 x@(pre)@(pt)cblat3
	$(ATLRUN) $(MYDIR) x@(pre)@(pt)cblat1 >> $(MYDIR)/@(pt)sanity.out
	$(ATLRUN) $(MYDIR) x@(pre)@(pt)cblat2 < $(mySRCdir)/c_@(pre)blat2.dat \
                  >> $(MYDIR)/@(pt)sanity.out
	$(ATLRUN) $(MYDIR) x@(pre)@(pt)cblat3 < $(mySRCdir)/c_@(pre)blat3.dat \
                  >> $(MYDIR)/@(pt)sanity.out
@(pre)@(pt)lvl1 : x@(pre)@(pt)cblat1 x@(pre)@(pt)axpbytst x@(pre)@(pt)settst
      @whiledef lvl 3 2
@(pre)@(pt)lvl@(lvl) : x@(pre)@(pt)cblat@(lvl)
      @endwhile
   @endwhile
   @whiledef pre z c d s
      @multidef dep0 c_@(pre)3chke.o@^c_xerbla.o c_@(pre)2chke.o@^c_xerbla.o @^
      @whiledef lvl 3 2 1
x@(pre)@(pt)cblat@(lvl) : c_@(pre)blat@(lvl).o c_@(pre)blas@(lvl).o @(pre)@(pt)ilvl@(lvl) \
           auxiliary.o @(pre)l@(lvl)lib @(dep0)
	$(FLINKER) $(FLINKFLAGS) -o $@ c_@(pre)blat@(lvl).o c_@(pre)blas@(lvl).o \
                   @(dep0) auxiliary.o $(LAPACKlib) \
                   $(@up@(pt)CBLASlib) $(ATLASlib) $(LIBS)
@skip	./x@(pre)cblat@(lvl) < $(mySRCdir)/c_@(pre)blat@(lvl).dat
@skip	$(ATLRUN) $(CBLdir)/$(mySRCdir)/$(mySRCdir)/testing \
@skip                  "x@(pre)cblat@(lvl) < c_@(pre)blat@(lvl).dat"

         @undef dep0
      @endwhile
      @whiledef rt axpby set
x@(pre)@(pt)@(rt)tst : @(pre)@(rt)tst.o @(pre)@(pt)ilvl1 @(pre)l1lib
	$(CLINKER) $(CLINKFLAGS) -o $@ @(pre)@(rt)tst.o \
           $(TESTlib) $(@up@(pt)CBLASlib) $(ATLASlib) $(LIBS)
      @endwhile
   @endwhile
@endwhile

auxlib :
	cd $(AUXdir) ; $(MAKE) lib
@whiledef pre z c d s
   @define pt @@
   @whiledef pt pt
      @whiledef lvl lvl1 lvl2 lvl3
@(pre)@(pt)i@(lvl) :
	cd $(CBLdir) ; $(MAKE) @(pre)@(pt)@(lvl)
      @endwhile
   @endwhile
@(pre)l1lib : auxlib
	cd $(L1Bdir) ; $(MAKE) @(pre)lvl1
@(pre)l2lib : @(pre)l1lib auxlib
	cd $(GMVdir) ; $(MAKE) @(pre)lib
	cd $(GR1dir) ; $(MAKE) @(pre)lib
	cd $(L2Bdir) ; $(MAKE) @(pre)lib
@(pre)l3lib :
	cd $(AMMdir) ; $(MAKE) @(pre)lib
@skip	cd $(GMMdir) ; $(MAKE) @(pre)lib
	cd $(L3Bdir) ; $(MAKE) @(pre)lib
@endwhile


@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @whiledef rt axpby set
@(pre)@(rt)tst.o : $(mySRCdir)/@(rt)tst.c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/@(rt)tst.c
   @endwhile
   @whiledef lvl 1 2 3
c_@(pre)blat@(lvl).o : $(mySRCdir)/c_@(pre)blat@(lvl).f
	$(F77) $(F77NOOPT) -o $@ -c $(mySRCdir)/c_@(pre)blat@(lvl).f
   @endwhile
   @undef typ
@endwhile

@whiledef pre z c d s
   @whiledef lvl 1 2 3
      @whiledef rout @(pre)@(lvl)chke @(pre)blas@(lvl)
c_@(rout).o : $(mySRCdir)/c_@(rout).c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/c_@(rout).c
      @endwhile
   @endwhile
@endwhile
@whiledef rout c_xerbla auxiliary
@(rout).o : $(mySRCdir)/@(rout).c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/@(rout).c
@endwhile

clean :
	rm -f *.o *.grd
@ROUT Make.f77blastst
include Make.inc
mySRCdir = $(SRCdir)/interfaces/blas/F77/testing

MYDIR = $(BLDdir)/interfaces/blas/F77/testing/

sanity_test :
	rm -f sanity.out
	$(MAKE) ssanity_test dsanity_test csanity_test zsanity_test
ptsanity_test :
	rm -f ptsanity.out
	$(MAKE) sptsanity_test dptsanity_test cptsanity_test zptsanity_test

@define pt @pt@
@define pt @@
@whiledef pt
@(pt)all : @(pt)lvl1 @(pt)lvl2 @(pt)lvl3
@(pt)lvl3 : d@(pt)lvl3 s@(pt)lvl3 z@(pt)lvl3 c@(pt)lvl3
@(pt)lvl2 : d@(pt)lvl2 s@(pt)lvl2 z@(pt)lvl2 c@(pt)lvl2
@(pt)lvl1 : d@(pt)lvl1 s@(pt)lvl1 z@(pt)lvl1 c@(pt)lvl1

   @whiledef pre z c d s
@(pre)@(pt)lvl1 : x@(pre)@(pt)blat1 x@(pre)@(pt)axpbytst x@(pre)@(pt)settst
      @whiledef lvl 3 2
@(pre)@(pt)lvl@(lvl) : x@(pre)@(pt)blat@(lvl)
      @endwhile
   @endwhile
   @whiledef pre z c d s
@(pre)@(pt)sanity_test : x@(pre)@(pt)blat1 x@(pre)@(pt)blat2 x@(pre)@(pt)blat3
	$(ATLRUN) $(MYDIR) x@(pre)@(pt)blat1 >> $(MYDIR)/@(pt)sanity.out
	$(ATLRUN) $(MYDIR) x@(pre)@(pt)blat2 < $(mySRCdir)/@(pre)blat2.dat \
                  >> $(MYDIR)/@(pt)sanity.out
	$(ATLRUN) $(MYDIR) x@(pre)@(pt)blat3 < $(mySRCdir)/@(pre)blat3.dat \
                  >> $(MYDIR)/@(pt)sanity.out
      @whiledef lvl 3 2 1
x@(pre)@(pt)blat@(lvl) : @(pre)blat@(lvl).o @(pre)l@(lvl)lib @(pre)@(pt)ilvl@(lvl)
	$(FLINKER) $(FLINKFLAGS) -o $@ @(pre)blat@(lvl).o $(LAPACKlib) \
                   $(@up@(pt)F77BLASlib) $(ATLASlib) $(LIBS)

      @endwhile
      @whiledef rt axpby set
x@(pre)@(pt)@(rt)tst : @(pre)@(rt)tst.o @(pre)l1lib @(pre)@(pt)ilvl1
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)tst.o \
           $(TESTlib) $(@up@(pt)F77BLASlib) $(ATLASlib) $(LIBS)
      @endwhile
   @endwhile
@endwhile

force_build:
auxlib : force_build
	cd $(AUXdir) ; $(MAKE) lib

@whiledef pre z c d s
   @define pt @@
   @whiledef pt pt
      @whiledef lvl lvl1 lvl2 lvl3
@(pre)@(pt)i@(lvl) :
	cd $(FBLdir) ; $(MAKE) @(pre)@(pt)@(lvl)
      @endwhile
   @endwhile
@(pre)l1lib : auxlib
	cd $(L1Bdir) ; $(MAKE) @(pre)lib
@(pre)l2lib : @(pre)l1lib auxlib
	cd $(GMVdir) ; $(MAKE) @(pre)lib
	cd $(GR1dir) ; $(MAKE) @(pre)lib
	cd $(L2Bdir) ; $(MAKE) @(pre)lib
@(pre)l3lib :
	cd $(AMMdir) ; $(MAKE) @(pre)lib
@skip	cd $(GMMdir) ; $(MAKE) @(pre)lib
	cd $(L3Bdir) ; $(MAKE) @(pre)lib
@endwhile


@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
      @whiledef rt axpby set
@(pre)@(rt)tst.o : $(mySRCdir)/@(rt)tst.c
	$(KC) $(KCFLAGS) -D@(typ) -DTEST_F77 -o $@ -c $(mySRCdir)/@(rt)tst.c
      @endwhile
   @whiledef lvl 1 2 3
@(pre)blat@(lvl).o : $(mySRCdir)/@(pre)blat@(lvl).f
	$(F77) $(F77NOOPT) -o $@ -c $(mySRCdir)/@(pre)blat@(lvl).f
   @endwhile
   @undef typ
@endwhile

@whiledef pre z c d s
@(pre)clean : clean
@endwhile
clean :
	rm -rf *.o *.grd
@ROUT Make.tprim
include Make.inc
mySRCdir = $(SRCdir)/src/threads
INCS = $(INCSdir)/atlas_tprim.h \
       $(INCAdir)/atlas_taffinity.h $(INCAdir)/atlas_pthreads.h
LNG=c
ARC=mut
@multidef rt 
   thread_start thread_join lock_init lock_destroy lock trylock unlock 
@endmultidef
@declare "obj = " y n
   @whiledef rt
      ATL_@(rt).o
   @endwhile
@enddeclare

lib : tprim.grd
tprim.grd : $(obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(obj)
	$(RANLIB) $(ATLASlib)
	touch lib.grd

@whiledef rt thread_start thread_join 
ATL_@(rt).o : $(INCS) $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_@(rt).c
@endwhile

@whiledef rt lock_init lock_destroy
ATL_@(rt).o : $(INCS) $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) -DATL_USE_$(ARC)=1 -o $@ -c $(mySRCdir)/ATL_@(rt).c
@endwhile

@whiledef rt lock trylock unlock 
ATL_@(rt).o : $(INCS) $(mySRCdir)/ATL_@(rt)_$(ARC).$(LNG)
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_@(rt)_$(ARC).$(LNG)
@endwhile

@ROUT Make.thr
include Make.inc

aobj=              # later this empty def will be overridden by
include atomic.inc # this include, which is generated by probing system
mySRCdir = $(SRCdir)/src/threads
dep = $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_pthreads.h \
      $(INCSdir)/atlas_threads.h $(INCSdir)/atlas_tprim.h 

@multidef rt 
   thread_exit goparallel
   cond_bcast cond_init cond_wait cond_free cond_signal
@skip thread_join thread_start
@skip   lock trylock unlock lock_init lock_destroy
   mutex_init mutex_lock mutex_unlock mutex_trylock mutex_free thread_yield
   IsFirstThreadedCall threadpool threadpool_misc
   SetGlobalAtomicCount ResetGlobalAtomicCount DecGlobalAtomicCount
   GetGlobalAtomicCount FreeGlobalAtomicCount
   SetGlobalAtomicCountDown DecGlobalAtomicCountDown FreeGlobalAtomicCountDown
   setmyaffinity
   tReverseAllBitsBV tInfoBV tGlb2locBV tSetRangeBV tFindUnsetBitBV tPrintBV
   tFreeBV tGetLocalBoundsBV tNewBV tGetTotBitsBV tScopeBitBV tSetUnsetBitBV
   @skip tSetUnsetBitBV tUnsetSetBitBV
   gatmctr_new gatmctr_dec gatmctr_free gatmctr_print
@endmultidef
@declare "obj = " y n
@skip   $(tstackfix)
@skip   ATL_lin0tlaunch.o ATL_log2tlaunch.o ATL_dyntlaunch.o
@skip   $(aobj) ATL_GetAtomicCount.o
   @whiledef rt
      ATL_@(rt).o
      @define rt2 @@(rt)@
   @endwhile
   ATL_atmctr_new.o ATL_atmctr_free.o
   ATL_atmctr_set_asm.o ATL_atmctr_set_mut.o
   ATL_atmctr_dec_asm.o ATL_atmctr_dec_mut.o
   ATL_atmctr_add_asm.o ATL_atmctr_add_mut.o
@enddeclare

all : lib
lib : lib.grd l3thr l2thr cbclib
cbclib :
	cd cbc ; make lib
@whiledef pre z d c s 
@skip @(pre)extthr=@(pre)lib
@(pre)lib2 : lib.grd $(@(pre)extthr)
	cd blas/level2 ; $(MAKE) @(pre)lib
@(pre)lib3 : lib.grd $(@(pre)extthr)
	cd blas/level3 ; $(MAKE) @(pre)lib
@skip	cd $(GMMdir) ; $(MAKE) @(pre)tlib
@skip @(pre)omp:
@skip	cd blas/level3/omp ; $(MAKE) @(pre)lib
@endwhile
@beginskip
killaobj:
	- rm -f $(aobj)
	- ar d $(ATLASlib) $(aobj)
@endskip

tprim.grd : 
	$(MAKE) -f Make.tprim tprim.grd
lib.grd : $(obj) tprim.grd
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(obj)
	$(RANLIB) $(ATLASlib)
	touch lib.grd
l2thr: dlib2 zlib2 clib2 slib2
l3thr: dlib3 zlib3 clib3 slib3

@beginskip
@whiledef asm amd64 win64 ia32 sparc ppc mips arm64
   @whiledef af DecAtomicCount ResetAtomicCount AndAtomicMask OrAtomicMask
ATL_@(af)_@(asm).o : $(mySRCdir)/ATL_@(af)_@(asm).S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_@(af)_@(asm).S
   @endwhile
@endwhile
@endskip

@whiledef rt lin0tlaunch log2tlaunch dyntlaunch
ATL_@(rt).o : $(dep) $(INCAdir)/atlas_taffinity.h $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_@(rt).c
@endwhile
@beginskip
@multidef rt2 
   SetAtomicCount_mut DecAtomicCount_mut ResetAtomicCount_mut 
   FreeAtomicCount_mut
   SetAtomicCount_arch FreeAtomicCount_arch GetAtomicCount
@endmultidef
@endskip
@whiledef rt2
ATL_@(rt2).o : $(dep) $(mySRCdir)/ATL_@(rt2).c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_@(rt2).c
@endwhile
@beginskip
@whiledef rt SetAtomicCount DecAtomicCount ResetAtomicCount FreeAtomicCount
ATL_@(rt)_mut_mut.o : $(dep) $(mySRCdir)/ATL_@(rt)_mut.c
	$(KC) $(KCFLAGS) -o $@ -DATL_@(rt)=ATL_@(rt)_mut \
               -c $(mySRCdir)/ATL_@(rt)_mut.c
@endwhile
@endskip
@whiledef rt set_asm dec_asm add_asm
ATL_atmctr_@(rt).o : $(dep) $(INCSdir)/atlas_atmctr.h \
                   $(mySRCdir)/ATL_atmctr_@(rt).S
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_atmctr_@(rt).S
@endwhile
@whiledef rt new free set_mut dec_mut add_mut
ATL_atmctr_@(rt).o : $(dep) $(INCSdir)/atlas_atmctr.h \
                   $(mySRCdir)/ATL_atmctr_@(rt).c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_atmctr_@(rt).c
@endwhile
@whiledef rt new free 
ATL_atmctr_@(rt)_mut_mut.o : $(dep) $(INCSdir)/atlas_atmctr.h \
                   $(mySRCdir)/ATL_atmctr_@(rt).c
	$(KC) $(KCFLAGS) -o $@ -DATL_ATM_ASM=0 \
              -DATL_atmctr_init=ATL_atmctr_init_mut \
              -DATL_atmctr_@(rt)=ATL_atmctr_@(rt)_mut \
              -c $(mySRCdir)/ATL_atmctr_@(rt).c
@endwhile
@whiledef rt set dec add
ATL_atmctr_@(rt)_mut_mut.o : $(dep) $(INCSdir)/atlas_atmctr.h \
                   $(mySRCdir)/ATL_atmctr_@(rt)_mut.c
	$(KC) $(KCFLAGS) -o $@ -DATL_ATM_ASM=0 \
              -DATL_atmctr_@(rt)=ATL_atmctr_@(rt)_mut \
              -c $(mySRCdir)/ATL_atmctr_@(rt)_mut.c
@endwhile

@skip ATL_gccstackfix.o : $(mySRCdir)/ATL_gccstackfix.S
@skip 	$(GOODGCC) $(CDEFS) -m32 -o $@ -c $(mySRCdir)/ATL_gccstackfix.S
@ROUT Make.l2thr
include Make.inc
mySRCdir = $(SRCdir)/src/threads/blas/level2
deps = $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_type.h \
@skip       $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_tlvl3.h \
       $(INCAdir)/atlas_pthreads.h $(INCSdir)/atlas_threads.h

all : lib
lib : dlib
double : dlib
@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z     c     d     s
   @addkeys ptyp=@(pre)
   @PTYP d s
@(pre)obj = ATL_@(pre)tgemv.o ATL_@(pre)tger.o
   @PTYP z c
@(pre)obj = ATL_@(pre)tgemv.o ATL_@(pre)tgerc.o ATL_@(pre)tgeru.o
   @PTYP !
@(pre)lib : @(pre)lib.grd
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd

   @whiledef rt tgemv
ATL_@(pre)@(rt).o : $(deps) $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) -I./ -D@(typ) -o $@ -c $(mySRCdir)/ATL_@(rt).c
   @endwhile
   @PTYP d s 
      @whiledef rt tger
ATL_@(pre)@(rt).o : $(deps) $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) -I./ -D@(typ) -o $@ -c $(mySRCdir)/ATL_@(rt).c
      @endwhile
   @PTYP c z
      @multidef sfd @^ -DConj_
      @whiledef sf u c
         @whiledef rt tger
ATL_@(pre)@(rt)@(sf).o : $(deps) $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) -I./ -D@(typ) @(sfd) -o $@ -c $(mySRCdir)/ATL_@(rt).c
         @endwhile
         @undef sfd
      @endwhile
   @PTYP !


   @undef typ
@endwhile

@ROUT Make.lathr
include Make.inc
mySRCdir = $(SRCdir)/src/threads/lapack

all : lib
ptlib : lib
tlib : lib
lib : dlib slib zlib clib
clean : sclean dclean cclean zclean

deps = $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_type.h \
       $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_tlvl3.h \
       $(INCAdir)/atlas_pthreads.h $(INCSdir)/atlas_threads.h

@skip iobj = ATL_bcIpivDecode.o
@whiledef pre z c d s
@(pre)obj = ATL_@(pre)tgetf2.o ATL_@(pre)tlaswp.o \
       ATL_@(pre)tgeqr2.o ATL_@(pre)tgeql2.o \
       ATL_@(pre)tgerq2.o ATL_@(pre)tgelq2.o
@endwhile

@skip ilib : ilib.grd
dlib : dlib.grd
slib : slib.grd
clib : clib.grd
zlib : zlib.grd
@whiledef pre z c d s
@(pre)tlib : @(pre)lib
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(PTLAPACKlib) $(@(pre)obj)
	$(RANLIB) $(PTLAPACKlib)
	touch @(pre)lib.grd
@(pre)clean:
	rm -f $(@(pre)obj) @(pre)lib.grd

@endwhile
@whiledef rt
ATL_@(rt).o : $(deps) $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) -I./ -o $@ -c $(mySRCdir)/ATL_@(rt).c
@endwhile

@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
@whiledef rt tgetf2 tlaswp tgeql2 tgeqr2
ATL_@(pre)@(rt).o : $(deps) $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) -I./ -D@(typ) -o $@ -c $(mySRCdir)/ATL_@(rt).c
@endwhile
ATL_@(pre)tgelq2.o : $(deps) $(mySRCdir)/ATL_tgeqr2.c
	$(KC) $(KCFLAGS) -I./ -D@(typ) -DBUILD_LQ2 -o $@ -c \
               $(mySRCdir)/ATL_tgeqr2.c
ATL_@(pre)tgerq2.o : $(deps) $(mySRCdir)/ATL_tgeql2.c
	$(KC) $(KCFLAGS) -I./ -D@(typ) -DBUILD_RQ2 -o $@ -c \
               $(mySRCdir)/ATL_tgeql2.c

   @undef typ
@endwhile
@ROUT Make.cbc
include Make.inc
mySRCdir = $(SRCdir)/src/threads/cbc
iobj = ATL_barrier.o  ATL_barrier_nopost0.o \
       ATL_cbc_barrier.o ATL_cbc_barrier_nopost0.o \
       ATL_post.o ATL_cbc_post.o \
       ATL_icomb_min.o ATL_icomb_max.o ATL_icomb_sum.o
@whiledef pre z c d s
@(pre)obj = ATL_@(pre)comb_min.o ATL_@(pre)comb_max.o ATL_@(pre)comb_sum.o \
            ATL_@(pre)comb_iamax.o \
            ATL_@(pre)comb_iamax_nopost0.o ATL_@(pre)cbc_comb_iamax_nopost0.o
@endwhile

lib : ilib slib dlib clib zlib
@whiledef pre i z c d s
@(pre)lib : @(pre)lib.grd

@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
@endwhile

@define fed @@
@define fed @-DDOFENCE=1@
@define fpr @@
@define fpr @cbc_@
@whiledef fpr
   @whiledef rt post 
ATL_@(fpr)@(rt).o : $(dep) $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) @(fed) -o $@ -c $(mySRCdir)/ATL_@(rt).c
   @endwhile
   @define ped @ -DDOPOST=1@
   @define ped @@
   @define psf @@
   @define psf @_nopost0@
   @whiledef psf
      @whiledef rt barrier 
ATL_@(fpr)@(rt)@(psf).o : $(dep) $(mySRCdir)/ATL_@(rt).c
	$(KC) $(KCFLAGS) @(fed)@(ped) -o $@ -c $(mySRCdir)/ATL_@(rt).c
      @endwhile
      @undef ped
   @endwhile
   @undef fed
@endwhile
@multidef typ DCPLX SCPLX DREAL SREAL SINT
@whiledef pre z c d s i
ATL_@(pre)cbc_comb_iamax_nopost0.o : $(dep) $(mySRCdir)/ATL_comb_iamax_nopost0.c
	$(KC) $(KCFLAGS) -o $@ -c -DDOFENCE=1 -D@(typ) \
              $(mySRCdir)/ATL_comb_iamax_nopost0.c
ATL_@(pre)comb_iamax_nopost0.o : $(dep) $(mySRCdir)/ATL_comb_iamax_nopost0.c
	$(KC) $(KCFLAGS) -o $@ -c -D@(typ) $(mySRCdir)/ATL_comb_iamax_nopost0.c
ATL_@(pre)comb_iamax.o : $(dep) $(mySRCdir)/ATL_comb_iamax.c
	$(KC) $(KCFLAGS) -o $@ -c -D@(typ) $(mySRCdir)/ATL_comb_iamax.c
   @whiledef cmb min max sum
ATL_@(pre)comb_@(cmb).o : $(dep) $(mySRCdir)/ATL_comb1.c
	$(KC) $(KCFLAGS) -o $@ -c -D@(typ) -DCOMB@up@(cmb) $(mySRCdir)/ATL_comb1.c
   @endwhile

   @undef typ
@endwhile
@ROUT Make.cbc2d
include Make.inc
mySRCdir = $(SRCdir)/src/threads/cbc2d
all : lib
lib : ilib
double    : dlib
single    : slib
complex   : clib
complex16 : zlib
clean : iclean dclean sclean cclean zclean
@whiledef pre s d c z
@(pre)lib:
@(pre)clean:
@endwhile

deps = $(INCSdir)/atlas_misc.h
@multidef rt barrier LU misc
@declare "iobj = " y n
   @whiledef rt
      @define rt2 @@(rt)@
      ATL_cbc2d_@(rt).o
   @endwhile
@enddeclare
iclean:
	rm -f $(iobj) ilib.grd
ilib : ilib.grd
ilib.grd : $(iobj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(iobj)
	$(RANLIB) $(ATLASlib)
	touch ilib.grd

@whiledef rt2
ATL_cbc2d_@(rt2).o : $(mySRCdir)/ATL_cbc2d_@(rt2).c $(deps)
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_cbc2d_@(rt2).c
@endwhile

@ROUT Make.l3thr
include Make.inc
mySRCdir = $(SRCdir)/src/threads/blas/level3

@ROUT Make.l3thr
all : lib
lib : ilib dlib slib zlib clib
double    : dlib
single    : slib
complex   : clib
complex16 : zlib
clean : iclean dclean sclean cclean zclean
deps = $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_type.h \
       $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_tlvl3.h \
       $(INCAdir)/atlas_pthreads.h $(INCSdir)/atlas_threads.h \
       $(INCAdir)/atlas_tsumm.h $(INCAdir)/atlas_tperf.h

@multidef crt her2k hemm herk
@multidef rtt trsm trmm symm NumGemmThreads 
@skip gemm_M gemm_N gemm_K gemm_rec
@multidef rt gemm syr2k syrk
@declare "iobj = " y n
   @whiledef rt
      ATL_Xt@(rt).o
      @define rt2 @@(rt)@
   @endwhile
@enddeclare

iclean:
	rm -f $(iobj) ilib.grd
ilib : ilib.grd
ilib.grd : $(iobj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(iobj)
	$(RANLIB) $(ATLASlib)
	touch ilib.grd

@whiledef rt2
ATL_Xt@(rt2).o : $(deps) $(mySRCdir)/ATL_Xt@(rt2).c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_Xt@(rt2).c
   @define rt @@(rt2)@
@endwhile

@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
@(pre)INCdep = $(deps) $(INCAdir)/atlas_@(pre)amm_sum.h

@declare "@(pre)obj = " y n
   ATL_@(pre)threadMM.o
   @whiledef rtt
      ATL_@(pre)t@(rtt).o
      @define rt2 @@(rtt)@
   @endwhile
   @whiledef rt
      ATL_@(pre)t@(rt).o
      @define rt2 @@(rt)@
   @endwhile
      ATL_@(pre)tammm_tNK.o
      ATL_@(pre)tammm_tK.o
      ATL_@(pre)tammm_sMK.o
      ATL_@(pre)tammm_sNK.o
      ATL_@(pre)tammm_tMN.o
      ATL_@(pre)tammm_gMNK.o
      ATL_@(pre)tgemm_amm.o
      ATL_@(pre)tammm_G.o
      ATL_@(pre)tsyrk_tN.o
      ATL_@(pre)tsyrk_amm.o
   @ptyp d s 
      ATL_@(pre)ttrsm_amm.o
   @ptyp c z 
      ATL_@(pre)therk_amm.o
      ATL_@(pre)therk_tN.o
      @whiledef crt
         ATL_@(pre)t@(crt).o
         @define cr2 @@(crt)@
      @endwhile
@skip   @ptyp d s
@skip      ATL_@(pre)tgemm_MKp.o ATL_@(pre)tgemm_rkK_Np.o
   @ptyp !
@skip      ATL_@(pre)tgemm_Mp.o ATL_@(pre)tgemm_Np.o ATL_@(pre)tgemm_Kp.o 
@skip      ATL_@(pre)tgemm_rkK.o
@skip      ATL_@(pre)tgemm_bigMN_Kp.o
@enddeclare

@(pre)lib : @(pre)lib.grd ilib.grd
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
@(pre)clean:
	rm -f $(@(pre)obj) @(pre)lib.grd

@multidef ar 
   ammm_gMNK ammm_sNK ammm_sMK ammm_tMN gemm_amm ammm_G syrk_tN syrk_amm
@endmultidef
@PTYP D S
@whiledef ar trsm_amm ammm_tNK ammm_tK
ATL_@(pre)t@(ar).o : $(deps) $(INCSdir)/atlas_ttypes.h $(mySRCdir)/ATL_t@(ar).c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_t@(ar).c
@endwhile
@PTYP C Z
@whiledef rt _tN _amm
ATL_@(pre)therk@(rt).o: $(deps) $(INCSdir)/atlas_ttypes.h $(mySRCdir)/ATL_tsyrk@(rt).c
	$(KC) $(KCFLAGS) -DConj_=1 -D@(typ) -o $@ -c $(mySRCdir)/ATL_tsyrk@(rt).c
@endwhile
@whiledef ar ammm_tNK ammm_tK
ATL_@(pre)t@(ar).o : $(deps) $(INCSdir)/atlas_ttypes.h $(mySRCdir)/ATL_t@(ar).c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_t@(ar).c
@endwhile
@whiledef cr2
   @define crt @@(cr2)@
ATL_@(pre)t@(cr2).o : $(deps) $(mySRCdir)/ATL_t@(cr2).c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_t@(cr2).c
@endwhile
@PTYP !
ATL_@(pre)tgemm_p.o : $(deps) $(mySRCdir)/ATL_tgemm_p.c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_tgemm_p.c
ATL_@(pre)threadMM.o : $(mySRCdir)/ATL_threadMM.c 
@skip                       $(INCAdir)/atlas_@(pre)tXover_$(NPROC)p.h
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_threadMM.c
@whiledef rtt2
ATL_@(pre)t@(rtt2).o : $(deps) $(mySRCdir)/ATL_t@(rtt2).c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_t@(rtt2).c
@endwhile
@whiledef rt2
   @define rt @@(rt2)@
ATL_@(pre)t@(rt2).o : $(deps) $(mySRCdir)/ATL_t@(rt).c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_t@(rt).c
@endwhile
@multidef rr tgemm_bigMN_Kp
@whiledef rr tgemm_MKp tgemm_Mp tgemm_Np tgemm_Kp tgemm_rkK_Np tgemm_rkK
ATL_@(pre)@(rr).o : $(deps) $(mySRCdir)/ATL_@(rr).c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_@(rr).c
@endwhile
ATL_@(pre)tgemm_CE.o : $(deps) slib $(mySRCdir)/ATL_tgemm.c
	$(KC) $(KCFLAGS) -D@(typ) -DFindingCE -o $@ \
               -c $(mySRCdir)/ATL_tgemm.c
ATL_@(pre)tgemm_bigMN_Kp_CE.o : $(deps) slib $(mySRCdir)/ATL_tgemm_bigMN_Kp.c
	$(KC) $(KCFLAGS) -D@(typ) -DFindingCE -o $@ \
               -c $(mySRCdir)/ATL_tgemm_bigMN_Kp.c


   @undef typ
   @killkeys ptyp
@endwhile

@ROUT Make.ammsrc
include Make.inc
mySRCdir = $(SRCdir)/src/blas/ammm

all : lib
lib : dlib slib zlib clib
tlib : dtlib stlib ztlib ctlib
double    : dlib
single    : slib
complex   : clib
complex16 : zlib

clean : dclean sclean cclean zclean
	rm -f KERNEL/*.o

@multidef typ DCPLX SCPLX DREAL SREAL
@multidef UPR D S D S
@multidef upr d s d s
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
@declare "@(pre)INCdep = " y n
   $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_type.h
   $(INCAdir)/atlas_@(upr)geamm_blk.h 
   $(INCAdir)/atlas_@(upr)geamm_kern.h 
   $(INCAdir)/atlas_@(upr)geamm_perf.h
   $(INCAdir)/atlas_@(pre)geamm_cm2am_a1.h
   $(INCAdir)/atlas_@(pre)geamm_ablk2cmat.h 
@enddeclare
@declare "@(pre)INCSQdep = " y n
   $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_type.h
   $(INCAdir)/atlas_@(upr)sqamm_blk.h 
   $(INCAdir)/atlas_@(upr)sqamm_kern.h
   $(INCAdir)/atlas_@(upr)sqamm_perf.h
   $(INCAdir)/atlas_@(pre)sqamm_cm2am_a1.h
   $(INCAdir)/atlas_@(pre)sqamm_ablk2cmat.h 
@enddeclare

@declare "@(pre)obj = " y n
   ATL_@(pre)GetAmmmInfo.o ATL_@(pre)GetAmmmInfoSQ.o 
   ATL_@(pre)GetRankKInfo.o ATL_@(pre)iploops.o ATL_@(pre)oploops.o
   ATL_@(pre)ammmK.o 
@skip   ATL_@(pre)ammmM.o ATL_@(pre)ammmN.o 
   ATL_@(pre)ammmKNMK.o ATL_@(pre)ammmKMNK.o ATL_@(pre)ammm_syrk.o
   ATL_@(pre)ammm.o ATL_@(pre)ammm_1b.o
   ATL_@(pre)ammm_rk2.o ATL_@(pre)aliased_rkK.o ATL_@(pre)ammm_rkK.o
   ATL_@(pre)ammm_IP.o ATL_@(pre)ammm_tN.o
   ATL_@(pre)syrk_OP.o ATL_@(pre)syrk_IP.o ATL_@(pre)syrk_amm.o
   @ptyp z c `ATL_@(pre)herk_OP.o ATL_@(pre)herk_IP.o ATL_@(pre)herk_amm.o`
   @ptyp d s `ATL_@(pre)rk4n4.o`
   @skip ATL_@(pre)ammmNMK.o ATL_@(pre)ammmMNK.o
   @skip ptyp d s `ATL_@(pre)ammmREC.o ATL_@(pre)ammmNKM.o`
@enddeclare

@(pre)lib : @(pre)lib.grd
	cd KERNEL ; $(PMAKE) -f @(upr)Make_amm @(upr)lib
@(pre)clean:
	rm -f $(@(pre)obj) @(pre)lib.grd

@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
@multidef rt oploops iploops ammm_tN syrk_OP syrk_IP syrk_amm
@whiledef rt ammm ammm_IP ammmKNMK ammmKMNK ammm_syrk ammm_rkK aliased_rkK
ATL_@(pre)@(rt).o : $(@(pre)INCdep) $(mySRCdir)/ATL_@(rt).c \
                    $(INCAdir)/atlas_@(pre)amm_sum.h
	$(@(UPR)KC) -D@(typ)=1 -o $@ -c $(@(pre)KCFLAGS) $(mySRCdir)/ATL_@(rt).c
@endwhile
@ptyp z c
   @multidef rt2 syrk_OP syrk_IP syrk_amm
   @whiledef rt herk_OP herk_IP herk_amm
ATL_@(pre)@(rt).o : $(@(pre)INCdep) $(mySRCdir)/ATL_@(rt2).c \
                    $(INCAdir)/atlas_@(pre)amm_sum.h
	$(@(UPR)KC) -D@(typ)=1 -DConj_=1 -o $@ -c $(@(pre)KCFLAGS) $(mySRCdir)/ATL_@(rt2).c
      @undef rt2
   @endwhile
   @whiledef rt ammmK ammm_1b ammm_rk2
ATL_@(pre)@(rt).o : $(@(pre)INCdep) $(mySRCdir)/ATL_c@(rt).c \
                    $(INCAdir)/atlas_@(pre)amm_sum.h
	$(@(UPR)KC) -D@(typ)=1 -o $@ -c $(@(pre)KCFLAGS) $(mySRCdir)/ATL_c@(rt).c
   @endwhile
@ptyp d s
   @multidef rt rk4n4 ammmREC ammmNKM ammmK 
   @multidef rt ammm_1b ammmNMK ammm_rk2 ammmMNK
@ptyp !
   @whiledef rt GetAmmmInfo GetRankKInfo
ATL_@(pre)@(rt).o : $(@(pre)INCdep) $(mySRCdir)/ATL_@(rt).c
	$(@(UPR)KC) -D@(typ)=1 -o $@ -c $(@(pre)KCFLAGS) $(mySRCdir)/ATL_@(rt).c
   @endwhile
   @whiledef rt GetAmmmInfoSQ
ATL_@(pre)@(rt).o : $(@(pre)INCSQdep) $(mySRCdir)/ATL_@(rt).c
	$(@(UPR)KC) -D@(typ)=1 -o $@ -c $(@(pre)KCFLAGS) $(mySRCdir)/ATL_@(rt).c
   @endwhile
   @killkeys ptyp
   @undef UPR
   @undef upr
   @undef typ
@endwhile

@ROUT Make.mmsrc
include Make.inc
mySRCdir = $(SRCdir)/src/blas/gemm

$(INCAdir)/atlas_type.h :
	cd $(SYSdir) ; $(MAKE) RunTyp


all : lib
lib : dlib slib zlib clib
tlib : dtlib stlib ztlib ctlib
double    : dlib
single    : slib
complex   : clib
complex16 : zlib


clean : dclean sclean cclean zclean
	rm -f KERNEL/*.o

@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
@(pre)INCdep = $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_type.h \
          $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h

@declare "@(pre)obj = " y n
   ATL_@(pre)MBJBmm.o ATL_@(pre)IBNBmm.o ATL_@(pre)IBJBmm.o 
@skip   ATL_@(pre)NBmm_b1.o ATL_@(pre)NBmm_b0.o ATL_@(pre)NBmm_bX.o
   ATL_@(pre)gemm.o ATL_@(pre)GetNB.o ATL_@(pre)GetNCNB.o
   ATL_@(pre)gemmNN.o ATL_@(pre)gemmNT.o ATL_@(pre)gemmTN.o ATL_@(pre)gemmTT.o
   ATL_@(pre)NCmmIJK.o ATL_@(pre)NCmmJIK.o
   ATL_@(pre)NCmmIJK_c.o ATL_@(pre)NCmmJIK_c.o
@beginskip
   @whiledef ta T N
      @whiledef tb T N
      ATL_@(pre)NCmm@(ta)@(tb)_a1_b1.o ATL_@(pre)NCmm@(ta)@(tb)_a1_b0.o
      ATL_@(pre)NCmm@(ta)@(tb)_a1_bX.o
      ATL_@(pre)NCmm@(ta)@(tb)_aX_b0.o ATL_@(pre)NCmm@(ta)@(tb)_aX_bX.o
      ATL_@(pre)NCCUmm@(ta)@(tb)_K.o ATL_@(pre)NCCUmm@(ta)@(tb).o 
      @endwhile
   @endwhile
@endskip
   ATL_@(pre)aliased_gemm.o 
   ATL_@(pre)AgemmNN.o ATL_@(pre)AgemmNT.o 
   ATL_@(pre)AgemmTN.o ATL_@(pre)AgemmTT.o
@skip   ATL_@(pre)gemmRecNN.o ATL_@(pre)gemmRecNT.o 
@skip   ATL_@(pre)gemmRecTN.o ATL_@(pre)gemmRecTT.o
   ATL_@(pre)mmJIK.o ATL_@(pre)mmIJK.o ATL_@(pre)mmJKI.o
   @ptyp d s
      ATL_@(pre)mmK.o ATL_@(pre)mmBPP.o ATL_@(pre)mmJITcp.o
      @whiledef al a1 aX
         ATL_@(pre)col2blk_@(al).o ATL_@(pre)row2blkT_@(al).o 
      @endwhile
      @whiledef be b0 bn1 b1 bX
         ATL_@(pre)putblk_@(be).o
      @endwhile
   @ptyp z c
      ATL_@(pre)gereal2cplx.o ATL_@(pre)mmJITcp.o
      ATL_@(pre)AgemmNC.o ATL_@(pre)AgemmTC.o 
      ATL_@(pre)AgemmCN.o ATL_@(pre)AgemmCT.o ATL_@(pre)AgemmCC.o
@skip      ATL_@(pre)gemmRecNC.o ATL_@(pre)gemmRecTC.o 
@skip      ATL_@(pre)gemmRecCN.o ATL_@(pre)gemmRecCT.o ATL_@(pre)gemmRecCC.o
      ATL_@(pre)CNBmm_b0.o ATL_@(pre)CNBmm_b1.o ATL_@(pre)CNBmm_bX.o
      ATL_@(pre)gemmNC.o ATL_@(pre)gemmCN.o
      ATL_@(pre)gemmTC.o ATL_@(pre)gemmCT.o ATL_@(pre)gemmCC.o
      @whiledef al a1 aX aXi0
         ATL_@(pre)col2blk_@(al).o ATL_@(pre)row2blkT_@(al).o  
         ATL_@(pre)col2blkConj_@(al).o ATL_@(pre)row2blkC_@(al).o  
      @endwhile
      @whiledef be b0 bn1 b1 bX bXi0
         ATL_@(pre)putblk_@(be).o
      @endwhile
   @ptyp !
@enddeclare
@declare "@(pre)tobj = " y n
   ATL_@(pre)tgemmNN.o ATL_@(pre)tgemmNT.o 
   ATL_@(pre)tgemmTN.o ATL_@(pre)tgemmTT.o
   @ptyp z c
      ATL_@(pre)tgemmNC.o ATL_@(pre)tgemmCN.o
      ATL_@(pre)tgemmTC.o ATL_@(pre)tgemmCT.o ATL_@(pre)tgemmCC.o
   @ptyp !
@enddeclare

   @killkeys ptyp
@endwhile

auxillib :
	cd $(AUXdir) ; $(MAKE) lib
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
@(pre)clean :
	rm -f $(@(pre)obj) @(pre)*.grd
@(pre)cleanuplib :
	cd KERNEL ; $(MAKE) -f @(pre)Makefile @(pre)lib

@(pre)lib : 
	$(MAKE) auxillib @(pre)cleanuplib @(pre)usergemm
@skip @PTYP D
@skip 	- $(MAKE) ass.grd
@skip @PTYP !
	$(PMAKE) @(pre)lib.grd
@(pre)lib.grd : $(@(pre)obj) ATL_@(pre)smallK_mm.o ATL_@(pre)small_mm.o \
   @PTYP D S
           ATL_@(pre)big_mm.o ATL_@(pre)bignork_mm.o
   @PTYP C Z
           ATL_@(pre)big_mm.o
   @PTYP !
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
@(pre)tlib : @(pre)tlib.grd
@(pre)tlib.grd : $(@(pre)tobj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)tobj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)tlib.grd

#
# This target no longer needed w/o support for GEMM replacement, but
# keep around for now as empty
#
@(pre)usergemm :
@skip	cd $(UMMdir) ; $(MAKE) @(pre)usermm

@(pre)usermm :
	touch @(pre)usermm
@PTYP S D
@multidef DA -DTransA_ -DNoTransA_
@whiledef TA T N
   @multidef DB -DTransB_ -DNoTransB_
   @whiledef TB T N
ATL_@(pre)tgemm@(TA)@(TB).o : $(mySRCdir)/ATL_gemmXX.c $(@(pre)INCdep) $(INCAdir)/atlas_tcacheedge.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) \
              @(DA) @(DB) -DATL_TGEMM $(mySRCdir)/ATL_gemmXX.c
      @whiledef rout Agemm gemm gemmRec
ATL_@(pre)@(rout)@(TA)@(TB).o : $(mySRCdir)/ATL_@(rout)XX.c $(@(pre)INCdep) $(INCAdir)/atlas_cacheedge.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) \
              @(DA) @(DB) $(mySRCdir)/ATL_@(rout)XX.c
      @endwhile
      @undef DB
   @endwhile
   @undef DA
@endwhile

@whiledef rout mmIJK mmJIK mmJKI mmJITcp mmBPP mmK IBJBmm MBJBmm IBNBmm
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rout).c
@endwhile

@whiledef al 1 X
   @whiledef rout col2blk row2blkT
ATL_@(pre)@(rout)_a@(al).o : $(mySRCdir)/ATL_@(rout).c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DALPHA@up@(al) $(mySRCdir)/ATL_@(rout).c
   @endwhile
@endwhile
@whiledef rout IJK IJK_c JIK JIK_c
ATL_@(pre)NCmm@(rout).o : $(mySRCdir)/ATL_NCmm@(rout).c $(@(pre)INCdep) \
                  $(INCAdir)/@(pre)Xover.h $(INCAdir)/atlas_cacheedge.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ)   $(mySRCdir)/ATL_NCmm@(rout).c
@endwhile

@PTYP Z C
@multidef DA -DConjTransA_ -DTransA_ -DNoTransA_
@whiledef TA C T N
   @multidef DB -DConjTransB_ -DTransB_ -DNoTransB_
   @whiledef TB C T N
ATL_@(pre)tgemm@(TA)@(TB).o : $(mySRCdir)/ATL_gemmXX.c $(@(pre)INCdep) \
   @PTYP Z
                   $(INCAdir)/atlas_tcacheedge.h $(INCAdir)/atlas_zdNKB.h
   @PTYP C
                   $(INCAdir)/atlas_tcacheedge.h $(INCAdir)/atlas_csNKB.h
   @PTYP Z C
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) \
              @(DA) @(DB) -DATL_TGEMM $(mySRCdir)/ATL_gemmXX.c
      @whiledef rout gemm gemmRec
ATL_@(pre)@(rout)@(TA)@(TB).o : $(mySRCdir)/ATL_gemmXX.c $(@(pre)INCdep) $(INCAdir)/atlas_cacheedge.h \
   @PTYP Z
                   $(INCAdir)/atlas_zdNKB.h
   @PTYP C
                   $(INCAdir)/atlas_csNKB.h
   @PTYP Z C
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) \
              @(DA) @(DB) $(mySRCdir)/ATL_gemmXX.c
      @endwhile
      @whiledef rout Agemm
ATL_@(pre)@(rout)@(TA)@(TB).o : $(mySRCdir)/ATL_AgemmXX.c $(@(pre)INCdep) $(INCAdir)/atlas_cacheedge.h \
   @PTYP Z
                   $(INCAdir)/atlas_zdNKB.h
   @PTYP C
                   $(INCAdir)/atlas_csNKB.h
   @PTYP Z C
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) @(DA) @(DB) \
              -DALIASED_GEMM $(mySRCdir)/ATL_AgemmXX.c
      @endwhile
      @undef DB
   @endwhile
   @undef DA
@endwhile
ATL_@(pre)gereal2cplx.o : $(mySRCdir)/ATL_gereal2cplx.c
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_gereal2cplx.c

@whiledef rout IBJBmm MBJBmm IBNBmm
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_@(rout).c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_@(rout).c
@endwhile

@whiledef rout mmJIK mmIJK mmJKI mmK mmJITcp
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_c@(rout).c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_c@(rout).c
@endwhile

@whiledef al 1 Xi0 X
   @whiledef rout col2blk row2blkT
ATL_@(pre)@(rout)_a@(al).o : $(mySRCdir)/ATL_c@(rout).c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DALPHA@up@(al) $(mySRCdir)/ATL_c@(rout).c
   @endwhile
ATL_@(pre)col2blkConj_a@(al).o : $(mySRCdir)/ATL_ccol2blk.c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DALPHA@up@(al) \
              -DConj_ $(mySRCdir)/ATL_ccol2blk.c
ATL_@(pre)row2blkC_a@(al).o : $(mySRCdir)/ATL_crow2blkT.c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DALPHA@up@(al) \
              -DConj_ $(mySRCdir)/ATL_crow2blkT.c

@endwhile
@whiledef rout IJK IJK_c JIK JIK_c
ATL_@(pre)NCmm@(rout).o : $(mySRCdir)/ATL_cNCmm@(rout).c $(@(pre)INCdep) \
                           $(INCAdir)/@(pre)Xover.h $(INCAdir)/atlas_cacheedge.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ)   $(mySRCdir)/ATL_cNCmm@(rout).c
@endwhile

@whiledef bn b0 b1 bX
ATL_@(pre)CNBmm_@(bn).o : $(mySRCdir)/ATL_CNBmm_@(bn).c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_CNBmm_@(bn).c
@endwhile
@PTYP !
ATL_@(pre)GetNCNB.o : $(mySRCdir)/ATL_GetNCNB.c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_GetNCNB.c
ATL_@(pre)GetNB.o : $(mySRCdir)/ATL_GetNB.c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_GetNB.c

@ptyp d s `@multidef be 0 1 n1 X `
@ptyp z c `@multidef be 0 1 n1 X Xi0`
@whiledef be
ATL_@(pre)putblk_b@(be).o : $(mySRCdir)/ATL_putblk.c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DBETA@up@(be) $(mySRCdir)/ATL_putblk.c
@endwhile

ATL_@(pre)aliased_gemm.o : $(mySRCdir)/ATL_gemm.c $(mySRCdir)/ATL_AgemmXX.c \
                       $(@(pre)INCdep) \
                       $(INCAdir)/@(pre)Xover.h $(INCAdir)/atlas_cacheedge.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DALIASED_GEMM -I./ \
              $(mySRCdir)/ATL_gemm.c

@whiledef rout big_mm bignork_mm small_mm smallK_mm
ATL_@(pre)@(rout).o : $(mySRCdir)/ATL_gemm.c $(mySRCdir)/ATL_gemmXX.c $(@(pre)INCdep) \
                  $(INCAdir)/@(pre)Xover.h $(INCAdir)/atlas_cacheedge.h 
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -D@up@(rout) -I./ \
              $(mySRCdir)/ATL_gemm.c
@endwhile
@ptyp  c
@define pp @cs@
@ptyp  z
@define pp @zd@
@ptyp  z c
@whiledef rout big_mm
ATL_@(pp)@(rout).o : $(mySRCdir)/ATL_gemm.c $(mySRCdir)/ATL_gemmXX.c $(@(pre)INCdep) \
                  $(INCAdir)/@(pre)Xover.h $(INCAdir)/atlas_cacheedge.h \
                  $(INCAdir)/atlas_@(pp)NKB.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DCR@up@(rout) -I./ \
              $(mySRCdir)/ATL_gemm.c
@endwhile
@undef pp
@PTYP !
ATL_@(pre)gemm.o : $(mySRCdir)/ATL_gemm.c $(mySRCdir)/ATL_gemmXX.c $(@(pre)INCdep) \
              $(INCAdir)/atlas_cacheedge.h $(INCAdir)/@(pre)Xover.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DATLGEMM -I./ \
              $(mySRCdir)/ATL_gemm.c
ATL_@(pre)FindCE_mm.o : $(mySRCdir)/ATL_gemm.c $(mySRCdir)/ATL_gemmXX.c $(@(pre)INCdep) \
                        $(INCAdir)/@(pre)Xover.h
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) -DFindingCE -I./ $(mySRCdir)/ATL_gemm.c

ATL_@(pre)NCgemm.o : $(mySRCdir)/ATL_NCgemm.c $(@(pre)INCdep)
	$(@up@(pre)KC) -o $@ -c $(@(pre)KCFLAGS) -D@(typ) $(mySRCdir)/ATL_NCgemm.c

   @undef typ
   @killkeys ptyp
@endwhile
@multidef typ DCPLX SCPLX
@multidef pr2 d s
@multidef pr1 z c
@whiledef pre zd cs
ATL_@(pre)FindCE_mm.o : $(mySRCdir)/ATL_gemm.c $(mySRCdir)/ATL_gemmXX.c $(@(pr1)INCdep) \
                        $(INCAdir)/@(pr1)Xover.h $(@(pr2)INCdep)
	$(@up@(pr1)KC) -o $@ -c $(@(pr1)KCFLAGS) -D@(typ) -DFindingJITCPCE -I./ $(mySRCdir)/ATL_gemm.c
   @undef typ
   @undef pr1
   @undef pr2
@endwhile
ass.grd:
	- $(MAKE) ATL_dasrc2blk_NB_aX.o ATL_dasrc2blk_NB_a1.o
	- $(ARCHIVER) $(ARFLAGS) $(ATLASlib) \
                      ATL_dasrc2blk_NB_aX.o ATL_dasrc2blk_NB_a1.o
	- $(RANLIB) $(ATLASlib)

ATL_dasrc2blk_NB_aX.o: $(mySRCdir)/ATL_asrc2blk_NB.c
	$(GOODGCC) $(CDEFS) -o $@ -c -x assembler-with-cpp \
                    -DDREAL -DALPHAX $(mySRCdir)/ATL_asrc2blk_NB.c
ATL_dasrc2blk_NB_a1.o: $(mySRCdir)/ATL_asrc2blk_NB.c
	$(GOODGCC) $(CDEFS) -o $@ -c -x assembler-with-cpp \
                    -DDREAL -DALPHA1 $(mySRCdir)/ATL_asrc2blk_NB.c

@skip .c.o:
@skip 	$(MCC) -c $(CDEFS) $(MMFLAGS) $<
@ROUT Make.Clp
include Make.inc
mySRCdir = $(SRCdir)/interfaces/lapack/C/src

iobj = clapack_ilaenv.o
itobj = clapack_itlaenv.o
@define pt @@
@whiledef pt t
   @whiledef pre z c d s
      @addkeys ptyp=@(pre)
      @declare "@(pre)@(pt)obj = " y y
         @multidef rt @(pt)geqrf @(pt)geqlf @(pt)gerqf @(pt)gelqf @(pt)gels
         @multidef rt @(pt)gesv @(pt)getrf getrs
         @whiledef rt posv potrf potrs trtri lauum potri getri
            clapack_@(pre)@(rt).o
         @endwhile
         @ptyp d s `clapack_@(pre)lamch.o`
      @enddeclare

      @killkeys ptyp
   @endwhile
@endwhile
all : lib ptlib
lib : dlib slib zlib clib ilib
ptlib : tlib
tlib : dtlib stlib ztlib ctlib itlib
tclean :  dtclean stclean ztclean ctclean itclean
clean : dclean sclean zclean cclean iclean

@define tl @@
@define tl @PT@
@define ptdef @@
@define ptdef @-DATL_USEPTHREADS@
@define pt @@
@whiledef pt t
   @whiledef pre z c d s i
@(pre)@(pt)clean :
	rm -f $(@(pre)@(pt)obj) @(pre)@(pt)lib.grd
@(pre)@(pt)lib :
	$(PMAKE) @(pre)@(pt)lib.grd
@(pre)@(pt)lib.grd : $(@(pre)@(pt)obj)
	$(ARCHIVER) $(ARFLAGS) $(@(tl)LAPACKlib) $(@(pre)@(pt)obj)
	$(RANLIB) $(@(tl)LAPACKlib)
	touch @(pre)@(pt)lib.grd

   @endwhile

   @multidef typ DCPLX SCPLX DREAL SREAL
   @whiledef pre z c d s
      @multidef rt lamch geqrf geqlf gerqf gelqf gels
      @whiledef rt posv potrf potrs gesv getrf getrs trtri lauum potri getri
clapack_@(pre)@(pt)@(rt).o : $(mySRCdir)/clapack_@(pre)@(rt).c
	$(ICC) $(ICCFLAGS) @(ptdef) -o $@ -c $(mySRCdir)/clapack_@(pre)@(rt).c
      @endwhile
      @undef typ
   @endwhile
   @whiledef rt laenv
clapack_i@(pt)@(rt).o : $(mySRCdir)/clapack_i@(rt).c
	$(ICC) $(ICCFLAGS) @(ptdef) -o $@ -c $(mySRCdir)/clapack_i@(rt).c
   @endwhile
   @undef ptdef
   @undef tl
@endwhile
@ROUT Make.lib0
include Make.inc

TMPdir = $(LIBdir)/tmplib
ARlib = $(LIBdir)/libatlas

comblib :
	mkdir $(TMPdir)
	cd $(TMPdir) ; ar x $(ATLASlib)
	cd $(TMPdir) ; ar x $(F77BLASlib)
	cd $(TMPdir) ; ar x $(CBLASlib)
	cd $(TMPdir) ; ar r $(mySRCdir)/libatlas_$(ARCH).a *.o
	rm -rf $(TMPdir)
#
# Need to change all .o to .obj
#
combar2lib:
	mkdir $(TMPdir)
	cd $(TMPdir) ; ar x $(ATLASlib)
	cd $(TMPdir) ; ar x $(F77BLASlib)
	cd $(TMPdir) ; ar x $(CBLASlib)
	cd $(TMPdir) ; lib /out:$(mySRCdir)/\libatlas_$(ARCH).lib *.o
	rm -rf $(TMPdir)

ar2lib :
	mkdir $(TMPdir)
	cd $(TMPdir) ; ar x $(ARlib).a
	cd $(TMPdir) ; lib /out:$(ARlib).lib *.o
	rm -rf $(TMPdir)
@ROUT Make.l2kern
include Make.inc

@multidef typ DREAL SREAL 
@whiledef pre d s
@(pre)obj = ATL_@(pre)gpmvUN_a1_x1_b0_y1.o ATL_@(pre)gpmvLN_a1_x1_b0_y1.o \
            ATL_@(pre)gpmvUN_a1_x1_b1_y1.o ATL_@(pre)gpmvLN_a1_x1_b1_y1.o \
            ATL_@(pre)gpmvUN_a1_x1_bX_y1.o ATL_@(pre)gpmvLN_a1_x1_bX_y1.o
@(pre)lib : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)

   @multidef UD Upper_ Lower_
   @whiledef uplo U L
      @whiledef be 0 1 X
ATL_@(pre)gpmv@(uplo)N_a1_x1_b@(be)_y1.o : $(mySRCdir)/ATL_gpmv_a1_x1_y1.c
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o $@ -D@(typ) -D@(UD) -DBETA@(be) \
              $(mySRCdir)/ATL_gpmv_a1_x1_y1.c
      @endwhile
      @undef UD
   @endwhile
   @undef typ


@endwhile
@multidef typ DCPLX SCPLX 
@whiledef pre z c
@(pre)obj = ATL_@(pre)gpmvUN_a1_x1_b0_y1.o ATL_@(pre)gpmvLN_a1_x1_b0_y1.o \
            ATL_@(pre)gpmvUN_a1_x1_b1_y1.o ATL_@(pre)gpmvLN_a1_x1_b1_y1.o \
            ATL_@(pre)gpmvUN_a1_x1_bX_y1.o ATL_@(pre)gpmvLN_a1_x1_bX_y1.o \
            ATL_@(pre)gpmvUN_a1_x1_bXi0_y1.o ATL_@(pre)gpmvLN_a1_x1_bXi0_y1.o
@(pre)lib : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)

   @multidef UD Upper_ Lower_
   @whiledef uplo U L
      @whiledef be 0 1 X Xi0
ATL_@(pre)gpmv@(uplo)N_a1_x1_b@(be)_y1.o : $(mySRCdir)/ATL_gpmv_a1_x1_y1.c
	$(@up@(pre)KC) $(@(pre)KCFLAGS) -c -o $@ -D@(typ) -D@(UD) -DBETA@up@(be) \
              $(mySRCdir)/ATL_gpmv_a1_x1_y1.c
      @endwhile
      @undef UD
   @endwhile
   @undef typ


@endwhile
@ROUT Make.lib
@extract -b @(topd)/gen.inc what=crsetup
include Make.inc
LD = ld
mySRCdir = $(SRCdir)/lib
#
# override with libatlas.so only when atlas is built to one lib
#
DYNlibs = liblapack.so libf77blas.so libcblas.so libatlas.so 
PTDYNlibs = liblapack.so libptf77blas.so libptcblas.so libatlas.so 
CDYNlibs = liblapack.so libcblas.so libatlas.so 
CPTDYNlibs = liblapack.so libptcblas.so libatlas.so 

@skip # small automagical detection from Pearu Peterson
@skip GCC_LIB = `dirname \`$(GOODGCC) -v 2>&1 | grep specs | sed 's/Reading specs from /'\``
VER=@(ver)
tmpd = RCW_tMp
tarnam = atlas$(VER)_$(ARCH)
tar : tarfile
tarfile : $(tarnam).tar.bz2
outdef=
$(tarnam).tar.bz2 :
	mkdir $(ARCH)
	cd $(ARCH) ; mkdir include lib
	cp $(TOPdir)/doc/LibReadme.txt $(ARCH)/README
	cp $(TOPdir)/Make.$(ARCH) $(ARCH)/.
	cp $(BINdir)/INSTALL_LOG/SUMMARY.LOG $(ARCH)/.
	cp $(INCSdir)/cblas.h $(ARCH)/include/.
	cp $(INCSdir)/clapack.h $(ARCH)/include/.
@whiledef lib lapack cblas f77blas atlas
	cp $(LIBdir)/lib@(lib).a $(ARCH)/lib/.
@endwhile
	- cp $(LIBdir)/libptcblas.a $(ARCH)/lib/.
	- cp $(LIBdir)/libptf77blas.a $(ARCH)/lib/.
	$(TAR) cf $(tarnam).tar $(ARCH)
	rm -rf $(ARCH)
	$(BZIP) --best $(tarnam).tar
@skip	mv $(tarnam).tar.gz $(tarnam).tgz

# ===================================================================
# The following commands are to build dynamic/shared objects on Linux
# using the gnu gcc or ld
# ===================================================================
ptshared: fat_ptshared
shared : fat_shared
cptshared : fat_cptshared
cshared : fat_cshared
@beginskip
ptshared :
	- rm -f libatlas.so liblapack.so
	$(MAKE) libatlas.so libptf77blas.so libf77blas.so \
                libptcblas.so libcblas.so liblapack.so
shared :
	- rm -f libatlas.so liblapack.so
	$(MAKE) libatlas.so libf77blas.so libcblas.so liblapack.so
cptshared :
	- rm -f libatlas.so libclapack.so
	$(MAKE) libatlas.so libclapack.so libptcblas.so libcblas.so
cshared :
	- rm -f libatlas.so libclapack.so
	$(MAKE) libatlas.so libclapack.so libcblas.so
@endskip

@define odef  @@
@define odef  @outdef="$(outdef)"@
@define ldwin @@
@define ldwin @--output-def=$(outdef)@
@define gcwin @@
@define gcwin @-Wl,--output-def=$(outdef)@
@define sf @@
@define sf @_WIN@
@whiledef sf
#
# These are a bunch of different ways to attempt to build a .so, try them all
#
LDTRY@(sf):
	$(LD) $(LDFLAGS) -shared -soname $(LIBINSTdir)/$(outso) -o $(outso) \
           -rpath-link $(LIBINSTdir) @(ldwin) \
           --whole-archive $(libas) --no-whole-archive $(LIBS)
GCCTRY@(sf):
	$(GOODGCC) -shared -o $(outso) @(gcwin) \
           -Wl,"rpath-link $(LIBINSTdir)" \
           -Wl,--whole-archive $(libas) -Wl,--no-whole-archive $(LIBS)
GCCTRY_norp@(sf):
	$(GOODGCC) -shared -o $(outso) @(gcwin) \
           -Wl,--whole-archive $(libas) -Wl,--no-whole-archive $(LIBS)
#
# TRYALL@(sf) is going to just try a bunch of library combinations that may work
# on gnu platforms, hopefully one does.  It also tests doing the link by
# LD or gcc; some places don't use the gnu LD command, but gcc may still work
#
TRYALL@(sf) :
	if $(MAKE) GCCTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="$(F77SYSLIB) -lc $(LIBS) -lgcc" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt gcc and all libs" ; \
        elif $(MAKE) LDTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="$(F77SYSLIB) -lc $(LIBS) -lgcc" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt ld and all sys libs" ; \
	elif $(MAKE) GCCTRY_norp@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="$(F77SYSLIB) -lc $(LIBS) -lgcc" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt gcc and all libs and no rpath" ; \
        elif $(MAKE) GCCTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="-lc $(LIBS) -lgcc" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt gcc and all C libs" ; \
        elif $(MAKE) LDTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="-lc $(LIBS) -lgcc" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt ld and -lc -lgcc" ; \
        elif $(MAKE) GCCTRY_norp@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="-lc $(LIBS) -lgcc" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt gcc and all C libs and no rpath" ; \
        elif $(MAKE) GCCTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="$(F77SYSLIB) -lc $(LIBS)" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt gcc and all libs except -lgcc" ; \
        elif $(MAKE) LDTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="$(F77SYSLIB) -lc $(LIBS)" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt all libs except -lgcc" ; \
        elif $(MAKE) GCCTRY_norp@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="$(F77SYSLIB) -lc $(LIBS)" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt gcc and all libs except -lgcc, no rpath" ; \
        elif $(MAKE) GCCTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="-lc $(LIBS)" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt gcc and -lc" ; \
        elif $(MAKE) LDTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="-lc $(LIBS)" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt ld and -lc" ; \
        elif $(MAKE) GCCTRY_norp@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="-lc $(LIBS)" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt gcc and -lc, no rpath" ; \
        elif $(MAKE) LDTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="$(LIBS)" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt ld" ; \
        elif $(MAKE) GCCTRY_norp@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
        LIBS="$(F77SYSLIB) -lkernel32" LIBINSTdir="$(LIBINSTdir)"; then \
           echo "$(outso) built wt fortran and kernel32, no rpath" ; \
        else \
           $(MAKE) GCCTRY@(sf) outso="$(outso)" libas="$(libas)" @(odef) \
           LIBS="$(LIBS)" LIBINSTdir="$(LIBINSTdir)" ; \
        fi
   @undef ldwin
   @undef gcwin
   @undef odef
@endwhile

@beginskip
libatlas.so : libatlas.a
	$(MAKE) TRYALL outso=libatlas.so libas=libatlas.a \
                LIBINSTdir="$(LIBINSTdir)"
@define pt @@
@whiledef pt pt
   @whiledef lib lapack clapack f77blas cblas
lib@(pt)@(lib).so : lib@(pt)@(lib).a
	$(MAKE) TRYALL outso=lib@(pt)@(lib).so libas=lib@(pt)@(lib).a \
                LIBINSTdir="$(LIBINSTdir)"
   @endwhile
@endwhile
@endskip
#
# Builds one shared lib from all ATLAS files
#
fat_ptshared :                              # threaded target
	$(MAKE) TRYALL outso=libtatlas.so \
                libas="libptlapack.a libptf77blas.a libptcblas.a libatlas.a" \
                LIBINSTdir="$(LIBINSTdir)"
fat_shared :                                # serial target
	$(MAKE) TRYALL outso=libsatlas.so \
                libas="liblapack.a libf77blas.a libcblas.a libatlas.a" \
                LIBINSTdir="$(LIBINSTdir)"
#
# Builds shared lib, not include fortran codes from LAPACK
#
fat_cptshared : libptclapack.a              # threaded target
	$(MAKE) TRYALL outso=libtatlas.so \
                libas="libptclapack.a libptcblas.a libatlas.a" \
                LIBINSTdir="$(LIBINSTdir)"
fat_cshared : libclapack.a                  # unthreaded target
	$(MAKE) TRYALL outso=libsatlas.so \
                libas="libclapack.a libcblas.a libatlas.a" \
                LIBINSTdir="$(LIBINSTdir)"

libclapack.a : liblapack.a
	rm -rf clapack libclapack.a
	mkdir clapack
	cd clapack ; ar x ../liblapack.a
	rm -f clapack/*f77wrap* clapack/*C2F*
	ar r libclapack.a clapack/ATL_* clapack/clapack_*
	rm -rf clapack
libptclapack.a : libptlapack.a
	rm -rf clapack libptclapack.a
	mkdir clapack
	cd clapack ; ar x ../libptlapack.a
	rm -f clapack/*f77wrap* clapack/*C2F*
	ar r libptclapack.a clapack/ATL_* clapack/clapack_*
	rm -rf clapack

#  ========================================================================
#  The following commands build DLLs on Windows, as well as generating the
#  .def files that MSVC++'s LIB needs to create import libraries.  My
#  understanding is that after this process, you can issue a commands like:
#     LIB /nologo /MACHINE:[x86,X64] /def/lib[s,t]atlas.def
#  To create the import libraries.  For further details, see:
#     https://sf.net/projects/math-atlas/forums/forum/1026734/topic/5349864
#  ========================================================================
dlls: sdlls
ptdlls: tdlls
tdlls:                          # threaded target
	$(MAKE) TRYALL_WIN outso=libtatlas.dll outdef=libtatlas.def \
                libas="libptlapack.a libptf77blas.a libptcblas.a libatlas.a" \
                LIBINSTdir="$(LIBINSTdir)"
sdlls:                          # serial target
	$(MAKE) TRYALL_WIN outso=libsatlas.dll outdef=libsatlas.def \
                libas="liblapack.a libf77blas.a libcblas.a libatlas.a" \
                LIBINSTdir="$(LIBINSTdir)"
cdlls: ctdlls csdlls
ctdlls: libptclapack.a          # threaded target
	$(MAKE) TRYALL_WIN outso=libtatlas.dll outdef=libtatlas.def \
                libas="libptclapack.a libptcblas.a libatlas.a" \
                LIBINSTdir="$(LIBINSTdir)"
csdlls: libclapack.a            # serial target
	$(MAKE) TRYALL_WIN outso=libsatlas.dll outdef=libsatlas.def \
                libas="libclapack.a libcblas.a libatlas.a" \
                LIBINSTdir="$(LIBINSTdir)"
@beginskip
dlls:   libatlas.dll libf77blas.dll libcblas.dll liblapack.dll
ptdlls: libatlas.dll libptf77blas.dll libptcblas.dll liblapack.dll
cdlls: libatlas.dll libcblas.dll libclapack.dll
ptcdlls: libatlas.dll libptcblas.dll libclapack.dll

libatlas.dll : libatlas.a
	ld $(LDFLAGS) -shared -soname $(LIBINSTdir)/libatlas.dll \
           -o libatlas.dll -rpath-link $(LIBINSTdir) \
           --whole-archive libatlas.a --no-whole-archive -lc $(LIBS)
libcblas.dll : libcblas.a libatlas.dll
	ld $(LDFLAGS) -shared -soname $(LIBINSTdir)/libcblas.dll \
           -o libcblas.dll -rpath-link $(LIBINSTdir) \
          --whole-archive libcblas.a --no-whole-archive libatlas.dll -lc $(LIBS)
libf77blas.dll : libf77blas.a libatlas.dll
	ld $(LDFLAGS) -shared -soname $(LIBINSTdir)/libf77blas.dll \
           -o libf77blas.dll -rpath-link $(LIBINSTdir) --whole-archive \
           libf77blas.a --no-whole-archive libatlas.dll $(F77SYSLIB) -lc $(LIBS)
libptcblas.dll : libptcblas.a libatlas.dll
	ld $(LDFLAGS) -shared -soname $(LIBINSTdir)/libptcblas.dll \
           -o libptcblas.dll -rpath-link $(LIBINSTdir) --whole-archive \
           libptcblas.a --no-whole-archive libatlas.dll -lc $(LIBS)
libptf77blas.dll : libptf77blas.a libatlas.dll
	ld $(LDFLAGS) -shared -soname $(LIBINSTdir)/libptf77blas.dll \
           -o libptf77blas.dll -rpath-link $(LIBINSTdir) --whole-archive \
           libptf77blas.a --no-whole-archive libatlas.a $(F77SYSLIB) -lc $(LIBS)
liblapack.dll : liblapack.a libatlas.dll libf77blas.dll libcblas.dll
	ld $(LDFLAGS) -shared -soname $(LIBINSTdir)/liblapack.dll \
            -o liblapack.dll  -rpath-link $(LIBINSTdir) --whole-archive \
           liblapack.a --no-whole-archive libf77blas.dll libcblas.dll \
           libatlas.dll $(F77SYSLIB) -lc $(LIBS)
libclapack.dll : libclapack.a libatlas.dll libcblas.dll
	ld $(LDFLAGS) -shared -soname $(LIBINSTdir)/libclapack.dll \
           -o libclapack.dll -rpath-link $(LIBINSTdir) --whole-archive \
           libclapack.a --no-whole-archive libcblas.dll libatlas.dll -lc $(LIBS)
@endskip

#  =======================================================================
#  The following commands are to build dynamib libraries on OS X (in BETA)
#  =======================================================================
@beginskip
dylib :
	$(MAKE) libatlas.dylib libf77blas.dylib libcblas.dylib liblapack.dylib
ptdylib :
	$(MAKE) libatlas.dylib libptf77blas.dylib libptcblas.dylib \
                liblapack.dylib
cdylib :
	$(MAKE) libatlas.dylib libcblas.dylib libclapack.dylib
ptcdylib :
	$(MAKE) libatlas.dylib libptcblas.dylib libclapack.dylib
@endskip
dylib :
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../liblapack.a 
	cd $(tmpd) ; ar x ../libf77blas.a
	cd $(tmpd) ; ar x ../libcblas.a 
	cd $(tmpd) ; ar x ../libatlas.a
	cd $(tmpd) ; $(LIBTOOL) -dynamic -o ../libsatlas.dylib \
        -install_name $(LIBINSTdir)/libsatlas.dylib -current_version $(VER) \
        -compatibility_version $(VER) *.o $(LIBS) $(F77SYSLIB)
	rm -rf $(tmpd)
ptdylib :
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../libptlapack.a 
	cd $(tmpd) ; ar x ../libptf77blas.a 
	cd $(tmpd) ; ar x ../libptcblas.a 
	cd $(tmpd) ; ar x ../libatlas.a
	cd $(tmpd) ; $(LIBTOOL) -dynamic -o ../libtatlas.dylib \
        -install_name $(LIBINSTdir)/libtatlas.dylib -current_version $(VER) \
        -compatibility_version $(VER) *.o $(LIBS) $(F77SYSLIB)
	rm -rf $(tmpd)
cdylib : libclapack.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../libclapack.a 
	cd $(tmpd) ; ar x ../libcblas.a 
	cd $(tmpd) ; ar x ../libatlas.a
	cd $(tmpd) ; $(LIBTOOL) -dynamic -o ../libsatlas.dylib \
        -install_name $(LIBINSTdir)/libsatlas.dylib -current_version $(VER) \
        -compatibility_version $(VER) *.o $(LIBS)
	rm -rf $(tmpd)
ptcdylib : libptclapack.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../libptclapack.a
	cd $(tmpd) ; ar x ../libptcblas.a 
	cd $(tmpd) ; ar x ../libatlas.a
	cd $(tmpd) ; $(LIBTOOL) -dynamic -o ../libtatlas.dylib \
        -install_name $(LIBINSTdir)/libtatlas.dylib -current_version $(VER) \
        -compatibility_version $(VER) *.o $(LIBS)
	rm -rf $(tmpd)

@beginskip
libatlas.dylib : libatlas.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../libatlas.a
	rm -f $(tmpd)ATL_[z,c,d,s]ref*.o
	cd $(tmpd) ; $(LIBTOOL) -dynamic -o ../libatlas.dylib \
        -install_name $(LIBINSTdir)/libatlas.dylib -current_version $(VER) \
        -compatibility_version $(VER) *.o $(LIBS)
	rm -rf $(tmpd)
libptcblas.dylib : libatlas.dylib libptcblas.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../libptcblas.a
	cd $(tmpd) ; $(LIBTOOL) -dynamic -o ../libptcblas.dylib \
           -install_name $(LIBINSTdir)/libptcblas.dylib \
           -compatibility_version $(VER) -current_version $(VER) \
           *.o ../libatlas.dylib $(LIBS)
	rm -rf $(tmpd)
libcblas.dylib : libatlas.dylib libcblas.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../libcblas.a
	cd $(tmpd) ; $(LIBTOOL) -dynamic -o ../libcblas.dylib \
           -install_name $(LIBINSTdir)/libcblas.dylib \
           -compatibility_version $(VER) -current_version $(VER) \
           *.o ../libatlas.dylib $(LIBS)
	rm -rf $(tmpd)
libptf77blas.dylib : libatlas.dylib libptf77blas.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../libptf77blas.a
	cd $(tmpd) ; $(LIBTOOL) -dynamic -o ../libptf77blas.dylib \
           -install_name $(LIBINSTdir)/libptf77blas.dylib \
           -compatibility_version $(VER) -current_version $(VER) \
           *.o ../libatlas.dylib $(F77SYSLIB) $(LIBS)
	rm -rf $(tmpd)
libf77blas.dylib : libatlas.dylib libf77blas.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../libf77blas.a
	cd $(tmpd) ; libtool -dynamic -o ../libf77blas.dylib \
           -install_name $(LIBINSTdir)/libf77blas.dylib \
           -compatibility_version @(ver) -current_version @(ver) \
           *.o ../libatlas.dylib $(F77SYSLIB) $(LIBS)
	rm -rf $(tmpd)
liblapack.dylib : libf77blas.dylib libcblas.dylib libatlas.dylib liblapack.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../liblapack.a
	cd $(tmpd) ; libtool -dynamic -o ../liblapack.dylib \
           -install_name $(LIBINSTdir)/liblapack.dylib \
           -compatibility_version $(VER) -current_version $(VER) \
           *.o ../libf77blas.dylib ../libcblas.dylib ../libatlas.dylib \
           $(F77SYSLIB) $(LIBS)
	rm -rf $(tmpd)
@endskip
@beginskip
libptlapack.dylib : libptf77blas.dylib libptcblas.dylib libatlas.dylib \
                    liblapack.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../liblapack.a
	cd $(tmpd) ; libtool -dynamic -o ../libptlapack.dylib \
           -install_name $(LIBINSTdir)/libptlapack.dylib \
           -compatibility_version $(VER) -current_version $(VER) \
           *.o ../libptf77blas.dylib ../libptcblas.dylib ../libatlas.dylib \
           $(F77SYSLIB) $(LIBS)
	rm -rf $(tmpd)
@endskip
libclapack.dylib : libcblas.dylib libatlas.dylib liblapack.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../liblapack.a
	rm -f $(tmpd)/*C2F $(tmpd)/*f77wrap*
	cd $(tmpd) ; libtool -dynamic -o ../libclapack.dylib \
           -install_name $(LIBINSTdir)/libclapack.dylib \
           -compatibility_version $(VER) -current_version $(VER) \
           *.o ../libcblas.dylib ../libatlas.dylib $(LIBS)
	rm -rf $(tmpd)
@beginskip
libptclapack.dylib : libcblas.dylib libatlas.dylib liblapack.a
	rm -rf $(tmpd) ; mkdir $(tmpd)
	cd $(tmpd) ; ar x ../liblapack.a
	rm -f $(tmpd)/*C2F $(tmpd)/*f77wrap*
	cd $(tmpd) ; libtool -dynamic -o ../libptclapack.dylib \
           -compatibility_version @(ver) -current_version @(ver) \
           *.o ../libptcblas.dylib ../libatlas.dylib \
           $(F77SYSLIB) $(LIBS)
	rm -rf $(tmpd)
@endskip
xtst_lp: $(DYNlibs)
	$(ICC) $(CDEFS) -o $@ $(mySRCdir)/qr.c $(DYNlibs) -Wl,--rpath ./
xtst : $(DYNlibs)
	$(ICC) $(CDEFS) -o $@ $(mySRCdir)/test_dynlink.c $(DYNlibs) \
           -Wl,--rpath ./

xtry_lp:
	$(ICC) $(CDEFS) -o $@ $(mySRCdir)/qr.c libsatlas.so -Wl,--rpath ./
xtry_lp_pt:
	$(ICC) $(CDEFS) -o $@ $(mySRCdir)/qr.c libtatlas.so -Wl,--rpath ./
xtry :
	$(ICC) $(CDEFS) -o $@ $(mySRCdir)/test_dynlink.c libsatlas.so \
           -Wl,--rpath ./
xtry_pt :
	$(ICC) $(CDEFS) -o $@ $(mySRCdir)/test_dynlink.c libtatlas.so \
           -Wl,--rpath ./
@beginskip
# 
# atlas.so and xdynsymtst together comprise a small missing symbol detection
# probe sent in by Matthew Brett.  This is just to check that ATLAS doesn't
# define any external symbols it doesn't need.  Actually getting a good
# dynamic lib for your platform may require a different command, and
# almost certainly requires additional compiler flags beyond the defaults
#
atlas.so : libatlas.a libcblas.a liblapack.a libf77blas.a
	ld -shared -o $@ --whole-archive libatlas.a libcblas.a \
           liblapack.a libf77blas.a --no-whole-archive -L ${GCC_LIB} -dn -lg2c

xdynsymtest: atlas.so
	gcc $(CDEFS) -o $@ $(mySRCdir)/test_dynlink.c atlas.so -Wl,--rpath
@endskip
@ROUT Make.dummy Make.l1ptblas Make.l2ptblas
#
# Presently, ATLAS threaded L1BLAS get massive slowdown, and the threaded
# L2BLAS mostly don't exist (and also get slowdown on some problem sizes), 
# so don't build these routines even though they exist.
#
slib:
dlib:
clib:
zlib:
lib:
all:
@ROUT Make.f77refblas
include Make.inc
mySRCdir = $(SRCdir)/src/blas/f77reference

@multidef upr d s d s
@whiledef pre z c d s
   @addkeys ptyp=@(pre)
   @multidef @(pre)rout
      @(pre)axpy @(pre)copy @(pre)scal @(pre)swap @(pre)rotg i@(pre)amax
      @(pre)gbmv
      @(pre)tbmv @(pre)tbsv @(pre)tpmv @(pre)tpsv
      @(pre)gemv @(pre)syr2k
      @(pre)syrk @(pre)trmm @(pre)trmv @(pre)trsm @(pre)trsv 
      @(pre)gemm @(pre)symm
      @PTYP C Z
         @(upr)@(pre)asum @(upr)@(pre)nrm2 @(pre)dotu @(pre)dotc
         @(pre)@(upr)scal @(pre)@(upr)rot @(upr)cabs1
         @(pre)gerc @(pre)geru @(pre)hbmv @(pre)hpmv @(pre)hpr @(pre)hpr2
         @(pre)hemv @(pre)her2 @(pre)her2k @(pre)her @(pre)herk
         @(pre)hemm
      @PTYP D S
         @(pre)nrm2 @(pre)asum @(pre)dot @(pre)rot @(pre)rotm @(pre)rotmg 
         @(pre)ger @(pre)sbmv @(pre)spmv  @(pre)spr2 @(pre)spr @(pre)symv  
         @(pre)syr @(pre)syr2 
      @PTYP S
         sdsdot
      @PTYP D
         dsdot
      @PTYP !
   @endmultidef
   @declare "@(pre)obj = " y y
      @whiledef @(pre)rout
         @(@(pre)rout).o
         @define @(pre)rout1 @@(@(pre)rout)@
      @endwhile
   @enddeclare
   @undef upr
   @killkeys ptyp
@endwhile

all : lib

lib : zlib clib dlib slib lsame.o xerbla.o
	$(ARCHIVER) $(ARFLAGS) $(FBLASlib) lsame.o xerbla.o
	$(RANLIB) $(FBLASlib)
@whiledef pre z c d s
@(pre)lib : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(FBLASlib) $(@(pre)obj)
	$(RANLIB) $(FBLASlib)
@endwhile

@whiledef rt lsame xerbla
@(rt).o : $(mySRCdir)/@(rt).f
	$(F77) $(F77FLAGS) -o @(rt).o -c $(mySRCdir)/@(rt).f
@endwhile

@whiledef pre z c d s
   @whiledef @(pre)rout1
@(@(pre)rout1).o : $(mySRCdir)/@(@(pre)rout1).f
	$(F77) $(F77FLAGS) -o @(@(pre)rout1).o -c $(mySRCdir)/@(@(pre)rout1).f
   @endwhile
@endwhile
@ROUT Make.l3omp
include Make.inc
mySRCdir = $(SRCdir)/src/threads/blas/level3/omp

all : lib
lib : ilib dlib slib zlib clib
double    : dlib
single    : slib
complex   : clib
complex16 : zlib
clean : iclean dclean sclean cclean zclean

deps = $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_type.h \
       $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_tlvl3.h \
       $(INCAdir)/atlas_pthreads.h $(INCSdir)/atlas_threads.h

iobj = ATL_Xtompsyrk.o

iclean:
	rm -f $(iobj) ilib.grd
ilib : ilib.grd
ilib.grd : $(iobj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(iobj)
	$(RANLIB) $(ATLASlib)
	touch ilib.grd

ATL_Xtompsyrk.o : $(deps) $(mySRCdir)/ATL_Xtompsyrk.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_Xtompsyrk.c


@multidef crt omphemm ompher2k ompherk
@multidef rtt ompsymm omptrsm omptrmm 
@multidef rt ompgemm ompsyr2k ompsyrk

@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre  z c d s 
   @addkeys ptyp=@(pre)
@(pre)INCdep = $(deps) $(INCAdir)/atlas_@(pre)amm_sum.h

@declare "@(pre)obj = " y n
   @whiledef rtt
      ATL_@(pre)t@(rtt).o
      @define rt2 @@(rtt)@
   @endwhile
   @whiledef rt
      ATL_@(pre)t@(rt).o
      @define rt2 @@(rt)@
   @endwhile
   @ptyp c z
      @whiledef crt
         ATL_@(pre)t@(crt).o
         @define cr2 @@(crt)@
      @endwhile
   @ptyp !
@enddeclare

@(pre)lib : @(pre)lib.grd ilib 
@(pre)lib.grd : $(@(pre)obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(@(pre)obj)
	$(RANLIB) $(ATLASlib)
	touch @(pre)lib.grd
@(pre)clean:
	rm -f $(@(pre)obj) @(pre)lib.grd

@PTYP C Z
@whiledef cr2
   @define crt @@(cr2)@
ATL_@(pre)t@(cr2).o : $(deps) $(mySRCdir)/ATL_t@(cr2).c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_t@(cr2).c
@endwhile
@PTYP !
@whiledef rtt2
ATL_@(pre)t@(cr2).o : $(deps) $(mySRCdir)/ATL_t@(cr2).c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_t@(cr2).c
@endwhile
@whiledef rt2
   @define rt @@(rt2)@
ATL_@(pre)t@(rt2).o : $(deps) $(mySRCdir)/ATL_t@(rt).c
	$(KC) $(KCFLAGS) -D@(typ) -o $@ -c $(mySRCdir)/ATL_t@(rt).c
@endwhile
   @undef typ
@endwhile
@ROUT Make.latune
include Make.inc
mySRCdir = $(SRCdir)/tune/lapack

@multidef typ DCPLX SCPLX DREAL SREAL
@whiledef pre z c d s
res/ATL_@(pre)GetNB_geqrf.h : x@(pre)lanbsrch
	./x@(pre)lanbsrch -oc res/ATL_@(pre)GetNB_geqrf
res/ATL_@(pre)tGetNB_geqrf.h : x@(pre)lanbsrch_pt
	./x@(pre)lanbsrch_pt -oc res/ATL_@(pre)tGetNB_geqrf
   @define df @@
   @define df @-DATL_USEPTHREADS@
   @define suf @@
   @define suf @_pt@
   @define pt @@
   @whiledef pt PT
      @whiledef rt lanbsrch
x@(pre)@(rt)@(suf) : @(pre)@(rt)@(suf).o @(pre)lapack @(pre)tstlib@(suf) @(pre)l3lib@(suf) \
                  @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf) 
	$(FLINKER) $(FCLINKFLAGS) -o $@ @(pre)@(rt)@(suf).o \
                   $(TESTlib) $(@(pt)LAPACKlib) $(@(pt)CBLASlib) $(@(pt)F77BLASlib) \
                   $(ATLASlib) $(LIBS)

@(pre)@(rt)@(suf).o : $(mySRCdir)/@(rt).c $(INCSdir)/atlas_misc.h \
                   $(INCAdir)/atlas_@(pre)amm_sum.h $(INCSdir)/atlas_lvl3.h 
	$(KC) -o $@ -c $(KCFLAGS) -DATLCINT @(df) -D@(typ) $(mySRCdir)/@(rt).c
      @endwhile
      @multidef rt
         @(pre)l2lib@(suf) @(pre)l1lib@(suf) @(pre)cblas@(suf)
         @(pre)tstlib@(suf) @(pre)l3lib@(suf)
      @endmultidef
      @whiledef rt 
@(rt) : 
	cd $(BINdir) ; $(MAKE) @(rt)
      @endwhile
      @undef suf
      @undef df
   @endwhile
$(MMTdir)/res/@(pre)MMRES.sum :
	cd $(MMTdir) ; $(MAKE) res/@(pre)MMRES.sum
@(pre)lapack :
	cd $(BINdir) ; $(MAKE) @(pre)lapack
   @undef typ
@endwhile
@ROUT Make.tim
include Make.inc
mySRCdir = $(SRCdir)/timing
resd = $(BLDdir)/timing/res
basf = $(mySRCdir)/script.base
extM = $(BINdir)/xextract -langM -b $(basf)
N1=200
NN=2000
Ni=200
pre=d
repl=4
blas="all"
lapack="geqrf getrf potrf"
rkK=0
$(BINdir)/xextract :
	cd $(BINdir) ; make xextract
all: tvrun_rng.sh tvrun_lst.sh tvcmprep.sh tvgenmf_lst.sh tvgenmf_rng.sh \
     tvcmpver.sh
tvec.grd :
	cd $(BINdir) ; make tvec_all
	touch tvec.grd
deps = $(BINdir)/xextract tvec.grd $(basf)
@whiledef rt genmf
   @multidef rng rng list
   @whiledef rg rng lst
tv@(rt)_@(rg).sh : $(deps)
	$(extM) -o $@ rout=tv@(rt) type=@(rng)
	chmod u+x $@
      @undef rng
   @endwhile
@endwhile
tvrun_rng.sh : $(deps)
	$(extM) -o $@ rout=tvrun type=rng
	chmod u+x $@
tvrun_lst.sh : $(deps)
	$(extM) -o $@ rout=tvrun type=list
	chmod u+x $@
@whiledef rt cmpver cmprep
tv@(rt).sh : $(deps)
	$(extM) -o $@ rout=tv@(rt) type=list
	chmod u+x $@
@endwhile
@ROUT !
